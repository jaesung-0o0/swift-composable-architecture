{"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"title":"Essentials","identifiers":["doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Testing","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance"]},{"title":"State management","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"],"title":"Testing"},{"title":"Integrations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit"]},{"title":"Classes","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ActorIsolated","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestClock","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestScheduler","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithRandomNumberGenerator"]},{"title":"Protocols","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpReflectable","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpRepresentable","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpStringConvertible","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestDependencyKey"]},{"title":"Structures","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyClock","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ButtonState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ButtonStateAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CasePath","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ConfirmationDialogState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DateGenerator","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependency","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyValues","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DiffFormat","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FireAndForget","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Identified","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateScheduler","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/OpenURLEffect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SuspensionError","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIScheduler","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UUIDGenerator","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedScheduler"]},{"title":"Variables","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/uncheckedUseMainSerialExecutor"]},{"title":"Functions","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/XCTAssertNoDifference(_:_:_:file:line:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/XCTModify(_:case:_:_:file:line:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/XCTUnwrap(_:case:_:file:line:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/customDump(_:name:indent:maxDepth:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/customDump(_:to:name:indent:maxDepth:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/diff(_:_:format:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(_:)-2jy2a","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(_:)-5ivuf","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(case:from:)-82wth","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(case:from:)-89rof","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withDependencies(_:operation:)-3vrqy","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withDependencies(_:operation:)-4uz6m","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withDependencies(from:_:operation:file:line:)-262kg","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withDependencies(from:_:operation:file:line:)-2y5dq","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withDependencies(from:operation:file:line:)-2qx0c","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withDependencies(from:operation:file:line:)-8e74m","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withEscapedDependencies(_:)-5xvi3","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withEscapedDependencies(_:)-74wb7","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withMainSerialExecutor(operation:)-79jpc","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withMainSerialExecutor(operation:)-7fqt1"]},{"title":"Operators","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/..(_:_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-1zudw","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-270qe","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-2n5ny","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-2r5nq","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-4nrup","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-4v1w8","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-82yvm","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-8h7yj","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-9oq0w","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-9tuff","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/~=(_:_:)"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ActionSheetState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnySchedulerOf","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FailingScheduler","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FailingSchedulerOf","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArrayOf","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateSchedulerOf","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestSchedulerOf","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreOf","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedSchedulerOf"],"title":"Type Aliases"},{"title":"Enumerations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ButtonStateBuilder","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ButtonStateRole","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ConfirmationDialogStateTitleVisibility","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyContext"]},{"title":"Extended Modules","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CoreImage","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CoreLocation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CoreMotion","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dispatch","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Foundation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Photos","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Speech","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreKit","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UserNotifications","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UserNotificationsUI","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_Concurrency"]}],"sections":[],"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Additional-Resources","type":"heading","text":"Additional Resources"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions"}]}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture","isActive":true}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This library provides a few core tools that can be used to build applications of varying purpose and","type":"text"},{"type":"text","text":" "},{"text":"complexity. It provides compelling stories that you can follow to solve many problems you encounter","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"day-to-day when building applications, such as:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"State management","type":"text"}]}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"How to manage the state of your application using simple value types, and share state across"},{"type":"text","text":" "},{"text":"many screens so that mutations in one screen can be immediately observed in another screen.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Composition"}],"type":"strong"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to break down large features into smaller components that can be extracted to their own,"},{"text":" ","type":"text"},{"text":"isolated modules and be easily glued back together to form the feature.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Side effects"}]}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"How to let certain parts of the application talk to the outside world in the most testable and","type":"text"},{"text":" ","type":"text"},{"text":"understandable way possible.","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Testing","type":"text"}],"type":"strong"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to not only test a feature built in the architecture, but also write integration tests for"},{"text":" ","type":"text"},{"type":"text","text":"features that have been composed of many parts, and write end-to-end tests to understand how"},{"type":"text","text":" "},{"type":"text","text":"side effects influence your application. This allows you to make strong guarantees that your"},{"type":"text","text":" "},{"text":"business logic is running in the way you expect.","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Ergonomics"}],"type":"strong"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to accomplish all of the above in a simple API with as few concepts and moving parts as"},{"type":"text","text":" "},{"text":"possible.","type":"text"}]}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture"]}],"hierarchy":{"paths":[[]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"seeAlsoSections":[{"abstract":[{"type":"text","text":"The collection of videos from "},{"identifier":"https:\/\/www.pointfree.co","isActive":true,"type":"reference"},{"type":"text","text":" that dive deep into the"},{"type":"text","text":" "},{"text":"development of the library.","type":"text"}],"title":"Related Documentation","identifiers":["https:\/\/www.pointfree.co\/collections\/composable-architecture"]}],"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"metadata":{"roleHeading":"Framework","modules":[{"name":"ComposableArchitecture"}],"role":"collection","title":"ComposableArchitecture","externalID":"ComposableArchitecture","symbolKind":"module"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture//(_:)-2r5nq":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"\/","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"text":"Root","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-2r5nq","abstract":[{"type":"text","text":"Returns a case path for the given embed function."}],"title":"\/(_:)","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-2r5nq"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UUIDGenerator":{"url":"\/documentation\/composablearchitecture\/uuidgenerator","kind":"symbol","title":"UUIDGenerator","abstract":[{"type":"text","text":"A dependency that generates a UUID."}],"role":"symbol","navigatorTitle":[{"text":"UUIDGenerator","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UUIDGenerator"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UUIDGenerator"},"doc://ComposableArchitecture/documentation/ComposableArchitecture//(_:)-9oq0w":{"title":"\/(_:)","abstract":[{"type":"text","text":"Returns a void case path for a case with no associated value."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":"?"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-9oq0w","role":"symbol","url":"\/documentation\/composablearchitecture\/\/(_:)-9oq0w"},"doc://ComposableArchitecture/documentation/ComposableArchitecture//(_:)-4nrup":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"\/","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-4nrup","kind":"symbol","abstract":[{"type":"text","text":"Returns a void case path for a case with no associated value."}],"title":"\/(_:)","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-4nrup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance":{"abstract":[{"type":"text","text":"Learn how to improve the performance of features built in the Composable Architecture."}],"url":"\/documentation\/composablearchitecture\/performance","type":"topic","role":"article","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","title":"Performance"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyContext":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyContext","url":"\/documentation\/composablearchitecture\/dependencycontext","title":"DependencyContext","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DependencyContext"}],"role":"symbol","abstract":[{"type":"text","text":"A context for a collection of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyValues"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"DependencyContext","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyManagement":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","type":"topic","url":"\/documentation\/composablearchitecture\/dependencymanagement","role":"article","title":"Dependencies","abstract":[{"text":"Learn how to register dependencies with the library so that they can be immediately accessible from","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"any reducer."}],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DiffFormat":{"role":"symbol","url":"\/documentation\/composablearchitecture\/diffformat","title":"DiffFormat","abstract":[{"type":"text","text":"Describes how to format a difference between two values when using "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/diff(_:_:format:)","isActive":true,"type":"reference"},{"text":".","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DiffFormat","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DiffFormat","navigatorTitle":[{"kind":"identifier","text":"DiffFormat"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Photos":{"type":"topic","role":"collection","title":"Photos","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Photos","kind":"symbol","abstract":[],"url":"\/documentation\/composablearchitecture\/photos"},"https://github.com/pointfreeco/swift-composable-architecture":{"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","title":"GitHub Repo","titleInlineContent":[{"type":"text","text":"GitHub Repo"}],"url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","type":"link"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedSchedulerOf":{"url":"\/documentation\/composablearchitecture\/unimplementedschedulerof","role":"symbol","abstract":[{"type":"text","text":"A convenience type to specify an "},{"type":"codeVoice","code":"UnimplementedScheduler"},{"text":" by the scheduler it wraps rather than","type":"text"},{"type":"text","text":" "},{"text":"by the time type and options type.","type":"text"}],"navigatorTitle":[{"text":"UnimplementedSchedulerOf","kind":"identifier"}],"title":"UnimplementedSchedulerOf","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedSchedulerOf","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"UnimplementedSchedulerOf","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/diff(_:_:format:)":{"abstract":[{"text":"Detects differences between two given values by comparing their mirrors and optionally returns","type":"text"},{"text":" ","type":"text"},{"text":"a formatted string describing it.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/diff(_:_:format:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"diff"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"format","kind":"externalParam"},{"kind":"text","text":": "},{"text":"DiffFormat","kind":"typeIdentifier","preciseIdentifier":"s:10CustomDump10DiffFormatV"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"title":"diff(_:_:format:)","url":"\/documentation\/composablearchitecture\/diff(_:_:format:)","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftConcurrency":{"title":"Adopting Swift concurrency","type":"topic","abstract":[{"text":"Learn how to write safe, concurrent effects using Swift’s structured concurrency.","type":"text"}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","role":"article","url":"\/documentation\/composablearchitecture\/swiftconcurrency"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestSchedulerOf":{"abstract":[{"type":"text","text":"A convenience type to specify a "},{"type":"codeVoice","code":"TestScheduler"},{"text":" by the scheduler it wraps rather than by the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"time type and options type."}],"type":"topic","url":"\/documentation\/composablearchitecture\/testschedulerof","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestSchedulerOf","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"TestSchedulerOf","kind":"identifier"}],"title":"TestSchedulerOf","navigatorTitle":[{"text":"TestSchedulerOf","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AlertState":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AlertState"}],"url":"\/documentation\/composablearchitecture\/alertstate","type":"topic","title":"AlertState","abstract":[{"type":"text","text":"A data type that describes the state of an alert that can be shown to the user. The "},{"code":"Action","type":"codeVoice"},{"text":" ","type":"text"},{"text":"generic is the type of actions that can be sent from tapping on a button in the alert.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AlertState"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SuspensionError":{"url":"\/documentation\/composablearchitecture\/suspensionerror","abstract":[{"type":"text","text":"An error that indicates there are actively suspending sleeps scheduled on the clock."}],"type":"topic","navigatorTitle":[{"text":"SuspensionError","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SuspensionError","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SuspensionError"}],"title":"SuspensionError"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/withEscapedDependencies(_:)-74wb7":{"kind":"symbol","type":"topic","abstract":[{"text":"Propagates the current dependencies to an escaping context.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/withescapeddependencies(_:)-74wb7","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withEscapedDependencies(_:)-74wb7","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withEscapedDependencies","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(("},{"text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV12ContinuationV","text":"Continuation","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"}],"title":"withEscapedDependencies(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/withEscapedDependencies(_:)-5xvi3":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withEscapedDependencies","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Continuation","preciseIdentifier":"s:12Dependencies16DependencyValuesV12ContinuationV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"}],"abstract":[{"text":"Propagates the current dependencies to an escaping context.","type":"text"}],"url":"\/documentation\/composablearchitecture\/withescapeddependencies(_:)-5xvi3","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withEscapedDependencies(_:)-5xvi3","role":"symbol","title":"withEscapedDependencies(_:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UserNotifications":{"role":"collection","title":"UserNotifications","abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UserNotifications","url":"\/documentation\/composablearchitecture\/usernotifications"},"doc://ComposableArchitecture/tutorials/MeetComposableArchitecture":{"title":"Meet the Composable Architecture","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","kind":"overview","url":"\/tutorials\/meetcomposablearchitecture","type":"topic","role":"overview","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a"},{"text":" ","type":"text"},{"text":"consistent and understandable way, with composition, testing, and ergonomics in mind. It can be","type":"text"},{"type":"text","text":" "},{"text":"used in SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/extract(_:)-2jy2a":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extract","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Root","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Value","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> ("},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"text":"?","kind":"text"}],"abstract":[{"text":"Returns a function that can attempt to extract associated values from the given enum case","type":"text"},{"text":" ","type":"text"},{"text":"initializer.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/extract(_:)-2jy2a","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(_:)-2jy2a","deprecated":true,"title":"extract(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestScheduler":{"title":"TestScheduler","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestScheduler","kind":"symbol","url":"\/documentation\/composablearchitecture\/testscheduler","navigatorTitle":[{"text":"TestScheduler","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A scheduler whose current time and execution can be controlled in a deterministic manner."}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestScheduler","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreKit":{"type":"topic","url":"\/documentation\/composablearchitecture\/storekit","kind":"symbol","role":"collection","abstract":[],"title":"StoreKit","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreKit"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/customDump(_:name:indent:maxDepth:)":{"url":"\/documentation\/composablearchitecture\/customdump(_:name:indent:maxdepth:)","type":"topic","kind":"symbol","title":"customDump(_:name:indent:maxDepth:)","abstract":[{"type":"text","text":"Dumps the given value’s contents using its mirror to standard output."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"customDump","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":"?, ","kind":"text"},{"text":"indent","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"maxDepth","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/customDump(_:name:indent:maxDepth:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/withDependencies(_:operation:)-4uz6m":{"url":"\/documentation\/composablearchitecture\/withdependencies(_:operation:)-4uz6m","kind":"symbol","abstract":[{"text":"Updates the current dependencies for the duration of a synchronous operation.","type":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withDependencies(_:operation:)-4uz6m","title":"withDependencies(_:operation:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withDependencies"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">((","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"operation"},{"kind":"text","text":": () "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnySchedulerOf":{"navigatorTitle":[{"kind":"identifier","text":"AnySchedulerOf"}],"type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnySchedulerOf","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnySchedulerOf","kind":"identifier"}],"title":"AnySchedulerOf","kind":"symbol","url":"\/documentation\/composablearchitecture\/anyschedulerof","abstract":[{"type":"text","text":"A convenience type to specify an "},{"type":"codeVoice","code":"AnyScheduler"},{"type":"text","text":" by the scheduler it wraps rather than by the"},{"text":" ","type":"text"},{"text":"time type and options type.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/XCTUnwrap(_:case:_:file:line:)":{"url":"\/documentation\/composablearchitecture\/xctunwrap(_:case:_:file:line:)","type":"topic","kind":"symbol","title":"XCTUnwrap(_:case:_:file:line:)","abstract":[{"type":"text","text":"Asserts that an enum value matches a particular case and returns the associated value."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"XCTUnwrap"},{"text":"<","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Case","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Enum"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"case"},{"text":": (","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Case","kind":"typeIdentifier"},{"text":"?, () -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Case","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/XCTUnwrap(_:case:_:file:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dependency":{"url":"\/documentation\/composablearchitecture\/dependency","navigatorTitle":[{"text":"Dependency","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A property wrapper for accessing dependencies.","type":"text"}],"role":"symbol","type":"topic","title":"Dependency","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependency","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Dependency"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithRandomNumberGenerator":{"kind":"symbol","type":"topic","title":"WithRandomNumberGenerator","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"WithRandomNumberGenerator"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithRandomNumberGenerator","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"WithRandomNumberGenerator"}],"url":"\/documentation\/composablearchitecture\/withrandomnumbergenerator","abstract":[{"type":"text","text":"A dependency that yields a random number generator to a closure."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler":{"url":"\/documentation\/composablearchitecture\/anyscheduler","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyScheduler","kind":"identifier"}],"title":"AnyScheduler","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","abstract":[{"text":"A type-erasing wrapper for the ","type":"text"},{"type":"codeVoice","code":"Scheduler"},{"type":"text","text":" protocol, which can be useful for being generic over"},{"type":"text","text":" "},{"text":"many types of schedulers without needing to actually introduce a generic to your code.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyScheduler","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UserNotificationsUI":{"type":"topic","role":"collection","title":"UserNotificationsUI","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UserNotificationsUI","kind":"symbol","abstract":[],"url":"\/documentation\/composablearchitecture\/usernotificationsui"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Combine":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine","role":"collection","url":"\/documentation\/composablearchitecture\/combine","abstract":[],"type":"topic","kind":"symbol","title":"Combine"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/withMainSerialExecutor(operation:)-7fqt1":{"role":"symbol","kind":"symbol","abstract":[{"text":"Perform an operation on the main serial executor.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withMainSerialExecutor(operation:)-7fqt1","title":"withMainSerialExecutor(operation:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withMainSerialExecutor"},{"kind":"text","text":"("},{"text":"operation","kind":"externalParam"},{"kind":"text","text":": () "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"}],"url":"\/documentation\/composablearchitecture\/withmainserialexecutor(operation:)-7fqt1"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/OpenURLEffect":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/OpenURLEffect","role":"symbol","url":"\/documentation\/composablearchitecture\/openurleffect","type":"topic","kind":"symbol","title":"OpenURLEffect","navigatorTitle":[{"kind":"identifier","text":"OpenURLEffect"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"OpenURLEffect","kind":"identifier"}],"abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture//(_:)-1zudw":{"title":"\/(_:)","url":"\/documentation\/composablearchitecture\/\/(_:)-1zudw","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"\/","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":">("},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-1zudw","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns a void case path for a case with no associated value."}],"role":"symbol"},"https://github.com/pointfreeco/swift-composable-architecture/discussions":{"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","type":"link","title":"Discussions","titleInlineContent":[{"type":"text","text":"Discussions"}],"url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"url":"\/documentation\/composablearchitecture\/teststore","abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"title":"TestStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/extract(case:from:)-82wth":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"extract"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"case","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"text":"Attempts to extract values associated with a given enum case initializer from a given root enum.","type":"text"}],"title":"extract(case:from:)","deprecated":true,"kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(case:from:)-82wth","url":"\/documentation\/composablearchitecture\/extract(case:from:)-82wth"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/LockIsolated":{"url":"\/documentation\/composablearchitecture\/lockisolated","role":"symbol","abstract":[{"type":"text","text":"A generic wrapper for isolating a mutable value with a lock."}],"navigatorTitle":[{"kind":"identifier","text":"LockIsolated"}],"title":"LockIsolated","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"LockIsolated","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture//(_:)-270qe":{"abstract":[{"type":"text","text":"Identifies and returns a given case path. Enables shorthand syntax on static case paths, "},{"type":"emphasis","inlineContent":[{"type":"text","text":"e.g."}]},{"type":"text","text":" "},{"code":"\/.self","type":"codeVoice"},{"text":"  instead of ","type":"text"},{"type":"codeVoice","code":".self"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"\/.some"},{"text":" instead of ","type":"text"},{"code":".some","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-270qe","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"text":"CasePath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A4PathV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"text":">) -> ","kind":"text"},{"text":"CasePath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A4PathV"},{"text":"<","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","title":"\/(_:)","role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/\/(_:)-270qe"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/customDump(_:to:name:indent:maxDepth:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"customDump","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"TargetStream"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"TargetStream","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"indent"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxDepth","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/customDump(_:to:name:indent:maxDepth:)","abstract":[{"text":"Dumps the given value’s contents using its mirror to the specified output stream.","type":"text"}],"role":"symbol","title":"customDump(_:to:name:indent:maxDepth:)","url":"\/documentation\/composablearchitecture\/customdump(_:to:name:indent:maxdepth:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture//(_:)-9tuff":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-9tuff","url":"\/documentation\/composablearchitecture\/\/(_:)-9tuff","title":"\/(_:)","role":"symbol","abstract":[{"text":"Returns a function that can attempt to extract associated values from the given enum case","type":"text"},{"text":" ","type":"text"},{"text":"initializer.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"\/","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> ("},{"text":"Root","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":"?","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyValues":{"url":"\/documentation\/composablearchitecture\/dependencyvalues","navigatorTitle":[{"text":"DependencyValues","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A collection of dependencies that is globally available.","type":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyValues","title":"DependencyValues","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DependencyValues"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FailingSchedulerOf":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FailingSchedulerOf","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FailingSchedulerOf"}],"deprecated":true,"title":"FailingSchedulerOf","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/failingschedulerof","navigatorTitle":[{"kind":"identifier","text":"FailingSchedulerOf"}],"abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture//(_:)-2n5ny":{"url":"\/documentation\/composablearchitecture\/\/(_:)-2n5ny","type":"topic","kind":"symbol","title":"\/(_:)","abstract":[{"type":"text","text":"Returns the identity case path for the given type. Enables "},{"code":"\/MyType.self","type":"codeVoice"},{"type":"text","text":" syntax."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"\/","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Root"},{"text":".Type) -> ","kind":"text"},{"text":"CasePath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A4PathV"},{"text":"<","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":">"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-2n5ny"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ConfirmationDialogState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ConfirmationDialogState","url":"\/documentation\/composablearchitecture\/confirmationdialogstate","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ConfirmationDialogState","kind":"identifier"}],"role":"symbol","title":"ConfirmationDialogState","kind":"symbol","abstract":[{"type":"text","text":"A data type that describes the state of a confirmation dialog that can be shown to the user. The"},{"type":"text","text":" "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" generic is the type of actions that can be sent from tapping on a button in the sheet."}],"navigatorTitle":[{"kind":"identifier","text":"ConfirmationDialogState"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CustomDumpReflectable":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomDumpReflectable"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CustomDumpReflectable"}],"abstract":[{"text":"A type that explicitly supplies its own mirror for ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/customDump(_:to:name:indent:maxDepth:)"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/diff(_:_:format:)"},{"type":"text","text":"."}],"title":"CustomDumpReflectable","url":"\/documentation\/composablearchitecture\/customdumpreflectable","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpReflectable","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ActorIsolated":{"url":"\/documentation\/composablearchitecture\/actorisolated","role":"symbol","abstract":[{"type":"text","text":"A generic wrapper for isolating a mutable value to an actor."}],"navigatorTitle":[{"kind":"identifier","text":"ActorIsolated"}],"title":"ActorIsolated","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ActorIsolated","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActorIsolated"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedScheduler":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnimplementedScheduler"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedScheduler","title":"UnimplementedScheduler","navigatorTitle":[{"text":"UnimplementedScheduler","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"A scheduler that causes the current XCTest test case to fail if it is used.","type":"text"}],"url":"\/documentation\/composablearchitecture\/unimplementedscheduler"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CasePath":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CasePath","role":"symbol","type":"topic","abstract":[{"text":"A path that supports embedding a value in a root and attempting to extract a root’s embedded","type":"text"},{"type":"text","text":" "},{"text":"value.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"CasePath","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/casepath","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CasePath","kind":"identifier"}],"title":"CasePath"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CoreMotion":{"abstract":[],"type":"topic","role":"collection","title":"CoreMotion","url":"\/documentation\/composablearchitecture\/coremotion","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CoreMotion","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/withDependencies(from:operation:file:line:)-8e74m":{"url":"\/documentation\/composablearchitecture\/withdependencies(from:operation:file:line:)-8e74m","type":"topic","kind":"symbol","title":"withDependencies(from:operation:file:line:)","abstract":[{"type":"text","text":"Updates the current dependencies for the duration of a synchronous operation by taking the"},{"type":"text","text":" "},{"type":"text","text":"dependencies tied to a given object."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withDependencies","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Model","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Model"},{"kind":"text","text":", "},{"text":"operation","kind":"externalParam"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":"?) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withDependencies(from:operation:file:line:)-8e74m"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Identified":{"navigatorTitle":[{"kind":"identifier","text":"Identified"}],"title":"Identified","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Identified","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/identified","abstract":[{"text":"A wrapper around a value and a hashable identifier that conforms to identifiable.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Identified","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ImmediateClock":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/immediateclock","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ImmediateClock"}],"type":"topic","title":"ImmediateClock","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock","navigatorTitle":[{"kind":"identifier","text":"ImmediateClock"}],"role":"symbol","abstract":[{"type":"text","text":"A clock that does not suspend when sleeping."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Speech":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Speech","url":"\/documentation\/composablearchitecture\/speech","title":"Speech","role":"collection","kind":"symbol","type":"topic","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArrayOf":{"abstract":[{"type":"text","text":"A convenience type alias that specifies an "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray","isActive":true},{"type":"text","text":" by an element conforming to the"},{"text":" ","type":"text"},{"code":"Identifiable","type":"codeVoice"},{"type":"text","text":" protocol."}],"url":"\/documentation\/composablearchitecture\/identifiedarrayof","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArrayOf","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IdentifiedArrayOf","kind":"identifier"}],"title":"IdentifiedArrayOf","navigatorTitle":[{"text":"IdentifiedArrayOf","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/withDependencies(_:operation:)-3vrqy":{"kind":"symbol","role":"symbol","title":"withDependencies(_:operation:)","abstract":[{"type":"text","text":"Updates the current dependencies for the duration of an asynchronous operation."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withDependencies","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"operation","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/withdependencies(_:operation:)-3vrqy","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withDependencies(_:operation:)-3vrqy"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/withDependencies(from:_:operation:file:line:)-2y5dq":{"url":"\/documentation\/composablearchitecture\/withdependencies(from:_:operation:file:line:)-2y5dq","type":"topic","kind":"symbol","title":"withDependencies(from:_:operation:file:line:)","abstract":[{"type":"text","text":"Updates the current dependencies for the duration of a synchronous operation by taking the"},{"text":" ","type":"text"},{"type":"text","text":"dependencies tied to a given object."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"withDependencies"},{"text":"<","kind":"text"},{"text":"Model","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Model","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"DependencyValues","kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":", "},{"text":"operation","kind":"externalParam"},{"kind":"text","text":": () "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":"?) "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withDependencies(from:_:operation:file:line:)-2y5dq"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CoreLocation":{"title":"CoreLocation","role":"collection","url":"\/documentation\/composablearchitecture\/corelocation","abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CoreLocation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStoreOf":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreOf","title":"TestStoreOf","url":"\/documentation\/composablearchitecture\/teststoreof","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestStoreOf","kind":"identifier"}],"type":"topic","abstract":[{"text":"A convenience type alias for referring to a test store of a given reducer’s domain.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"TestStoreOf"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/withMainSerialExecutor(operation:)-79jpc":{"title":"withMainSerialExecutor(operation:)","url":"\/documentation\/composablearchitecture\/withmainserialexecutor(operation:)-79jpc","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withMainSerialExecutor","kind":"identifier"},{"text":"(","kind":"text"},{"text":"operation","kind":"externalParam"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"rethrows"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withMainSerialExecutor(operation:)-79jpc","kind":"symbol","type":"topic","abstract":[{"text":"Perform an operation on the main serial executor.","type":"text"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UIScheduler":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIScheduler","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UIScheduler"}],"url":"\/documentation\/composablearchitecture\/uischeduler","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UIScheduler","kind":"identifier"}],"abstract":[{"text":"A scheduler that executes its work on the main queue as soon as possible.","type":"text"}],"type":"topic","kind":"symbol","title":"UIScheduler"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestClock":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestClock","url":"\/documentation\/composablearchitecture\/testclock","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClock","kind":"identifier"}],"role":"symbol","title":"TestClock","kind":"symbol","abstract":[{"text":"A clock whose time can be controlled in a deterministic manner.","type":"text"}],"navigatorTitle":[{"text":"TestClock","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray","abstract":[{"type":"text","text":"An ordered collection of identifiable elements."}],"navigatorTitle":[{"kind":"identifier","text":"IdentifiedArray"}],"url":"\/documentation\/composablearchitecture\/identifiedarray","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedArray"}],"kind":"symbol","role":"symbol","title":"IdentifiedArray"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dispatch":{"url":"\/documentation\/composablearchitecture\/dispatch","role":"collection","abstract":[],"title":"Dispatch","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dispatch","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"title":"Store","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Store"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ConfirmationDialogStateTitleVisibility":{"navigatorTitle":[{"text":"ConfirmationDialogStateTitleVisibility","kind":"identifier"}],"title":"ConfirmationDialogStateTitleVisibility","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"ConfirmationDialogStateTitleVisibility","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/confirmationdialogstatetitlevisibility","abstract":[{"text":"The visibility of a confirmation dialog title element, chosen automatically based on the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"platform, current context, and other factors."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ConfirmationDialogStateTitleVisibility","kind":"symbol","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture//(_:)-4v1w8":{"url":"\/documentation\/composablearchitecture\/\/(_:)-4v1w8","type":"topic","kind":"symbol","title":"\/(_:)","abstract":[{"type":"text","text":"Returns a void case path for a case with no associated value."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"\/"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Root"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"text":") -> (","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-4v1w8"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI":{"url":"\/documentation\/composablearchitecture\/swiftui","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","abstract":[],"title":"SwiftUI","kind":"symbol","type":"topic","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/withDependencies(from:_:operation:file:line:)-262kg":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withDependencies(from:_:operation:file:line:)-262kg","url":"\/documentation\/composablearchitecture\/withdependencies(from:_:operation:file:line:)-262kg","type":"topic","role":"symbol","title":"withDependencies(from:_:operation:file:line:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"withDependencies"},{"text":"<","kind":"text"},{"text":"Model","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Model"},{"text":", (","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"operation"},{"kind":"text","text":": () "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":"?, "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Updates the current dependencies for the duration of an asynchronous operation by taking the"},{"type":"text","text":" "},{"type":"text","text":"dependencies tied to a given object."}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"title":"Effect","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/withDependencies(from:operation:file:line:)-2qx0c":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Updates the current dependencies for the duration of an asynchronous operation by taking the"},{"text":" ","type":"text"},{"type":"text","text":"dependencies tied to a given object."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withDependencies(from:operation:file:line:)-2qx0c","url":"\/documentation\/composablearchitecture\/withdependencies(from:operation:file:line:)-2qx0c","title":"withDependencies(from:operation:file:line:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"withDependencies","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Model","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Model"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"operation"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/..(_:_:)":{"url":"\/documentation\/composablearchitecture\/'..(_:_:)","type":"topic","kind":"symbol","title":"..(_:_:)","abstract":[{"type":"text","text":"Returns a new extract function by appending the given extract function with an embed function."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":".."},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"text":"Root","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Value","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"AppendedValue"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?, ("},{"text":"AppendedValue","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":") -> (","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AppendedValue"},{"text":"?","kind":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/..(_:_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/extract(_:)-5ivuf":{"role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(_:)-5ivuf","kind":"symbol","abstract":[{"type":"text","text":"Returns a function that can attempt to extract associated values from the given enum case"},{"type":"text","text":" "},{"type":"text","text":"initializer."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extract","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">((","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":"?) -> ("},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"extract(_:)","deprecated":true,"url":"\/documentation\/composablearchitecture\/extract(_:)-5ivuf"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/GettingStarted":{"type":"topic","abstract":[{"text":"Learn how to integrate the Composable Architecture into your project and write your first","type":"text"},{"type":"text","text":" "},{"type":"text","text":"application."}],"role":"article","title":"Getting started","url":"\/documentation\/composablearchitecture\/gettingstarted","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ButtonStateRole":{"type":"topic","kind":"symbol","abstract":[{"text":"A value that describes the purpose of a button.","type":"text"}],"title":"ButtonStateRole","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ButtonStateRole","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ButtonStateRole","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/buttonstaterole","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ButtonStateRole"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/XCTModify(_:case:_:_:file:line:)":{"abstract":[{"type":"text","text":"Asserts that an enum value matches a particular case and modifies the associated value in place."}],"type":"topic","kind":"symbol","title":"XCTModify(_:case:_:_:file:line:)","role":"symbol","url":"\/documentation\/composablearchitecture\/xctmodify(_:case:_:_:file:line:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/XCTModify(_:case:_:_:file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTModify","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Enum"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Case"},{"text":">(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"case"},{"kind":"text","text":": "},{"text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Enum","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":">, () -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Case","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ButtonStateAction":{"title":"ButtonStateAction","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ButtonStateAction"}],"url":"\/documentation\/composablearchitecture\/buttonstateaction","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ButtonStateAction"}],"abstract":[{"text":"A type that wraps an action with additional context, ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"e.g."}]},{"text":" for animation.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ButtonStateAction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","url":"\/documentation\/composablearchitecture\/textstate","kind":"symbol","abstract":[{"text":"An equatable description of SwiftUI ","type":"text"},{"type":"codeVoice","code":"Text"},{"type":"text","text":". Useful for storing rich text in feature models"},{"text":" ","type":"text"},{"type":"text","text":"that can still be tested for equality."}],"type":"topic","role":"symbol","title":"TextState","navigatorTitle":[{"kind":"identifier","text":"TextState"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TextState"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/uncheckedUseMainSerialExecutor":{"url":"\/documentation\/composablearchitecture\/uncheckedusemainserialexecutor","type":"topic","kind":"symbol","title":"uncheckedUseMainSerialExecutor","abstract":[{"text":"Overrides Swift’s global executor with the main serial executor in an unchecked fashion.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"uncheckedUseMainSerialExecutor"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/uncheckedUseMainSerialExecutor"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift","role":"collection","title":"Swift","url":"\/documentation\/composablearchitecture\/swift","type":"topic","kind":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UncheckedSendable":{"url":"\/documentation\/composablearchitecture\/uncheckedsendable","role":"symbol","abstract":[{"type":"text","text":"A generic wrapper for turning any non-"},{"type":"codeVoice","code":"Sendable"},{"text":" type into a ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" one, in an unchecked"},{"type":"text","text":" "},{"type":"text","text":"manner."}],"navigatorTitle":[{"kind":"identifier","text":"UncheckedSendable"}],"title":"UncheckedSendable","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UncheckedSendable"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"title":"ViewStore","type":"topic","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"type":"text","text":" "},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewStore"}],"navigatorTitle":[{"text":"ViewStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/viewstore","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ActionSheetState":{"url":"\/documentation\/composablearchitecture\/actionsheetstate","type":"topic","kind":"symbol","title":"ActionSheetState","abstract":[],"deprecated":true,"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ActionSheetState"}],"navigatorTitle":[{"text":"ActionSheetState","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ActionSheetState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestDependencyKey":{"url":"\/documentation\/composablearchitecture\/testdependencykey","navigatorTitle":[{"text":"TestDependencyKey","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A key for accessing test dependencies."}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestDependencyKey","title":"TestDependencyKey","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestDependencyKey","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ImmediateScheduler":{"navigatorTitle":[{"text":"ImmediateScheduler","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/immediatescheduler","type":"topic","role":"symbol","abstract":[{"text":"A scheduler for performing synchronous actions.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateScheduler","title":"ImmediateScheduler","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ImmediateScheduler","kind":"identifier"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/extract(case:from:)-89rof":{"url":"\/documentation\/composablearchitecture\/extract(case:from:)-89rof","type":"topic","kind":"symbol","title":"extract(case:from:)","abstract":[{"text":"Attempts to extract values associated with a given enum case initializer from a given root enum.","type":"text"}],"deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"text":"Root","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"case"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(case:from:)-89rof"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ImmediateSchedulerOf":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateSchedulerOf","role":"symbol","navigatorTitle":[{"text":"ImmediateSchedulerOf","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/immediateschedulerof","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ImmediateSchedulerOf"}],"abstract":[{"type":"text","text":"A convenience type to specify an "},{"type":"codeVoice","code":"ImmediateScheduler"},{"text":" by the scheduler it wraps rather than by","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the time type and options type."}],"type":"topic","kind":"symbol","title":"ImmediateSchedulerOf"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FailingScheduler":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FailingScheduler","deprecated":true,"url":"\/documentation\/composablearchitecture\/failingscheduler","type":"topic","role":"symbol","title":"FailingScheduler","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FailingScheduler","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"FailingScheduler"}],"abstract":[],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"type":"topic","kind":"article","title":"Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyKey":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyKey","role":"symbol","navigatorTitle":[{"text":"DependencyKey","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/dependencykey","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"DependencyKey","kind":"identifier"}],"abstract":[{"text":"A key for accessing dependencies.","type":"text"}],"type":"topic","kind":"symbol","title":"DependencyKey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/_Concurrency":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_Concurrency","role":"collection","url":"\/documentation\/composablearchitecture\/_concurrency","title":"_Concurrency","abstract":[],"kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CustomDumpStringConvertible":{"role":"symbol","abstract":[{"type":"text","text":"A type with a customized textual representation for "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/customDump(_:to:name:indent:maxDepth:)","isActive":true},{"type":"text","text":" "},{"type":"text","text":"and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/diff(_:_:format:)","type":"reference","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"text":"CustomDumpStringConvertible","kind":"identifier"}],"title":"CustomDumpStringConvertible","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpStringConvertible","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/customdumpstringconvertible","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomDumpStringConvertible"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FireAndForget":{"role":"symbol","type":"topic","abstract":[{"text":"A type for creating unstructured tasks in production and structured tasks in tests.","type":"text"}],"url":"\/documentation\/composablearchitecture\/fireandforget","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FireAndForget","title":"FireAndForget","kind":"symbol","navigatorTitle":[{"text":"FireAndForget","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"FireAndForget","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyClock":{"url":"\/documentation\/composablearchitecture\/anyclock","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyClock","navigatorTitle":[{"text":"AnyClock","kind":"identifier"}],"abstract":[{"type":"text","text":"A type-erased clock."}],"title":"AnyClock","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AnyClock","kind":"identifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture//(_:)-82yvm":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-82yvm","abstract":[{"text":"Returns a case path for the given embed function.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/\/(_:)-82yvm","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"\/(_:)","kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture//(_:)-8h7yj":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> (","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"url":"\/documentation\/composablearchitecture\/\/(_:)-8h7yj","role":"symbol","type":"topic","kind":"symbol","title":"\/(_:)","abstract":[{"type":"text","text":"Returns a function that can attempt to extract associated values from the given enum case"},{"type":"text","text":" "},{"text":"initializer.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-8h7yj"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"text":"현재 앱의 상태를 주어진 액션을 가지고 어떻게 다음 상태로 변경할 지를 묘사하는 프로토콜. 또한 나중에 Store에 의해 실행되어야 할 ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"가 무엇인지 묘사하고 있습니다.","type":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/XCTAssertNoDifference(_:_:_:file:line:)":{"abstract":[{"type":"text","text":"Asserts that two values have no difference."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"XCTAssertNoDifference"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"text":", () ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"text":", () -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/composablearchitecture\/xctassertnodifference(_:_:_:file:line:)","title":"XCTAssertNoDifference(_:_:_:file:line:)","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/XCTAssertNoDifference(_:_:_:file:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UIKit":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a UIKit application."}],"url":"\/documentation\/composablearchitecture\/uikit","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit","role":"collectionGroup","title":"UIKit Integration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ButtonState":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ButtonState","role":"symbol","abstract":[],"navigatorTitle":[{"text":"ButtonState","kind":"identifier"}],"type":"topic","title":"ButtonState","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ButtonState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/buttonstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DateGenerator":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateGenerator"}],"navigatorTitle":[{"text":"DateGenerator","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DateGenerator","kind":"symbol","title":"DateGenerator","type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/dategenerator","abstract":[{"text":"A dependency that generates a date.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedClock":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock","kind":"symbol","navigatorTitle":[{"text":"UnimplementedClock","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/unimplementedclock","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnimplementedClock"}],"abstract":[{"text":"A clock that causes an XCTest failure when any of its endpoints are invoked.","type":"text"}],"type":"topic","role":"symbol","title":"UnimplementedClock"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Testing":{"url":"\/documentation\/composablearchitecture\/testing","abstract":[{"type":"text","text":"Learn how to write comprehensive and exhaustive tests for your features built in the Composable"},{"type":"text","text":" "},{"type":"text","text":"Architecture."}],"title":"Testing","role":"article","type":"topic","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Testing"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Foundation":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/foundation","type":"topic","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Foundation","title":"Foundation","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/~=(_:_:)":{"abstract":[{"type":"text","text":"Returns whether or not a root value matches a particular case path."}],"type":"topic","kind":"symbol","title":"~=(_:_:)","role":"symbol","url":"\/documentation\/composablearchitecture\/~=(_:_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/~=(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"~=","kind":"identifier"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Root"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"https://www.pointfree.co/collections/composable-architecture":{"title":"Point-Free Videos","titleInlineContent":[{"text":"Point-Free Videos","type":"text"}],"type":"link","url":"https:\/\/www.pointfree.co\/collections\/composable-architecture","identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CustomDumpRepresentable":{"abstract":[{"text":"A type that can be converted to a value for the purpose of dumping.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomDumpRepresentable"}],"type":"topic","url":"\/documentation\/composablearchitecture\/customdumprepresentable","title":"CustomDumpRepresentable","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpRepresentable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CustomDumpRepresentable"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CoreImage":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CoreImage","role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/coreimage","title":"CoreImage"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ButtonStateBuilder":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ButtonStateBuilder","url":"\/documentation\/composablearchitecture\/buttonstatebuilder","abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"ButtonStateBuilder","kind":"identifier"}],"kind":"symbol","title":"ButtonStateBuilder","type":"topic","role":"symbol","navigatorTitle":[{"text":"ButtonStateBuilder","kind":"identifier"}]}}}