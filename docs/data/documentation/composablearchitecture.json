{"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"externalID":"ComposableArchitecture","symbolKind":"module","modules":[{"name":"ComposableArchitecture"}],"role":"collection","roleHeading":"Framework","title":"ComposableArchitecture"},"hierarchy":{"paths":[[]]},"primaryContentSections":[{"content":[{"anchor":"Additional-Resources","type":"heading","text":"Additional Resources","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","isActive":true}]}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture","isActive":true,"type":"reference"}]}]}]},{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"This library provides a few core tools that can be used to build applications of varying purpose and"},{"type":"text","text":" "},{"type":"text","text":"complexity. It provides compelling stories that you can follow to solve many problems you encounter"},{"type":"text","text":" "},{"text":"day-to-day when building applications, such as:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"State management","type":"text"}]}]},{"inlineContent":[{"text":"How to manage the state of your application using simple value types, and share state across","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"many screens so that mutations in one screen can be immediately observed in another screen."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Composition"}]}]},{"type":"paragraph","inlineContent":[{"text":"How to break down large features into smaller components that can be extracted to their own,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"isolated modules and be easily glued back together to form the feature."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Side effects"}],"type":"strong"}]},{"inlineContent":[{"type":"text","text":"How to let certain parts of the application talk to the outside world in the most testable and"},{"type":"text","text":" "},{"text":"understandable way possible.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Testing","type":"text"}],"type":"strong"}]},{"type":"paragraph","inlineContent":[{"text":"How to not only test a feature built in the architecture, but also write integration tests for","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"features that have been composed of many parts, and write end-to-end tests to understand how"},{"type":"text","text":" "},{"text":"side effects influence your application. This allows you to make strong guarantees that your","type":"text"},{"type":"text","text":" "},{"text":"business logic is running in the way you expect.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Ergonomics","type":"text"}],"type":"strong"}]},{"inlineContent":[{"text":"How to accomplish all of the above in a simple API with as few concepts and moving parts as","type":"text"},{"type":"text","text":" "},{"type":"text","text":"possible."}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"type":"text","text":" "},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"sections":[],"topicSections":[{"title":"Essentials","identifiers":["doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Testing","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"],"title":"State management"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"],"title":"Testing"},{"title":"Integrations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit"]},{"title":"Type Aliases","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreOf"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Foundation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUINavigationCore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_Concurrency"],"title":"Extended Modules"}],"seeAlsoSections":[{"title":"Related Documentation","abstract":[{"type":"text","text":"The collection of videos from "},{"type":"reference","identifier":"https:\/\/www.pointfree.co","isActive":true},{"type":"text","text":" that dive deep into the"},{"type":"text","text":" "},{"text":"development of the library.","type":"text"}],"identifiers":["https:\/\/www.pointfree.co\/collections\/composable-architecture"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/GettingStarted":{"kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/gettingstarted","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","title":"Getting started","abstract":[{"type":"text","text":"Learn how to integrate the Composable Architecture into your project and write your first"},{"text":" ","type":"text"},{"type":"text","text":"application."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dependencies":{"url":"\/documentation\/composablearchitecture\/dependencies","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies","title":"Dependencies","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStoreOf":{"kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/teststoreof","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStoreOf"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreOf","title":"TestStoreOf","navigatorTitle":[{"kind":"identifier","text":"TestStoreOf"}],"abstract":[{"type":"text","text":"A convenience type alias for referring to a test store of a given reducer’s domain."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI":{"url":"\/documentation\/composablearchitecture\/swiftui","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","title":"SwiftUI","abstract":[]},"doc://ComposableArchitecture/tutorials/MeetComposableArchitecture":{"kind":"overview","type":"topic","url":"\/tutorials\/meetcomposablearchitecture","role":"overview","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","title":"Meet the Composable Architecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a"},{"text":" ","type":"text"},{"type":"text","text":"consistent and understandable way, with composition, testing, and ergonomics in mind. It can be"},{"type":"text","text":" "},{"text":"used in SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"https://www.pointfree.co/collections/composable-architecture":{"titleInlineContent":[{"text":"Point-Free Videos","type":"text"}],"url":"https:\/\/www.pointfree.co\/collections\/composable-architecture","title":"Point-Free Videos","type":"link","identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"type":"topic","title":"Navigation","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/navigation","kind":"article","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"type":"text","text":" "},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"title":"Store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"text":"around to views that need to interact with the application.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Store","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"kind":"symbol"},"https://github.com/pointfreeco/swift-composable-architecture/discussions":{"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","title":"Discussions","titleInlineContent":[{"type":"text","text":"Discussions"}],"type":"link","url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyManagement":{"url":"\/documentation\/composablearchitecture\/dependencymanagement","kind":"article","type":"topic","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","title":"Dependencies","abstract":[{"type":"text","text":"Learn how to register dependencies with the library so that they can be immediately accessible from"},{"text":" ","type":"text"},{"type":"text","text":"any reducer."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"kind":"symbol","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"type":"topic","url":"\/documentation\/composablearchitecture\/teststore","title":"TestStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TestStore","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"TestStore"}]},"https://github.com/pointfreeco/swift-composable-architecture":{"type":"link","url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","title":"GitHub Repo","titleInlineContent":[{"text":"GitHub Repo","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUINavigationCore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUINavigationCore","kind":"symbol","type":"topic","abstract":[],"title":"SwiftUINavigationCore","role":"collection","url":"\/documentation\/composablearchitecture\/swiftuinavigationcore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Foundation":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Foundation","kind":"symbol","type":"topic","abstract":[],"title":"Foundation","role":"collection","url":"\/documentation\/composablearchitecture\/foundation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}],"title":"Reducer","role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","kind":"symbol","abstract":[{"type":"text","text":"현재 앱의 상태를 주어진 액션을 가지고 어떻게 다음 상태로 변경할 지를 묘사하는 프로토콜. 또한 나중에 Store에 의해 실행되어야 할 "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"가 무엇인지 묘사하고 있습니다.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","kind":"symbol","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UIKit":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit","kind":"article","type":"topic","abstract":[{"text":"Integrating the Composable Architecture into a UIKit application.","type":"text"}],"title":"UIKit Integration","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/uikit"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"type":"topic","navigatorTitle":[{"text":"ViewStore","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","title":"ViewStore","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"type":"text","text":" "},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewStore"}],"url":"\/documentation\/composablearchitecture\/viewstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/_Concurrency":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/_concurrency","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_Concurrency","type":"topic","title":"_Concurrency","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Testing":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Testing","kind":"article","type":"topic","abstract":[{"text":"Learn how to write comprehensive and exhaustive tests for your features built in the Composable","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Architecture."}],"title":"Testing","role":"article","url":"\/documentation\/composablearchitecture\/testing"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftConcurrency":{"title":"Adopting Swift concurrency","type":"topic","abstract":[{"text":"Learn how to write safe, concurrent effects using Swift’s structured concurrency.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftconcurrency","role":"article","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift":{"url":"\/documentation\/composablearchitecture\/swift","abstract":[],"type":"topic","title":"Swift","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance":{"title":"Performance","type":"topic","abstract":[{"text":"Learn how to improve the performance of features built in the Composable Architecture.","type":"text"}],"url":"\/documentation\/composablearchitecture\/performance","role":"article","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic"}}}