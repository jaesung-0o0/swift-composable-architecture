{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/withmainserialexecutor(operation:)-79jpc"]}],"metadata":{"roleHeading":"Function","symbolKind":"func","title":"withMainSerialExecutor(operation:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withMainSerialExecutor","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"operation"},{"kind":"text","text":": () "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"externalID":"s:17ConcurrencyExtras22withMainSerialExecutor9operationyyyYaYbKScMYcXE_tYaKF","role":"symbol","modules":[{"name":"ComposableArchitecture"}]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withMainSerialExecutor(operation:)-79jpc","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Perform an operation on the main serial executor.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"withMainSerialExecutor"},{"text":"(","kind":"text"},{"text":"operation","kind":"externalParam"},{"text":": @","kind":"text"},{"text":"MainActor","kind":"typeIdentifier","preciseIdentifier":"s:ScM"},{"text":" () ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"rethrows"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"operation","content":[{"type":"paragraph","inlineContent":[{"text":"An operation to be performed on the main serial executor.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Some asynchronous code is ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/forums.swift.org\/t\/reliably-testing-code-that-adopts-swift-concurrency\/57304"},{"text":" ","type":"text"},{"text":"to test in Swift due to how suspension points are processed by the runtime. This function","type":"text"},{"type":"text","text":" "},{"type":"text","text":"attempts to run all tasks spawned in the given operation serially and deterministically. It"},{"type":"text","text":" "},{"type":"text","text":"makes asynchronous tests faster and less flakey."}]},{"code":["await withMainSerialExecutor {","  \/\/ Everything performed in this scope is performed serially...","}"],"type":"codeListing","syntax":"swift"},{"style":"warning","name":"Warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"This API is only intended to be used from tests to make them more reliable. Please do","type":"text"},{"type":"text","text":" "},{"text":"not use it from application code.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We say that it “"},{"type":"emphasis","inlineContent":[{"text":"attempts","type":"text"}]},{"text":" to run all tasks spawned in an operation serially and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"deterministically” because under the hood it relies on a global, mutable variable in the Swift"},{"text":" ","type":"text"},{"text":"runtime to do its job, and there are no scoping ","type":"text"},{"inlineContent":[{"type":"text","text":"guarantees"}],"type":"emphasis"},{"text":" should this mutable variable change","type":"text"},{"type":"text","text":" "},{"text":"during the operation.","type":"text"}]}]}],"kind":"content"}],"references":{"https://forums.swift.org/t/reliably-testing-code-that-adopts-swift-concurrency/57304":{"title":"notoriously difficult","url":"https:\/\/forums.swift.org\/t\/reliably-testing-code-that-adopts-swift-concurrency\/57304","type":"link","identifier":"https:\/\/forums.swift.org\/t\/reliably-testing-code-that-adopts-swift-concurrency\/57304","titleInlineContent":[{"type":"text","text":"notoriously"},{"type":"text","text":" "},{"text":"difficult","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/withMainSerialExecutor(operation:)-79jpc":{"title":"withMainSerialExecutor(operation:)","url":"\/documentation\/composablearchitecture\/withmainserialexecutor(operation:)-79jpc","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withMainSerialExecutor","kind":"identifier"},{"text":"(","kind":"text"},{"text":"operation","kind":"externalParam"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"rethrows"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/withMainSerialExecutor(operation:)-79jpc","kind":"symbol","type":"topic","abstract":[{"text":"Perform an operation on the main serial executor.","type":"text"}],"role":"symbol"}}}