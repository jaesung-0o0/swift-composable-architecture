{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/bind(_:to:)"},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.bind(_:to:)"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"bind","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ModelValue"},{"kind":"text","text":", "},{"text":"ViewValue","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"modelValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ModelValue"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"viewValue","kind":"internalParam"},{"kind":"text","text":": "},{"text":"ViewValue","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":" : "},{"text":"_Bindable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ViewValue","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"_Bindable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ModelValue","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"},{"kind":"text","text":", "},{"text":"ModelValue","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"text":"ViewValue","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bind"},{"kind":"text","text":"<"},{"text":"ModelValue","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"ViewValue"},{"text":">(","kind":"text"},{"text":"ModelValue","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"text":"ViewValue","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","title":"bind(_:to:)","platforms":[{"name":"iOS","deprecated":false,"introducedAt":"14.0","unavailable":false,"beta":false},{"unavailable":false,"beta":false,"name":"macOS","deprecated":false,"introducedAt":"11.0"},{"introducedAt":"14.0","deprecated":false,"unavailable":false,"name":"tvOS","beta":false},{"introducedAt":"7.0","deprecated":false,"unavailable":false,"beta":false,"name":"watchOS"}],"modules":[{"relatedModules":["SwiftUI"],"name":"ComposableArchitecture"}],"extendedModule":"SwiftUI","externalID":"s:7SwiftUI4ViewP0A16UINavigationCoreE4bind_2toQrqd___qd_0_tAD9_BindableRd__AdGRd_0_SQ5ValueRpd__AHQyd_0_AIRSr0_lF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/switchstore\/bind(_:to:)"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"title":"View Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","abstract":[],"type":"topic","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"type":"topic","title":"CaseLet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"role":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","kind":"symbol","navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference","isActive":true},{"type":"text","text":" views."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"type":"topic","title":"SwitchStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/bind(_:to:)":{"role":"symbol","abstract":[],"url":"\/documentation\/composablearchitecture\/switchstore\/bind(_:to:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/bind(_:to:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ModelValue","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"ViewValue","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":", "},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ViewValue"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"title":"bind(_:to:)","kind":"symbol"}}}