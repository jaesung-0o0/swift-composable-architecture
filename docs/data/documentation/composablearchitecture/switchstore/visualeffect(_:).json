{"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.visualEffect(_:)"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/switchstore\/visualeffect(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/visualEffect(_:)"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","metadata":{"role":"symbol","symbolKind":"method","externalID":"s:7SwiftUI4ViewPAAE12visualEffectyQrqd__AA011EmptyVisualE0V_AA13GeometryProxyVtYbcAA0gE0Rd__lF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"visualEffect"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"EmptyVisualEffect","preciseIdentifier":"s:7SwiftUI17EmptyVisualEffectV"},{"kind":"text","text":", "},{"text":"GeometryProxy","preciseIdentifier":"s:7SwiftUI13GeometryProxyV","kind":"typeIdentifier"},{"kind":"text","text":") -> some "},{"text":"VisualEffect","preciseIdentifier":"s:7SwiftUI12VisualEffectP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"platforms":[{"introducedAt":"17.0","deprecated":false,"unavailable":false,"beta":false,"name":"iOS"},{"unavailable":false,"name":"macOS","beta":false,"introducedAt":"14.0","deprecated":false},{"name":"tvOS","deprecated":false,"introducedAt":"17.0","unavailable":false,"beta":false},{"name":"watchOS","deprecated":false,"beta":false,"introducedAt":"10.0","unavailable":false}],"roleHeading":"Instance Method","title":"visualEffect(_:)","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUI"]}],"extendedModule":"SwiftUI"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"visualEffect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"effect","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:7SwiftUI17EmptyVisualEffectV","kind":"typeIdentifier","text":"EmptyVisualEffect"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI13GeometryProxyV","text":"GeometryProxy"},{"text":") -> some ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI12VisualEffectP","text":"VisualEffect"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"title":"CaseLet","kind":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"title":"View Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","title":"SwitchStore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"text":" views.","type":"text"}],"url":"\/documentation\/composablearchitecture\/switchstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/visualEffect(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"visualEffect","kind":"identifier"},{"text":"((","kind":"text"},{"text":"EmptyVisualEffect","preciseIdentifier":"s:7SwiftUI17EmptyVisualEffectV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI13GeometryProxyV","kind":"typeIdentifier","text":"GeometryProxy"},{"kind":"text","text":") -> some "},{"preciseIdentifier":"s:7SwiftUI12VisualEffectP","kind":"typeIdentifier","text":"VisualEffect"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"type":"topic","kind":"symbol","title":"visualEffect(_:)","role":"symbol","url":"\/documentation\/composablearchitecture\/switchstore\/visualeffect(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/visualEffect(_:)","abstract":[]}}}