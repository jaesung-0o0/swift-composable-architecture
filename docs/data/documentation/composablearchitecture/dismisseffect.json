{"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/init(_:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(animation:fileID:line:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(fileID:line:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(transaction:fileID:line:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:element:fileID:line:)"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:then:fileID:line:)"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect","interfaceLanguage":"swift"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:line:)"],"title":"Tree-based navigation"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"type":"text","text":"An effect that dismisses the current presentation."}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/s8SendableP"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DismissEffect","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Execute this in the effect returned from a reducer in order to dismiss the feature:"}]},{"type":"codeListing","syntax":"swift","code":["struct ChildFeature: Reducer {","  struct State { \/* ... *\/ }","  enum Action {","    case exitButtonTapped","    \/\/ ...","  }","  @Dependency(\\.dismiss) var dismiss","  func reduce(into state: inout State, action: Action) -> Effect<Action> {","    switch action {","    case .exitButtonTapped:","      return .run { _ in await self.dismiss() }","    \/\/ ...","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"text":"This operation works by finding the nearest parent feature that was presented using either the","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:line:)","isActive":true},{"text":" or the","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:line:)"},{"type":"text","text":" operator, and then dismisses "},{"inlineContent":[{"text":"that","type":"text"}],"type":"emphasis"},{"text":" ","type":"text"},{"text":"feature. It performs the dismissal by either sending the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss","isActive":true,"type":"reference"},{"type":"text","text":" in the"},{"type":"text","text":" "},{"type":"text","text":"case of "},{"type":"codeVoice","code":"ifLet"},{"type":"text","text":" or sending "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/popFrom(id:)","isActive":true,"type":"reference"},{"text":" in the case of ","type":"text"},{"type":"codeVoice","code":"forEach"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"It is also possible to dismiss the feature using an animation by providing an argument to the","type":"text"},{"text":" ","type":"text"},{"code":"dismiss","type":"codeVoice"},{"type":"text","text":" function:"}]},{"code":["case .exitButtonTapped:","  return .run { _ in await self.dismiss(animation: .default) }"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"This will cause the ","type":"text"},{"type":"codeVoice","code":"dismiss"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"popFrom(id:)"},{"type":"text","text":" action to be sent with the particular animation."}]},{"name":"Warning","style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"@Dependency(\\.dismiss)","type":"codeVoice"},{"text":" tool only works for features that are presented using","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"type":"codeVoice","code":"ifLet"},{"type":"text","text":" operator for tree-based navigation (see "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","type":"reference"},{"type":"text","text":" for more info)"},{"type":"text","text":" "},{"text":"or ","type":"text"},{"type":"codeVoice","code":"forEach"},{"type":"text","text":" operator for stack-based navigation (see "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","isActive":true},{"type":"text","text":"). If no"},{"text":" ","type":"text"},{"type":"text","text":"parent feature is found that was presented with "},{"code":"ifLet","type":"codeVoice"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"forEach"},{"type":"text","text":", then a runtime warning"},{"type":"text","text":" "},{"type":"text","text":"is emitted in Xcode letting you know that it is not possible to dismiss. Further, the runtime"},{"text":" ","type":"text"},{"type":"text","text":"warning becomes a test failure when run in tests."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are testing a child feature in isolation that makes use of "},{"type":"codeVoice","code":"@Dependency(\\.dismiss)"},{"text":" ","type":"text"},{"text":"then you will need to override the dependency to get a passing test. You can even mutate","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"some shared mutable state inside the "},{"type":"codeVoice","code":"dismiss"},{"text":" closure to confirm that it is indeed invoked:","type":"text"}]},{"code":["let isDismissInvoked: LockIsolated<[Bool]> = .init([])","let store = TestStore(initialState: Child.State()) {","  Child()","} withDependencies: {","  $0.dismiss = DismissEffect { isDismissInvoked.withValue { $0.append(true) } }","}","","await store.send(.exitButtonTapped) {","  \/\/ ...","}","XCTAssertEqual(isDismissInvoked.value, [true])"],"type":"codeListing","syntax":"swift"}],"type":"aside"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/dismisseffect"]}],"kind":"symbol","metadata":{"roleHeading":"Structure","role":"symbol","navigatorTitle":[{"text":"DismissEffect","kind":"identifier"}],"externalID":"s:22ComposableArchitecture13DismissEffectV","title":"DismissEffect","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DismissEffect"}],"modules":[{"name":"ComposableArchitecture"}],"symbolKind":"struct"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"url":"\/documentation\/composablearchitecture\/stackbasednavigation","abstract":[{"type":"text","text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to"},{"type":"text","text":" "},{"text":"model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"role":"article","kind":"article","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","title":"Stack-based navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/callAsFunction(fileID:line:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"text":"(","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(fileID:line:)","url":"\/documentation\/composablearchitecture\/dismisseffect\/callasfunction(fileid:line:)","title":"callAsFunction(fileID:line:)","kind":"symbol","abstract":[],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DismissEffect","kind":"identifier"}],"title":"DismissEffect","role":"symbol","url":"\/documentation\/composablearchitecture\/dismisseffect","kind":"symbol","abstract":[{"text":"An effect that dismisses the current presentation.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"DismissEffect"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:then:fileID:line:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ifLet"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"WrappedState"},{"text":", ","kind":"text"},{"text":"WrappedAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Wrapped"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"WrappedState","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CasePath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"WrappedAction","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"then","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"text":"_IfLetReducer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Wrapped","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"ifLet(_:action:then:fileID:line:)","role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:then:fileid:line:)","kind":"symbol","abstract":[{"text":"Embeds a child reducer in a parent domain that works on an optional property of parent state.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:then:fileID:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}],"title":"Reducer","role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","kind":"symbol","abstract":[{"type":"text","text":"현재 앱의 상태를 주어진 액션을 가지고 어떻게 다음 상태로 변경할 지를 묘사하는 프로토콜. 또한 나중에 Store에 의해 실행되어야 할 "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"가 무엇인지 묘사하고 있습니다.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"PresentationAction","kind":"identifier"}],"title":"PresentationAction","role":"symbol","url":"\/documentation\/composablearchitecture\/presentationaction","kind":"symbol","abstract":[{"text":"A wrapper type for actions that can be presented.","type":"text"}],"navigatorTitle":[{"text":"PresentationAction","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/callAsFunction(animation:fileID:line:)":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/dismisseffect\/callasfunction(animation:fileid:line:)","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(animation:fileID:line:)","title":"callAsFunction(animation:fileID:line:)","type":"topic","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"("},{"text":"animation","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Animation","preciseIdentifier":"s:7SwiftUI9AnimationV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:destination:fileID:line:)":{"kind":"symbol","abstract":[{"text":"Embeds a child reducer in a parent domain that works on elements of a navigation stack in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"parent state."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"forEach","kind":"identifier"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"DestinationAction","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Destination","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"StackState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10StackStateV"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CasePath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StackAction","preciseIdentifier":"s:22ComposableArchitecture11StackActionO"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"DestinationAction","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"text":"destination","kind":"externalParam"},{"kind":"text","text":": () -> "},{"text":"Destination","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"text":"_StackReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Destination"},{"text":">","kind":"text"}],"url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:destination:fileid:line:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:line:)","role":"symbol","type":"topic","title":"forEach(_:action:destination:fileID:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/callAsFunction(transaction:fileID:line:)":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(transaction:fileID:line:)","title":"callAsFunction(transaction:fileID:line:)","url":"\/documentation\/composablearchitecture\/dismisseffect\/callasfunction(transaction:fileid:line:)","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"callAsFunction","kind":"identifier"},{"text":"(","kind":"text"},{"text":"transaction","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11TransactionV","text":"Transaction"},{"kind":"text","text":", "},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:element:fileID:line:)":{"role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:element:fileid:line:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:element:fileID:line:)","title":"forEach(_:action:element:fileID:line:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ElementState"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"ElementAction"},{"text":", ","kind":"text"},{"text":"ID","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Element","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"text":"IdentifiedArray","kind":"typeIdentifier","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV"},{"text":"<","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElementState"},{"text":">>, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier","text":"CasePath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Action","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ElementAction","kind":"typeIdentifier"},{"text":")>, ","kind":"text"},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"_ForEachReducer"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Element","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on elements of a collection in parent"},{"type":"text","text":" "},{"type":"text","text":"state."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationState","kind":"identifier"}],"title":"PresentationState","role":"symbol","url":"\/documentation\/composablearchitecture\/presentationstate","kind":"symbol","abstract":[{"text":"A property wrapper for state that can be presented.","type":"text"}],"navigatorTitle":[{"text":"PresentationState","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","kind":"symbol","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"type":"topic","title":"Tree-based navigation","role":"article","url":"\/documentation\/composablearchitecture\/treebasednavigation","kind":"article","abstract":[{"type":"text","text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including"},{"type":"text","text":" "},{"text":"how to model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:destination:fileID:line:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ifLet"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"DestinationAction","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Destination","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CasePath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A4PathV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"text":"PresentationAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"text":"<","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"destination","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Destination","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"_PresentationReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Destination","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:line:)","type":"topic","title":"ifLet(_:action:destination:fileID:line:)","abstract":[{"text":"Embeds a child reducer in a parent domain that works on an optional property of parent state.","type":"text"}],"url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:destination:fileid:line:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction/popFrom(id:)":{"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"popFrom","kind":"identifier"},{"kind":"text","text":"("},{"text":"id","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StackElementID","preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"An action sent to dismiss the associated stack element at a given identifier."}],"url":"\/documentation\/composablearchitecture\/stackaction\/popfrom(id:)","title":"StackAction.popFrom(id:)","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/popFrom(id:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/init(_:)":{"kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/dismisseffect\/init(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/init(_:)","abstract":[],"type":"topic","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"(() -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"type":"topic","title":"Navigation","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/navigation","kind":"article","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"type":"text","text":" "},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction/dismiss":{"type":"topic","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"dismiss","kind":"identifier"}],"title":"PresentationAction.dismiss","role":"symbol","url":"\/documentation\/composablearchitecture\/presentationaction\/dismiss","kind":"symbol","abstract":[{"text":"An action sent to ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" out the associated presentation state."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss"}}}