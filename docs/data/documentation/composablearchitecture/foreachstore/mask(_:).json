{"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use overload where mask accepts a @ViewBuilder instead."}]}],"metadata":{"role":"symbol","symbolKind":"method","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUI"]}],"roleHeading":"Instance Method","extendedModule":"SwiftUI","externalID":"s:7SwiftUI4ViewPAAE4maskyQrqd__AaBRd__lF::SYNTHESIZED::s:22ComposableArchitecture12ForEachStoreV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"mask","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Mask","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Mask","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"title":"mask(_:)","platforms":[{"deprecated":false,"name":"iOS","unavailable":false,"beta":false,"deprecatedAt":"100000.0","introducedAt":"13.0","message":"Use overload where mask accepts a @ViewBuilder instead."},{"introducedAt":"10.15","name":"macOS","deprecatedAt":"100000.0","message":"Use overload where mask accepts a @ViewBuilder instead.","deprecated":false,"unavailable":false,"beta":false},{"introducedAt":"13.0","beta":false,"deprecated":false,"message":"Use overload where mask accepts a @ViewBuilder instead.","unavailable":false,"name":"tvOS","deprecatedAt":"100000.0"},{"deprecated":false,"name":"watchOS","deprecatedAt":"100000.0","message":"Use overload where mask accepts a @ViewBuilder instead.","beta":false,"unavailable":false,"introducedAt":"6.0"}]},"variants":[{"paths":["\/documentation\/composablearchitecture\/foreachstore\/mask(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/mask(_:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/View-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"mask","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Mask"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"mask"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Mask"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Mask","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"kind":"text","text":"\n"}],"languages":["swift"]}]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.mask(_:)"},{"type":"text","text":"."}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/View-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/View-Implementations","url":"\/documentation\/composablearchitecture\/foreachstore\/view-implementations","abstract":[],"kind":"article","title":"View Implementations","type":"topic","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/mask(_:)":{"abstract":[],"url":"\/documentation\/composablearchitecture\/foreachstore\/mask(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mask"},{"text":"<","kind":"text"},{"text":"Mask","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Mask","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"title":"mask(_:)","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/mask(_:)","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"url":"\/documentation\/composablearchitecture\/foreachstore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ForEachStore","kind":"identifier"}],"title":"ForEachStore","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","type":"topic","abstract":[{"type":"text","text":"A Composable Architecture-friendly wrapper around "},{"code":"ForEach","type":"codeVoice"},{"text":" that simplifies working with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"collections of state."}],"navigatorTitle":[{"text":"ForEachStore","kind":"identifier"}],"role":"symbol"}}}