{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/_OptionalProtocol-Implementations"]]},"variants":[{"paths":["\/documentation\/composablearchitecture\/swift\/optional\/optional"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"optional"},{"kind":"text","text":": "},{"text":"Wrapped","kind":"typeIdentifier"},{"text":"? { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}]}],"metadata":{"roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"optional"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Wrapped"},{"text":"?","kind":"text"}],"externalID":"s:Sq9CasePathsE8optionalxSgvp","role":"symbol","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"ComposableArchitecture"}],"symbolKind":"property","title":"optional"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/optional","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"_OptionalProtocol.optional","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift","role":"collection","title":"Swift","url":"\/documentation\/composablearchitecture\/swift","type":"topic","kind":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Optional"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional","kind":"symbol","url":"\/documentation\/composablearchitecture\/swift\/optional","title":"Optional","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"preciseIdentifier":"s:Sq","kind":"identifier","text":"Optional"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional/optional":{"role":"symbol","abstract":[],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/optional","url":"\/documentation\/composablearchitecture\/swift\/optional\/optional","title":"optional","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"optional"},{"kind":"text","text":": "},{"text":"Wrapped","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional/_OptionalProtocol-Implementations":{"url":"\/documentation\/composablearchitecture\/swift\/optional\/_optionalprotocol-implementations","abstract":[],"type":"topic","title":"_OptionalProtocol Implementations","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/_OptionalProtocol-Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"}}}