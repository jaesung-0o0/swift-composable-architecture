{"metadata":{"title":"receive(_:timeout:assert:file:line:)","externalID":"s:22ComposableArchitecture9TestStoreCAASQRzrlE7receive_7timeout6assert4file4lineySbq_XE_s8DurationVyxzKcSgs12StaticStringVSutYaF","modules":[{"name":"ComposableArchitecture"}],"symbolKind":"method","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"receive"},{"text":"((","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"action","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture9TestStoreCAASQRzrlE6Actionq_mfp","text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s8DurationV","kind":"typeIdentifier","text":"Duration"},{"text":", ","kind":"text"},{"text":"assert","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"state"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9TestStoreCAASQRzrlE5Statexmfp","text":"State"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")?, ","kind":"text"},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"platforms":[{"unavailable":false,"name":"iOS","beta":false,"introducedAt":"16.0","deprecated":false},{"unavailable":false,"introducedAt":"13.0","deprecated":false,"beta":false,"name":"macOS"},{"deprecated":false,"introducedAt":"16.0","name":"tvOS","unavailable":false,"beta":false},{"unavailable":false,"beta":false,"deprecated":false,"introducedAt":"9.0","name":"watchOS"}],"extendedModule":"ComposableArchitecture"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:assert:file:line:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:timeout:assert:file:line:)-5awso","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:timeout:assert:file:line:)-6m8t6","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/assert(_:file:line:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/finish(timeout:file:line:)-53gi5","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask"],"title":"Testing a reducer"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/teststore\/receive(_:timeout:assert:file:line:)-7md3m"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"receive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"isMatching"},{"text":": (","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"action","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9TestStoreCAASQRzrlE6Actionq_mfp","text":"Action"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":" "},{"kind":"internalParam","text":"duration"},{"kind":"text","text":": "},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV"},{"text":", ","kind":"text"},{"text":"assert","kind":"externalParam"},{"kind":"text","text":" "},{"text":"updateStateToExpectedResult","kind":"internalParam"},{"text":": ((","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"state"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture9TestStoreCAASQRzrlE5Statexmfp","text":"State","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")? = nil, ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#file","kind":"keyword"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":" = "},{"text":"#line","kind":"keyword"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}],"platforms":["iOS"],"languages":["swift"]}]},{"parameters":[{"name":"isMatching","content":[{"inlineContent":[{"type":"text","text":"A closure that attempts to match an action. If it returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":", a test"},{"type":"text","text":" "},{"text":"failure is reported.","type":"text"}],"type":"paragraph"}]},{"name":"duration","content":[{"type":"paragraph","inlineContent":[{"text":"The amount of time to wait for the expected action.","type":"text"}]}]},{"name":"updateStateToExpectedResult","content":[{"inlineContent":[{"text":"A closure that asserts state changed by sending the action","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the store. The mutable state sent to this closure must be modified to match the state"},{"type":"text","text":" "},{"type":"text","text":"of the store after processing the given action. Do not provide a closure if no change is"},{"type":"text","text":" "},{"type":"text","text":"expected."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is similar to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:timeout:assert:file:line:)-5awso"},{"text":", except it allows","type":"text"},{"type":"text","text":" "},{"text":"you to assert that an action was received that matches a predicate without asserting on all","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the data in the action:"}]},{"syntax":"swift","code":["await store.send(.buttonTapped)","await store.receive {","  guard case .response(.success) = $0 else { return false }","  return true","} assert: {","  store.count = 42","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"When the storeâ€™s "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","isActive":true,"type":"reference"},{"text":" is set to anything other than ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/off","isActive":true},{"type":"text","text":", a grey"},{"type":"text","text":" "},{"type":"text","text":"information box will show next to the "},{"type":"codeVoice","code":"store.receive"},{"type":"text","text":" line in Xcode letting you know what"},{"type":"text","text":" "},{"type":"text","text":"data was in the effect that you chose not to assert on."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you only want to check that a particular action case was received, then you might find"},{"type":"text","text":" "},{"type":"text","text":"the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:timeout:assert:file:line:)-5awso","type":"reference","isActive":true},{"text":" overload of this method more useful.","type":"text"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:timeout:assert:file:line:)-7md3m"},"abstract":[{"text":"Asserts an action was received from an effect that matches a predicate, and asserts how the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"state changes."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/receive(_:timeout:assert:file:line:)-6m8t6":{"conformance":{"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:timeout:assert:file:line:)-6m8t6","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"receive","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9TestStoreCAASQRzrlE6Actionq_mfp","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9TestStoreCAASQRzrlE7receive_7timeout6assert4file4liney9CasePaths0J4PathVyq_qd__G_s8DurationVyxzKcSgs12StaticStringVSutYalF5ValueL_qd__mfp","text":"Value"},{"kind":"text","text":">, "},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"assert"},{"kind":"text","text":": (("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"state","kind":"internalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture9TestStoreCAASQRzrlE5Statexmfp"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":")?, "},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"url":"\/documentation\/composablearchitecture\/teststore\/receive(_:timeout:assert:file:line:)-6m8t6","abstract":[{"type":"text","text":"Asserts an action was received matching a case path and asserts how the state changes."}],"title":"receive(_:timeout:assert:file:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/finish(timeout:file:line:)-53gi5":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/finish(timeout:file:line:)-53gi5","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"finish"},{"kind":"text","text":"("},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s8DurationV","kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"url":"\/documentation\/composablearchitecture\/teststore\/finish(timeout:file:line:)-53gi5","abstract":[{"text":"Suspends until all in-flight effects have finished, or until it times out.","type":"text"}],"title":"finish(timeout:file:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/assert(_:file:line:)":{"type":"topic","url":"\/documentation\/composablearchitecture\/teststore\/assert(_:file:line:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"State","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"abstract":[{"text":"Assert against the current state of the store.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"assert"},{"kind":"text","text":"(("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"state","kind":"internalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture9TestStoreCAASQRzrlE5Statexmfp","kind":"typeIdentifier","text":"State"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"title":"assert(_:file:line:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/assert(_:file:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/send(_:assert:file:line:)":{"type":"topic","url":"\/documentation\/composablearchitecture\/teststore\/send(_:assert:file:line:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"text":"Sends an action to the store and asserts when state changes.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"kind":"text","text":"("},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9TestStoreCAASQRzrlE6Actionq_mfp"},{"kind":"text","text":", "},{"text":"assert","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"state","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture9TestStoreCAASQRzrlE5Statexmfp","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture13TestStoreTaskV","text":"TestStoreTask","kind":"typeIdentifier"}],"title":"send(_:assert:file:line:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:assert:file:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStoreTask":{"url":"\/documentation\/composablearchitecture\/teststoretask","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestStoreTask","kind":"identifier"}],"title":"TestStoreTask","type":"topic","abstract":[{"text":"The type returned from ","type":"text"},{"type":"codeVoice","code":"TestStore\/send(_:assert:file:line:)-1ax61"},{"text":" that represents the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"lifecycle of the effect started from sending an action."}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestStoreTask"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"url":"\/documentation\/composablearchitecture\/teststore","abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"title":"TestStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/receive(_:timeout:assert:file:line:)-7md3m":{"conformance":{"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:timeout:assert:file:line:)-7md3m","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"receive"},{"text":"((","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"action"},{"text":": ","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture9TestStoreCAASQRzrlE6Actionq_mfp","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"assert"},{"text":": ((","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"state"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture9TestStoreCAASQRzrlE5Statexmfp","kind":"typeIdentifier","text":"State"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")?, "},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"url":"\/documentation\/composablearchitecture\/teststore\/receive(_:timeout:assert:file:line:)-7md3m","title":"receive(_:timeout:assert:file:line:)","abstract":[{"type":"text","text":"Asserts an action was received from an effect that matches a predicate, and asserts how the"},{"text":" ","type":"text"},{"type":"text","text":"state changes."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Exhaustivity/off":{"role":"symbol","url":"\/documentation\/composablearchitecture\/exhaustivity\/off","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"off","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Exhaustivity","preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/off","abstract":[{"type":"text","text":"Non-exhaustive assertions."}],"title":"off"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/exhaustivity":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"exhaustivity","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Exhaustivity","preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO"}],"url":"\/documentation\/composablearchitecture\/teststore\/exhaustivity","type":"topic","abstract":[{"type":"text","text":"The current exhaustivity level of the test store."}],"kind":"symbol","role":"symbol","title":"exhaustivity"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/receive(_:timeout:assert:file:line:)-5awso":{"type":"topic","url":"\/documentation\/composablearchitecture\/teststore\/receive(_:timeout:assert:file:line:)-5awso","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Action"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"type":"text","text":"Asserts an action was received from an effect and asserts how the state changes."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"receive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9TestStoreCAASQRzSQR_rlE6Actionq_mfp"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Duration","preciseIdentifier":"s:s8DurationV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"assert","kind":"externalParam"},{"text":": ((","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"state"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture9TestStoreCAASQRzSQR_rlE5Statexmfp","kind":"typeIdentifier","text":"State"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":")?, "},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"title":"receive(_:timeout:assert:file:line:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:timeout:assert:file:line:)-5awso"}}}