{"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Returns a binding view store for this store."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bindings","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ViewAction"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"action"},{"text":" ","kind":"text"},{"text":"toViewAction","kind":"internalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CasePath","kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture9TestStoreC6Actionq_mfp","kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"preciseIdentifier":"s:22ComposableArchitecture9TestStoreC8bindings6actionAA011BindingViewD0VyxG9CasePaths0I4PathVyq_qd__G_t5StateQyd__RszAA14BindableActionRd__lF0hN0L_qd__mfp","kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":">) -> "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","text":"BindingViewStore","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9TestStoreC5Statexmfp"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewAction"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture14BindableActionP","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","text":"BindableAction","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["iOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"A case path from action to a bindable view action.","type":"text"}],"type":"paragraph"}],"name":"toViewAction"}],"kind":"parameters"},{"content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A binding view store."}]}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Useful for testing view state of a store."}]},{"type":"codeListing","syntax":"swift","code":["let store = TestStore(LoginFeature.State()) {","  Login.Feature()","}","await store.send(.view(.set(\\.$email, \"blob@pointfree.co\"))) {","  $0.email = \"blob@pointfree.co\"","}","XCTAssertTrue(","  LoginView.ViewState(store.bindings(action: \/LoginFeature.Action.view))","    .isLoginButtonDisabled",")","","await store.send(.view(.set(\\.$password, \"whats-the-point?\"))) {","  $0.password = \"blob@pointfree.co\"","  $0.isFormValid = true","}","XCTAssertFalse(","  LoginView.ViewState(store.bindings(action: \/LoginFeature.Action.view))","    .isLoginButtonDisabled",")"]}],"kind":"content"}],"metadata":{"externalID":"s:22ComposableArchitecture9TestStoreC8bindings6actionAA011BindingViewD0VyxG9CasePaths0I4PathVyq_qd__G_t5StateQyd__RszAA14BindableActionRd__lF","title":"bindings(action:)","symbolKind":"method","modules":[{"name":"ComposableArchitecture"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"bindings","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ViewAction"},{"text":">(","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture9TestStoreC6Actionq_mfp"},{"text":", ","kind":"text"},{"text":"ViewAction","preciseIdentifier":"s:22ComposableArchitecture9TestStoreC8bindings6actionAA011BindingViewD0VyxG9CasePaths0I4PathVyq_qd__G_t5StateQyd__RszAA14BindableActionRd__lF0hN0L_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"BindingViewStore","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture9TestStoreC5Statexmfp","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","extendedModule":"ComposableArchitecture","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"seeAlsoSections":[{"generated":true,"title":"Accessing state","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/state","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings"]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststore\/bindings(action:)"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings(action:)","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/state":{"title":"state","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture9TestStoreC5Statexmfp","text":"State","kind":"typeIdentifier"}],"url":"\/documentation\/composablearchitecture\/teststore\/state","abstract":[{"type":"text","text":"The current state of the test store."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/state","kind":"symbol","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewStore":{"url":"\/documentation\/composablearchitecture\/bindingviewstore","abstract":[{"type":"text","text":"A property wrapper type that can derive "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","isActive":true},{"text":" values for a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true,"type":"reference"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BindingViewStore","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"BindingViewStore","kind":"identifier"}],"title":"BindingViewStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"url":"\/documentation\/composablearchitecture\/teststore","abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"title":"TestStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","url":"\/documentation\/composablearchitecture\/bindingviewstate","kind":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can designate properties of view state that can be directly"},{"type":"text","text":" "},{"text":"bindable in SwiftUI views.","type":"text"}],"type":"topic","role":"symbol","title":"BindingViewState","navigatorTitle":[{"text":"BindingViewState","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BindingViewState","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CasePath":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CasePath","role":"symbol","type":"topic","abstract":[{"text":"A path that supports embedding a value in a root and attempting to extract a rootâ€™s embedded","type":"text"},{"type":"text","text":" "},{"text":"value.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"CasePath","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/casepath","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CasePath","kind":"identifier"}],"title":"CasePath"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction":{"abstract":[{"type":"text","text":"An action type that exposes a "},{"type":"codeVoice","code":"binding"},{"text":" case that holds a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction"},{"type":"text","text":"."}],"url":"\/documentation\/composablearchitecture\/bindableaction","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindableAction"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"BindableAction","kind":"identifier"}],"title":"BindableAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","url":"\/documentation\/composablearchitecture\/bindingaction","abstract":[{"type":"text","text":"An action that describes simple mutations to some root state at a writable key path."}],"type":"topic","role":"symbol","title":"BindingAction","navigatorTitle":[{"kind":"identifier","text":"BindingAction"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BindingAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/bindings(action:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"bindings","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ViewAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9TestStoreC6Actionq_mfp","text":"Action"},{"kind":"text","text":", "},{"text":"ViewAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9TestStoreC8bindings6actionAA011BindingViewD0VyxG9CasePaths0I4PathVyq_qd__G_t5StateQyd__RszAA14BindableActionRd__lF0hN0L_qd__mfp"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"BindingViewStore","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV"},{"text":"<","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture9TestStoreC5Statexmfp","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Returns a binding view store for this store.","type":"text"}],"url":"\/documentation\/composablearchitecture\/teststore\/bindings(action:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings(action:)","kind":"symbol","role":"symbol","type":"topic","title":"bindings(action:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"title":"ViewStore","type":"topic","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"type":"text","text":" "},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewStore"}],"navigatorTitle":[{"text":"ViewStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/viewstore","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/bindings":{"title":"bindings","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"bindings","kind":"identifier"},{"text":": ","kind":"text"},{"text":"BindingViewStore","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStoreV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9TestStoreCAA5StateQy_RszAA14BindableActionR_rlEADxmfp"},{"text":">","kind":"text"}],"url":"\/documentation\/composablearchitecture\/teststore\/bindings","abstract":[{"type":"text","text":"Returns a binding view store for this store."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/bindings","kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" is "},{"code":"Action.State","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Action","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"BindableAction","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","role":"symbol"}}}