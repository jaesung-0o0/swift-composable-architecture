{"metadata":{"role":"symbol","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:9CasePaths7extractyq_Sgxcxq_cr0_lF","title":"extract(_:)","roleHeading":"Function","platforms":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"extract","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> ("},{"text":"Root","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"symbolKind":"func"},"variants":[{"paths":["\/documentation\/composablearchitecture\/extract(_:)-2jy2a"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Returns a function that can attempt to extract associated values from the given enum case","type":"text"},{"type":"text","text":" "},{"text":"initializer.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"extract"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"embed","kind":"internalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"text":"?","kind":"text"}],"languages":["swift"]}]},{"parameters":[{"name":"embed","content":[{"type":"paragraph","inlineContent":[{"text":"An enum case initializer.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"A function that can attempt to extract associated values from an enum.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this function to create new transform functions to pass to higher-order methods like"},{"type":"text","text":" "},{"type":"codeVoice","code":"compactMap"},{"text":":","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["[Result<Int, Error>.success(42), .failure(MyError()]","  .compactMap(extract(Result.success))","\/\/ [42]"]},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"This function is only intended to be used with enum case initializers. Its behavior is"},{"type":"text","text":" "},{"type":"text","text":"otherwise undefined."}],"type":"paragraph"}],"name":"Note"}]}],"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(_:)-2jy2a"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use case path literal syntax (e.g., '\/Root.caseName')"}],"type":"paragraph"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/extract(_:)-2jy2a":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extract","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Root","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Value","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> ("},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"text":"?","kind":"text"}],"abstract":[{"text":"Returns a function that can attempt to extract associated values from the given enum case","type":"text"},{"text":" ","type":"text"},{"text":"initializer.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/extract(_:)-2jy2a","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(_:)-2jy2a","deprecated":true,"title":"extract(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"}}}