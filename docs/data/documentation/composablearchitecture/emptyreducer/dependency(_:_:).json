{"abstract":[{"text":"Sets the dependency value of the specified key path to the given value.","type":"text"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/emptyreducer\/dependency(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/dependency(_:_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@warn_unqualified_access"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dependency","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"keyPath"},{"text":": ","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"keyPath","content":[{"inlineContent":[{"type":"text","text":"A key path that indicates the property of the "},{"type":"codeVoice","code":"DependencyValues"},{"type":"text","text":" structure to"},{"text":" ","type":"text"},{"type":"text","text":"update."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The new value to set for the item specified by "},{"code":"keyPath","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"value"}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A reducer that has the given value set in its dependencies."}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This overrides the dependency specified by ","type":"text"},{"type":"codeVoice","code":"keyPath"},{"text":" for the execution of the receiving","type":"text"},{"type":"text","text":" "},{"type":"text","text":"reducer "},{"type":"emphasis","inlineContent":[{"type":"text","text":"and"}]},{"type":"text","text":" all of its effects. It can be useful for altering the dependencies for just"},{"type":"text","text":" "},{"text":"one portion of your application, while letting the rest of the application continue using the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"default live dependencies."}]},{"type":"paragraph","inlineContent":[{"text":"For example, suppose you are creating an onboarding experience to teach people how to use one","type":"text"},{"type":"text","text":" "},{"text":"of your features. This can be done by constructing a new reducer that embeds the core","type":"text"},{"type":"text","text":" "},{"type":"text","text":"feature’s domain and layers on additional logic:"}]},{"syntax":"swift","code":["struct Onboarding: Reducer {","  struct State {","    var feature: Feature.State","    \/\/ Additional onboarding state","  }","  enum Action {","    case feature(Feature.Action)","    \/\/ Additional onboarding actions","  }","","  var body: some Reducer<State, Action> {","    Scope(state: \\.feature, action: \/Action.feature) {","      Feature()","    }","","    Reduce { state, action in","      \/\/ Additional onboarding logic","    }","  }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can work just fine, but the "},{"code":"Feature","type":"codeVoice"},{"text":" reducer will have access to all of the live","type":"text"},{"text":" ","type":"text"},{"text":"dependencies by default, and that might not be ideal. For example, the ","type":"text"},{"code":"Feature","type":"codeVoice"},{"text":" reducer","type":"text"},{"text":" ","type":"text"},{"text":"may need to make API requests and read\/write from user defaults. It may be preferable","type":"text"},{"text":" ","type":"text"},{"text":"to run the ","type":"text"},{"code":"Feature","type":"codeVoice"},{"text":" reducer in an alternative environment for onboarding purposes, such","type":"text"},{"type":"text","text":" "},{"text":"as an API client that returns some mock data or an in-memory user defaults so that the","type":"text"},{"type":"text","text":" "},{"text":"onboarding experience doesn’t accidentally trample on shared data.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be by using the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/dependency(_:_:)","isActive":true},{"type":"text","text":" method to override those dependencies"},{"type":"text","text":" "},{"type":"text","text":"just for the "},{"type":"codeVoice","code":"Feature"},{"text":" reducer and its effects:","type":"text"}]},{"type":"codeListing","code":["var body: some Reducer<State, Action> {","  Scope(state: \\.feature, action: \/Action.feature) {","    Feature()","      .dependency(\\.apiClient, .mock)","      .dependency(\\.userDefaults, .mock)","  }","","  Reduce { state, action in","    \/\/ Additional onboarding logic","  }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/transformDependency(_:transform:)"},{"type":"text","text":" for a similar method that can inspect and modify the"},{"text":" ","type":"text"},{"text":"current dependency when overriding.","type":"text"}]}]}],"metadata":{"symbolKind":"method","title":"dependency(_:_:)","role":"symbol","roleHeading":"Instance Method","externalID":"s:22ComposableArchitecture7ReducerPAAE10dependencyyAA021_DependencyKeyWritingC0VyxGs08WritableF4PathCy12Dependencies0E6ValuesVqd__G_qd__tlF::SYNTHESIZED::s:22ComposableArchitecture12EmptyReducerV","extendedModule":"ComposableArchitecture","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"dependency"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"modules":[{"name":"ComposableArchitecture"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/Reducer-Implementations"]]},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer/dependency(_:_:)":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/dependency(_:_:)","title":"dependency(_:_:)","abstract":[{"text":"Sets the dependency value of the specified key path to the given value.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/emptyreducer\/dependency(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"dependency","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"text":"DependencyValues","kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}],"title":"Reducer","role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","kind":"symbol","abstract":[{"type":"text","text":"현재 앱의 상태를 주어진 액션을 가지고 어떻게 다음 상태로 변경할 지를 묘사하는 프로토콜. 또한 나중에 Store에 의해 실행되어야 할 "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"가 무엇인지 묘사하고 있습니다.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer":{"type":"topic","title":"EmptyReducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"EmptyReducer","kind":"identifier"}],"abstract":[{"text":"아무것도 하지 않는 리듀서.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmptyReducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/emptyreducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer/transformDependency(_:transform:)":{"kind":"symbol","title":"transformDependency(_:transform:)","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/transformDependency(_:transform:)","url":"\/documentation\/composablearchitecture\/emptyreducer\/transformdependency(_:transform:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"transformDependency","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"transform","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"text":"Transform a reducer’s dependency value at the specified key path with the given function.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer/Reducer-Implementations":{"kind":"article","url":"\/documentation\/composablearchitecture\/emptyreducer\/reducer-implementations","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer\/Reducer-Implementations","type":"topic","title":"Reducer Implementations","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","kind":"symbol","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"}}}