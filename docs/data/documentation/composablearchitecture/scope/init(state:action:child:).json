{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/scope\/init(state:action:child:)"]}],"abstract":[{"type":"text","text":"Initializes a reducer that runs the given child reducer against a slice of parent state and"},{"text":" ","type":"text"},{"text":"actions.","type":"text"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:)","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"<"},{"text":"ChildState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"text":" ","kind":"text"},{"text":"toChildState","kind":"internalParam"},{"kind":"text","text":": "},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ParentState"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":" "},{"text":"toChildAction","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"text":"<","kind":"text"},{"text":"ParentAction","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">, "},{"text":"@","kind":"attribute"},{"kind":"attribute","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","text":"ReducerBuilder","preciseIdentifier":"s:22ComposableArchitecture14ReducerBuilderO"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ChildAction"},{"text":">","kind":"text"},{"text":" ","kind":"text"},{"kind":"externalParam","text":"child"},{"kind":"text","text":": () -> "},{"text":"Child","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"Child"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Child"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A writable key path from parent state to a property containing child state."}]}],"name":"toChildState"},{"content":[{"inlineContent":[{"type":"text","text":"A case path from parent action to a case containing child actions."}],"type":"paragraph"}],"name":"toChildAction"},{"name":"child","content":[{"type":"paragraph","inlineContent":[{"text":"A reducer that will be invoked with child actions against child state.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"Useful for combining child reducers into a parent."}],"type":"paragraph"},{"syntax":"swift","code":["var body: some Reducer<State, Action> {","  Scope(state: \\.profile, action: \/Action.profile) {","    Profile()","  }","  Scope(state: \\.settings, action: \/Action.settings) {","    Settings()","  }","  \/\/ ...","}"],"type":"codeListing"}]}],"metadata":{"externalID":"s:22ComposableArchitecture5ScopeV5state6action5childACyxq_q0_Gs15WritableKeyPathCyxqd__G_9CasePaths0jI0Vyq_qd_0_Gq0_yXEtc5StateQy0_Rsd__6ActionQy0_Rsd_0_r0_lufc","symbolKind":"init","roleHeading":"Initializer","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"title":"init(state:action:child:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildAction"},{"kind":"text","text":">("},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildState"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier","text":"CasePath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentAction"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"child","kind":"externalParam"},{"kind":"text","text":": () -> "},{"text":"Child","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/init(state:action:child:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ChildState"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"text":": ","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"ParentState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ChildState"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ParentAction","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"child"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Child"},{"text":")","kind":"text"}],"type":"topic","title":"init(state:action:child:)","abstract":[{"type":"text","text":"Initializes a reducer that runs the given child reducer against a slice of parent state and"},{"text":" ","type":"text"},{"type":"text","text":"actions."}],"role":"symbol","url":"\/documentation\/composablearchitecture\/scope\/init(state:action:child:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReducerBuilder"}],"title":"ReducerBuilder","role":"symbol","url":"\/documentation\/composablearchitecture\/reducerbuilder","kind":"symbol","abstract":[{"text":"리듀서들을 순차적으로 실행시켜 하나의 리듀서로 결합시키고 이펙트들을 머지하기 위한 ","type":"text"},{"type":"codeVoice","code":"resultBuilder"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"ReducerBuilder","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}],"title":"Reducer","role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","kind":"symbol","abstract":[{"type":"text","text":"현재 앱의 상태를 주어진 액션을 가지고 어떻게 다음 상태로 변경할 지를 묘사하는 프로토콜. 또한 나중에 Store에 의해 실행되어야 할 "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"가 무엇인지 묘사하고 있습니다.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/scope","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","type":"topic","title":"Scope","abstract":[{"text":"Embeds a child reducer in a parent domain.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"navigatorTitle":[{"kind":"identifier","text":"Scope"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","kind":"symbol","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"}}}