{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedScheduler","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedScheduler\/Scheduler-Implementations"]]},"metadata":{"roleHeading":"Instance Method","externalID":"s:7Combine9SchedulerP0A10SchedulersE14timerPublisher5every9tolerance7optionsAA10PublishersOADE5TimerCy_xG0B8TimeType_6StrideQZ_APSg0B7OptionsQzSgtF::SYNTHESIZED::s:17CombineSchedulers22UnimplementedSchedulerV","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"timerPublisher"},{"text":"(","kind":"text"},{"text":"every","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"kind":"text","text":"."},{"text":"Stride","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"tolerance"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Stride"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerOptions"},{"kind":"text","text":"?) -> "},{"text":"Publishers","kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO0A10SchedulersE5TimerC","text":"Timer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"platforms":[{"unavailable":false,"name":"iOS","deprecated":false,"beta":false,"introducedAt":"13.0"},{"beta":false,"introducedAt":"10.15","unavailable":false,"deprecated":false,"name":"macOS"},{"deprecated":false,"beta":false,"introducedAt":"13.0","unavailable":false,"name":"tvOS"},{"deprecated":false,"name":"watchOS","introducedAt":"6.0","unavailable":false,"beta":false}],"role":"symbol","modules":[{"name":"ComposableArchitecture","relatedModules":["Combine"]}],"symbolKind":"method","title":"timerPublisher(every:tolerance:options:)","extendedModule":"Combine"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"timerPublisher","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"every"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"interval"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Stride"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tolerance"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Stride","kind":"typeIdentifier"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"options"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerOptions"},{"kind":"text","text":"? = nil) -> "},{"preciseIdentifier":"s:7Combine10PublishersO","text":"Publishers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Timer","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine\/Publishers\/Timer","preciseIdentifier":"s:7Combine10PublishersO0A10SchedulersE5TimerC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"platforms":["iOS"]}]},{"parameters":[{"name":"interval","content":[{"type":"paragraph","inlineContent":[{"text":"The time interval on which to publish events. For example, a value of ","type":"text"},{"type":"codeVoice","code":"0.5"},{"text":" ","type":"text"},{"text":"publishes an event approximately every half-second.","type":"text"}]}]},{"name":"tolerance","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The allowed timing variance when emitting events. Defaults to "},{"type":"codeVoice","code":"nil"},{"text":", which","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"allows any variance."}]}]},{"name":"options","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Scheduler options passed to the timer. Defaults to "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A publisher that repeatedly emits the current date on the given interval.","type":"text"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedScheduler\/timerPublisher(every:tolerance:options:)"},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/unimplementedscheduler\/timerpublisher(every:tolerance:options:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Returns a publisher that repeatedly emits the scheduler’s current time on the given"},{"text":" ","type":"text"},{"type":"text","text":"interval."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedScheduler/Scheduler-Implementations":{"url":"\/documentation\/composablearchitecture\/unimplementedscheduler\/scheduler-implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedScheduler\/Scheduler-Implementations","title":"Scheduler Implementations","abstract":[],"role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Combine/Publishers/Timer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine\/Publishers\/Timer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Timer"}],"url":"\/documentation\/composablearchitecture\/combine\/publishers\/timer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Timer"}],"abstract":[{"text":"A publisher that emits a scheduler’s current time on a repeating interval.","type":"text"}],"type":"topic","kind":"symbol","title":"Publishers.Timer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedScheduler/timerPublisher(every:tolerance:options:)":{"url":"\/documentation\/composablearchitecture\/unimplementedscheduler\/timerpublisher(every:tolerance:options:)","abstract":[{"type":"text","text":"Returns a publisher that repeatedly emits the scheduler’s current time on the given"},{"type":"text","text":" "},{"type":"text","text":"interval."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedScheduler\/timerPublisher(every:tolerance:options:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"timerPublisher"},{"text":"(","kind":"text"},{"text":"every","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"text":".","kind":"text"},{"text":"Stride","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"tolerance","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Stride","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"SchedulerOptions","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:7Combine10PublishersO","kind":"typeIdentifier","text":"Publishers"},{"text":".","kind":"text"},{"text":"Timer","kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO0A10SchedulersE5TimerC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"kind":"symbol","title":"timerPublisher(every:tolerance:options:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedScheduler":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnimplementedScheduler"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedScheduler","title":"UnimplementedScheduler","navigatorTitle":[{"text":"UnimplementedScheduler","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"A scheduler that causes the current XCTest test case to fail if it is used.","type":"text"}],"url":"\/documentation\/composablearchitecture\/unimplementedscheduler"}}}