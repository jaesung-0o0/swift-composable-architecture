{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedScheduler","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedScheduler\/Scheduler-Implementations"]]},"sections":[],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"animate"},{"text":"(","kind":"text"},{"text":"withDuration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@T@NSTimeInterval","kind":"typeIdentifier","text":"TimeInterval"},{"kind":"text","text":", "},{"kind":"externalParam","text":"delay"},{"kind":"text","text":": "},{"text":"TimeInterval","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"usingSpringWithDamping"},{"kind":"text","text":": "},{"text":"CGFloat","kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initialSpringVelocity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"text":"UIView","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)UIView"},{"text":".","kind":"text"},{"text":"AnimationOptions","kind":"typeIdentifier","preciseIdentifier":"c:@E@UIViewAnimationOptions"},{"text":") -> ","kind":"text"},{"text":"AnySchedulerOf","kind":"typeIdentifier","preciseIdentifier":"s:17CombineSchedulers14AnySchedulerOfa"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","modules":[{"name":"ComposableArchitecture","relatedModules":["Combine"]}],"symbolKind":"method","role":"symbol","extendedModule":"Combine","externalID":"s:7Combine9SchedulerP0A10SchedulersE7animate12withDuration5delay22usingSpringWithDamping07initialI8Velocity7optionsAD03AnyB0Vy0B8TimeTypeQz0B7OptionsQzGSd_Sd14CoreFoundation7CGFloatVATSo015UIViewAnimationR0VtF::SYNTHESIZED::s:17CombineSchedulers22UnimplementedSchedulerV","title":"animate(withDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"animate","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"withDuration"},{"kind":"text","text":" "},{"kind":"internalParam","text":"duration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":", "},{"kind":"externalParam","text":"delay"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@T@NSTimeInterval","text":"TimeInterval","kind":"typeIdentifier"},{"text":" = 0, ","kind":"text"},{"text":"usingSpringWithDamping","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"dampingRatio"},{"kind":"text","text":": "},{"text":"CGFloat","kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"text":", ","kind":"text"},{"text":"initialSpringVelocity","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"velocity"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"options"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"animationOptions"},{"text":": ","kind":"text"},{"text":"UIView","preciseIdentifier":"c:objc(cs)UIView","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"c:@E@UIViewAnimationOptions","kind":"typeIdentifier","text":"AnimationOptions"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnySchedulerOf","preciseIdentifier":"s:17CombineSchedulers14AnySchedulerOfa","kind":"typeIdentifier","text":"AnySchedulerOf"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}]},{"parameters":[{"name":"duration","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"duration","type":"codeVoice"},{"type":"text","text":" parameter passed to "},{"code":"UIView.animate","type":"codeVoice"},{"type":"text","text":"."}]}]},{"name":"delay","content":[{"inlineContent":[{"type":"text","text":"The "},{"code":"delay","type":"codeVoice"},{"text":" parameter passed to ","type":"text"},{"code":"UIView.animate","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"name":"dampingRatio","content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"dampingRatio","type":"codeVoice"},{"type":"text","text":" parameter passed to "},{"code":"UIView.animate","type":"codeVoice"}],"type":"paragraph"}]},{"name":"velocity","content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"velocity","type":"codeVoice"},{"type":"text","text":" parameter passed to "},{"code":"UIView.animate","type":"codeVoice"}],"type":"paragraph"}]},{"name":"animationOptions","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"options","type":"codeVoice"},{"text":" parameter passed to ","type":"text"},{"type":"codeVoice","code":"UIView.animate"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A scheduler that wraps scheduled actions in "},{"type":"codeVoice","code":"UIView.animate"},{"text":".","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/unimplementedscheduler\/animate(withduration:delay:usingspringwithdamping:initialspringvelocity:options:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Wraps scheduled actions in "},{"code":"UIView.animate","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedScheduler\/animate(withDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedScheduler/Scheduler-Implementations":{"url":"\/documentation\/composablearchitecture\/unimplementedscheduler\/scheduler-implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedScheduler\/Scheduler-Implementations","title":"Scheduler Implementations","abstract":[],"role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedScheduler":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnimplementedScheduler"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedScheduler","title":"UnimplementedScheduler","navigatorTitle":[{"text":"UnimplementedScheduler","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"A scheduler that causes the current XCTest test case to fail if it is used.","type":"text"}],"url":"\/documentation\/composablearchitecture\/unimplementedscheduler"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedScheduler/animate(withDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:)":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedScheduler\/animate(withDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:)","abstract":[{"text":"Wraps scheduled actions in ","type":"text"},{"type":"codeVoice","code":"UIView.animate"},{"type":"text","text":"."}],"title":"animate(withDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"animate"},{"text":"(","kind":"text"},{"text":"withDuration","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":", "},{"text":"delay","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeInterval","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"usingSpringWithDamping"},{"text":": ","kind":"text"},{"text":"CGFloat","kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initialSpringVelocity"},{"text":": ","kind":"text"},{"text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)UIView","kind":"typeIdentifier","text":"UIView"},{"text":".","kind":"text"},{"text":"AnimationOptions","kind":"typeIdentifier","preciseIdentifier":"c:@E@UIViewAnimationOptions"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AnySchedulerOf","preciseIdentifier":"s:17CombineSchedulers14AnySchedulerOfa"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","url":"\/documentation\/composablearchitecture\/unimplementedscheduler\/animate(withduration:delay:usingspringwithdamping:initialspringvelocity:options:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnySchedulerOf":{"navigatorTitle":[{"kind":"identifier","text":"AnySchedulerOf"}],"type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnySchedulerOf","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnySchedulerOf","kind":"identifier"}],"title":"AnySchedulerOf","kind":"symbol","url":"\/documentation\/composablearchitecture\/anyschedulerof","abstract":[{"type":"text","text":"A convenience type to specify an "},{"type":"codeVoice","code":"AnyScheduler"},{"type":"text","text":" by the scheduler it wraps rather than by the"},{"text":" ","type":"text"},{"text":"time type and options type.","type":"text"}]}}}