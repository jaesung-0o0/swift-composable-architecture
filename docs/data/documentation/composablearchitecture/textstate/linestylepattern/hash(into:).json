{"variants":[{"paths":["\/documentation\/composablearchitecture\/textstate\/linestylepattern\/hash(into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/LineStylePattern\/hash(into:)","interfaceLanguage":"swift"},"metadata":{"modules":[{"relatedModules":["Swift"],"name":"ComposableArchitecture"}],"extendedModule":"Swift","role":"symbol","roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]},"externalID":"s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::s:21SwiftUINavigationCore9TextStateV16LineStylePatternO","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"hash","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}],"title":"hash(into:)"},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"kind":"text","text":"("},{"text":"into","kind":"externalParam"},{"kind":"text","text":" "},{"text":"hasher","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/LineStylePattern","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/LineStylePattern\/RawRepresentable-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"RawRepresentable.hash(into:)"},{"type":"text","text":"."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/LineStylePattern":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LineStylePattern"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/textstate\/linestylepattern","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/LineStylePattern","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LineStylePattern"}],"title":"TextState.LineStylePattern","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/LineStylePattern/RawRepresentable-Implementations":{"type":"topic","title":"RawRepresentable Implementations","kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/LineStylePattern\/RawRepresentable-Implementations","url":"\/documentation\/composablearchitecture\/textstate\/linestylepattern\/rawrepresentable-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","url":"\/documentation\/composablearchitecture\/textstate","kind":"symbol","abstract":[{"text":"An equatable description of SwiftUI ","type":"text"},{"type":"codeVoice","code":"Text"},{"type":"text","text":". Useful for storing rich text in feature models"},{"text":" ","type":"text"},{"type":"text","text":"that can still be tested for equality."}],"type":"topic","role":"symbol","title":"TextState","navigatorTitle":[{"kind":"identifier","text":"TextState"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TextState"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/LineStylePattern/hash(into:)":{"kind":"symbol","type":"topic","abstract":[],"role":"symbol","url":"\/documentation\/composablearchitecture\/textstate\/linestylepattern\/hash(into:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/LineStylePattern\/hash(into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"hash","kind":"identifier"},{"kind":"text","text":"("},{"text":"into","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV","text":"Hasher"},{"text":")","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"hash(into:)"}}}