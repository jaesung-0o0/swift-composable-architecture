{"abstract":[{"text":"Inherited from ","type":"text"},{"code":"RawRepresentable.init(rawValue:)","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"text":"?(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/LineStylePattern"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/LineStylePattern\/init(rawValue:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/textstate\/linestylepattern\/init(rawvalue:)"]}],"metadata":{"roleHeading":"Initializer","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:21SwiftUINavigationCore9TextStateV16LineStylePatternO8rawValueAESgSS_tcfc","role":"symbol","symbolKind":"init","title":"init(rawValue:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}]},"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/LineStylePattern/init(rawValue:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":")","kind":"text"}],"title":"init(rawValue:)","type":"topic","kind":"symbol","role":"symbol","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/LineStylePattern\/init(rawValue:)","url":"\/documentation\/composablearchitecture\/textstate\/linestylepattern\/init(rawvalue:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/LineStylePattern":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LineStylePattern"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/textstate\/linestylepattern","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/LineStylePattern","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LineStylePattern"}],"title":"TextState.LineStylePattern","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","url":"\/documentation\/composablearchitecture\/textstate","kind":"symbol","abstract":[{"text":"An equatable description of SwiftUI ","type":"text"},{"type":"codeVoice","code":"Text"},{"type":"text","text":". Useful for storing rich text in feature models"},{"text":" ","type":"text"},{"type":"text","text":"that can still be tested for equality."}],"type":"topic","role":"symbol","title":"TextState","navigatorTitle":[{"kind":"identifier","text":"TextState"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TextState"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"}}}