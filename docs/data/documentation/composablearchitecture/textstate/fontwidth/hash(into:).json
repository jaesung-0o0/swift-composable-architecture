{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/FontWidth\/hash(into:)"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/FontWidth","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/FontWidth\/RawRepresentable-Implementations"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"RawRepresentable.hash(into:)"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"text":" ","kind":"text"},{"text":"hasher","kind":"internalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV","text":"Hasher"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"}],"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}],"symbolKind":"method","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"ComposableArchitecture"}],"title":"hash(into:)","extendedModule":"Swift","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}]},"roleHeading":"Instance Method","externalID":"s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::s:21SwiftUINavigationCore9TextStateV9FontWidthO"},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/composablearchitecture\/textstate\/fontwidth\/hash(into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/FontWidth/hash(into:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6HasherV","kind":"typeIdentifier","text":"Hasher"},{"kind":"text","text":")"}],"abstract":[],"type":"topic","title":"hash(into:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/FontWidth\/hash(into:)","url":"\/documentation\/composablearchitecture\/textstate\/fontwidth\/hash(into:)","kind":"symbol","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/FontWidth/RawRepresentable-Implementations":{"title":"RawRepresentable Implementations","kind":"article","abstract":[],"url":"\/documentation\/composablearchitecture\/textstate\/fontwidth\/rawrepresentable-implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/FontWidth\/RawRepresentable-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","url":"\/documentation\/composablearchitecture\/textstate","kind":"symbol","abstract":[{"text":"An equatable description of SwiftUI ","type":"text"},{"type":"codeVoice","code":"Text"},{"type":"text","text":". Useful for storing rich text in feature models"},{"text":" ","type":"text"},{"type":"text","text":"that can still be tested for equality."}],"type":"topic","role":"symbol","title":"TextState","navigatorTitle":[{"kind":"identifier","text":"TextState"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TextState"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/FontWidth":{"url":"\/documentation\/composablearchitecture\/textstate\/fontwidth","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"FontWidth","kind":"identifier"}],"title":"TextState.FontWidth","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/FontWidth","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"FontWidth"}]}}}