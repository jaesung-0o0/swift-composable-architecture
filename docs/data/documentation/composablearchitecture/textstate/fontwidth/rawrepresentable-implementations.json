{"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/FontWidth\/RawRepresentable-Implementations","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/textstate\/fontwidth\/rawrepresentable-implementations"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"modules":[{"name":"ComposableArchitecture"}],"role":"collectionGroup","title":"RawRepresentable Implementations"},"kind":"article","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/FontWidth"]]},"topicSections":[{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/FontWidth\/hashValue"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/FontWidth\/hash(into:)"],"title":"Instance Methods","generated":true}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/FontWidth":{"url":"\/documentation\/composablearchitecture\/textstate\/fontwidth","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"FontWidth","kind":"identifier"}],"title":"TextState.FontWidth","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/FontWidth","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"FontWidth"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/FontWidth/hash(into:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6HasherV","kind":"typeIdentifier","text":"Hasher"},{"kind":"text","text":")"}],"abstract":[],"type":"topic","title":"hash(into:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/FontWidth\/hash(into:)","url":"\/documentation\/composablearchitecture\/textstate\/fontwidth\/hash(into:)","kind":"symbol","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState/FontWidth/hashValue":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState\/FontWidth\/hashValue","url":"\/documentation\/composablearchitecture\/textstate\/fontwidth\/hashvalue","kind":"symbol","type":"topic","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hashValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"title":"hashValue","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TextState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TextState","url":"\/documentation\/composablearchitecture\/textstate","kind":"symbol","abstract":[{"text":"An equatable description of SwiftUI ","type":"text"},{"type":"codeVoice","code":"Text"},{"type":"text","text":". Useful for storing rich text in feature models"},{"text":" ","type":"text"},{"type":"text","text":"that can still be tested for equality."}],"type":"topic","role":"symbol","title":"TextState","navigatorTitle":[{"kind":"identifier","text":"TextState"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TextState"}]}}}