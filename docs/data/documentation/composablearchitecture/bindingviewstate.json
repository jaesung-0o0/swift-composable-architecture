{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"@dynamicMemberLookup","kind":"attribute"},{"kind":"text","text":" "},{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingViewState","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"text":">","kind":"text"}]}]},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Read "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","isActive":true,"type":"reference"},{"type":"text","text":" for more information."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"metadata":{"title":"BindingViewState","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BindingViewState","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"BindingViewState"}],"symbolKind":"struct","modules":[{"name":"ComposableArchitecture"}],"role":"symbol","externalID":"s:22ComposableArchitecture16BindingViewStateV"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"]]},"abstract":[{"text":"A property wrapper type that can designate properties of view state that can be directly","type":"text"},{"type":"text","text":" "},{"type":"text","text":"bindable in SwiftUI views."}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/projectedValue","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/wrappedValue"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/subscript(dynamicMember:)"],"title":"Subscripts"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDebugStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDumpRepresentable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomReflectable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Hashable-Implementations"]}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpRepresentable","doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/ComposableArchitecture\/s17CustomReflectableP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH"]}],"seeAlsoSections":[{"title":"Bindings","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-65xes","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore"],"generated":true}],"variants":[{"paths":["\/documentation\/composablearchitecture\/bindingviewstate"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(get:send:)-65xes":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/binding(get:send:)-65xes","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"binding"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"get"},{"text":": (","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"state","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C5Statexmfp","text":"ViewState"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC7binding3get4send7SwiftUI7BindingVyqd__Gqd__xc_q_qd__ctlF5ValueL_qd__mfp"},{"text":", ","kind":"text"},{"text":"send","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC7binding3get4send7SwiftUI7BindingVyqd__Gqd__xc_q_qd__ctlF5ValueL_qd__mfp","text":"Value"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C6Actionq_mfp","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding"},{"text":"<","kind":"text"},{"text":"Value","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC7binding3get4send7SwiftUI7BindingVyqd__Gqd__xc_q_qd__ctlF5ValueL_qd__mfp","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","title":"binding(get:send:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-65xes","role":"symbol","abstract":[{"type":"text","text":"Derives a binding from the store that prevents direct writes to state and instead sends"},{"text":" ","type":"text"},{"type":"text","text":"actions to the store."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","url":"\/documentation\/composablearchitecture\/bindingviewstate","kind":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can designate properties of view state that can be directly"},{"type":"text","text":" "},{"text":"bindable in SwiftUI views.","type":"text"}],"type":"topic","role":"symbol","title":"BindingViewState","navigatorTitle":[{"text":"BindingViewState","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BindingViewState","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomReflectable-Implementations":{"kind":"article","type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/bindingviewstate\/customreflectable-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomReflectable-Implementations","title":"CustomReflectable Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/Equatable-Implementations":{"url":"\/documentation\/composablearchitecture\/bindingviewstate\/equatable-implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Equatable-Implementations","abstract":[],"role":"collectionGroup","kind":"article","title":"Equatable Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"url":"\/documentation\/composablearchitecture\/bindingreducer","navigatorTitle":[{"text":"BindingReducer","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"바인딩 액션을 전달 받을 때, 바인딩할 수 있는 상태("},{"type":"codeVoice","code":"BindableState"},{"text":") 를 업데이트 하는 리듀서","type":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","title":"BindingReducer","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingReducer"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/Hashable-Implementations":{"kind":"article","role":"collectionGroup","abstract":[],"title":"Hashable Implementations","type":"topic","url":"\/documentation\/composablearchitecture\/bindingviewstate\/hashable-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Hashable-Implementations"},"doc://ComposableArchitecture/s28CustomDebugStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/wrappedValue":{"role":"symbol","url":"\/documentation\/composablearchitecture\/bindingviewstate\/wrappedvalue","title":"wrappedValue","type":"topic","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStateV5Valuexmfp","text":"Value","kind":"typeIdentifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/wrappedValue"},"doc://ComposableArchitecture/SQ":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SQ","title":"Swift.Equatable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/SH":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SH","title":"Swift.Hashable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewStore":{"url":"\/documentation\/composablearchitecture\/bindingviewstore","abstract":[{"type":"text","text":"A property wrapper type that can derive "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","isActive":true},{"text":" values for a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true,"type":"reference"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BindingViewStore","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"BindingViewStore","kind":"identifier"}],"title":"BindingViewStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","role":"symbol","navigatorTitle":[{"text":"BindingState","kind":"identifier"}],"type":"topic","title":"BindingState","abstract":[{"type":"text","text":"A property wrapper type that can designate properties of app state that can be directly bindable"},{"type":"text","text":" "},{"type":"text","text":"in SwiftUI views."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/bindingstate","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/projectedValue":{"kind":"symbol","type":"topic","abstract":[],"role":"symbol","url":"\/documentation\/composablearchitecture\/bindingviewstate\/projectedvalue","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/projectedValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Binding","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStateV5Valuexmfp","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"projectedValue"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"title":"ViewStore","type":"topic","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"type":"text","text":" "},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewStore"}],"navigatorTitle":[{"text":"ViewStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/viewstore","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomDebugStringConvertible-Implementations":{"url":"\/documentation\/composablearchitecture\/bindingviewstate\/customdebugstringconvertible-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDebugStringConvertible-Implementations","title":"CustomDebugStringConvertible Implementations","type":"topic","abstract":[],"kind":"article","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomDumpRepresentable-Implementations":{"title":"CustomDumpRepresentable Implementations","url":"\/documentation\/composablearchitecture\/bindingviewstate\/customdumprepresentable-implementations","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDumpRepresentable-Implementations","abstract":[],"type":"topic","role":"collectionGroup"},"doc://ComposableArchitecture/s17CustomReflectableP":{"identifier":"doc:\/\/ComposableArchitecture\/s17CustomReflectableP","title":"Swift.CustomReflectable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/subscript(dynamicMember:)":{"kind":"symbol","type":"topic","abstract":[],"role":"symbol","url":"\/documentation\/composablearchitecture\/bindingviewstate\/subscript(dynamicmember:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/subscript(dynamicMember:)","fragments":[{"kind":"keyword","text":"subscript"},{"text":"<","kind":"text"},{"text":"Subject","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"dynamicMember"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStateV5Valuexmfp","text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStateV13dynamicMemberACyqd__Gs15WritableKeyPathCyxqd__G_tcluip7SubjectL_qd__mfp","text":"Subject","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStateV","text":"BindingViewState"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Subject","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStateV13dynamicMemberACyqd__Gs15WritableKeyPathCyxqd__G_tcluip7SubjectL_qd__mfp"},{"text":">","kind":"text"}],"title":"subscript(dynamicMember:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CustomDumpRepresentable":{"abstract":[{"text":"A type that can be converted to a value for the purpose of dumping.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomDumpRepresentable"}],"type":"topic","url":"\/documentation\/composablearchitecture\/customdumprepresentable","title":"CustomDumpRepresentable","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpRepresentable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CustomDumpRepresentable"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","url":"\/documentation\/composablearchitecture\/bindingaction","abstract":[{"type":"text","text":"An action that describes simple mutations to some root state at a writable key path."}],"type":"topic","role":"symbol","title":"BindingAction","navigatorTitle":[{"kind":"identifier","text":"BindingAction"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BindingAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Bindings":{"kind":"article","abstract":[{"text":"Learn how to connect features written in the Composable Architecture to SwiftUI bindings.","type":"text"}],"url":"\/documentation\/composablearchitecture\/bindings","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","title":"Working with SwiftUI bindings","role":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction":{"abstract":[{"type":"text","text":"An action type that exposes a "},{"type":"codeVoice","code":"binding"},{"text":" case that holds a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction"},{"type":"text","text":"."}],"url":"\/documentation\/composablearchitecture\/bindableaction","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindableAction"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"BindableAction","kind":"identifier"}],"title":"BindableAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction"}}}