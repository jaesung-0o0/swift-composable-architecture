{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine\/Scheduler"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/combine\/scheduler\/timer(interval:tolerance:options:)"]}],"abstract":[{"type":"text","text":"Returns a stream that repeatedly yields the current time of the scheduler on a given interval."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"timer","kind":"identifier"},{"kind":"text","text":"("},{"text":"interval","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Stride"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"kind":"text","text":"."},{"text":"Stride","kind":"typeIdentifier"},{"kind":"text","text":" = .zero, "},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SchedulerOptions","kind":"typeIdentifier"},{"kind":"text","text":"? = nil) -> "},{"preciseIdentifier":"s:ScS","kind":"typeIdentifier","text":"AsyncStream"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"kind":"text","text":">"}],"platforms":["iOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The time interval on which to sleep between yielding the current instant in","type":"text"},{"text":" ","type":"text"},{"text":"time. For example, a value of ","type":"text"},{"type":"codeVoice","code":"0.5"},{"text":" yields an instant approximately every half-second.","type":"text"}]}],"name":"interval"},{"name":"tolerance","content":[{"type":"paragraph","inlineContent":[{"text":"The allowed timing variance when emitting events. Defaults to ","type":"text"},{"code":"zero","type":"codeVoice"},{"type":"text","text":"."}]}]},{"name":"options","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Scheduler options passed to the timer. Defaults to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}]}]},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A stream that repeatedly yields the current time.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the task is cancelled, the sequence will terminate."}]},{"syntax":null,"type":"codeListing","code":["for await instant in scheduler.timer(interval: .seconds(1)) {","  print(\"now:\", instant)","}"]}]}],"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine\/Scheduler\/timer(interval:tolerance:options:)","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"timer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"interval"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Stride"},{"text":", ","kind":"text"},{"text":"tolerance","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Stride"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerOptions"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:ScS","text":"AsyncStream","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"timer(interval:tolerance:options:)","roleHeading":"Instance Method","modules":[{"name":"ComposableArchitecture","relatedModules":["Combine"]}],"role":"symbol","symbolKind":"method","externalID":"s:7Combine9SchedulerP0A10SchedulersE5timer8interval9tolerance7optionsScSy0B8TimeTypeQzGAI_6StrideQZ_AM0B7OptionsQzSgtF","extendedModule":"Combine"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Combine/Scheduler/timer(interval:tolerance:options:)":{"type":"topic","title":"timer(interval:tolerance:options:)","url":"\/documentation\/composablearchitecture\/combine\/scheduler\/timer(interval:tolerance:options:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"timer"},{"text":"(","kind":"text"},{"text":"interval","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"text":".","kind":"text"},{"text":"Stride","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"tolerance","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"kind":"text","text":"."},{"text":"Stride","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SchedulerOptions","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"AsyncStream","kind":"typeIdentifier","preciseIdentifier":"s:ScS"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"text":">","kind":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine\/Scheduler\/timer(interval:tolerance:options:)","abstract":[{"text":"Returns a stream that repeatedly yields the current time of the scheduler on a given interval.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Combine/Scheduler":{"title":"Scheduler","role":"symbol","navigatorTitle":[{"text":"Scheduler","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/combine\/scheduler","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"kind":"identifier","preciseIdentifier":"s:7Combine9SchedulerP","text":"Scheduler"}],"abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine\/Scheduler"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Combine":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Combine","role":"collection","url":"\/documentation\/composablearchitecture\/combine","abstract":[],"type":"topic","kind":"symbol","title":"Combine"}}}