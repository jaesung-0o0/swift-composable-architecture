{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"@dynamicMemberLookup","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UncheckedSendable","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">","kind":"text"}]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Sometimes we need to use types that should be sendable but have not yet been audited for","type":"text"},{"text":" ","type":"text"},{"text":"sendability. If we feel confident that the type is truly sendable, and we donâ€™t want to blanket","type":"text"},{"text":" ","type":"text"},{"text":"disable concurrency warnings for a module via ","type":"text"},{"type":"codeVoice","code":"@preconcurrency import"},{"type":"text","text":", then we can selectively"},{"type":"text","text":" "},{"text":"make that single type sendable by wrapping it in ","type":"text"},{"code":"UncheckedSendable","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"By wrapping something in "},{"type":"codeVoice","code":"UncheckedSendable"},{"text":" you are asking the compiler to trust you","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that the type is safe to use from multiple threads, and the compiler cannot help you find"},{"text":" ","type":"text"},{"type":"text","text":"potential race conditions in your code."}]}],"style":"note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To synchronously isolate a value with a lock, see "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated","isActive":true},{"type":"text","text":". To asynchronously isolated a"},{"type":"text","text":" "},{"type":"text","text":"value on an actor, see "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ActorIsolated","type":"reference","isActive":true},{"type":"text","text":"."}]}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"kind":"symbol","metadata":{"externalID":"s:17ConcurrencyExtras17UncheckedSendableV","symbolKind":"struct","role":"symbol","roleHeading":"Structure","navigatorTitle":[{"text":"UncheckedSendable","kind":"identifier"}],"title":"UncheckedSendable","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UncheckedSendable","kind":"identifier"}],"modules":[{"name":"ComposableArchitecture"}]},"abstract":[{"type":"text","text":"A generic wrapper for turning any non-"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" type into a "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" one, in an unchecked"},{"type":"text","text":" "},{"type":"text","text":"manner."}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/init(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/projectedValue","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/value","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/wrappedValue"]},{"title":"Subscripts","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/subscript(dynamicMember:)-1qazw","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/subscript(dynamicMember:)-6qlle"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/Decodable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/Encodable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/Equatable-Implementations"],"generated":true,"title":"Default Implementations"}],"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/uncheckedsendable"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/Se","doc:\/\/ComposableArchitecture\/SE","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"],"kind":"relationships","type":"conformsTo"}],"references":{"doc://ComposableArchitecture/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UncheckedSendable/subscript(dynamicMember:)-6qlle":{"url":"\/documentation\/composablearchitecture\/uncheckedsendable\/subscript(dynamicmember:)-6qlle","role":"symbol","abstract":[],"title":"subscript(dynamicMember:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/subscript(dynamicMember:)-6qlle","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Subject"},{"kind":"text","text":">("},{"text":"dynamicMember","kind":"externalParam"},{"kind":"text","text":" _: "},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Subject"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UncheckedSendable/value":{"url":"\/documentation\/composablearchitecture\/uncheckedsendable\/value","role":"symbol","abstract":[{"text":"The unchecked value.","type":"text"}],"title":"value","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/value","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"value","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UncheckedSendable/Equatable-Implementations":{"url":"\/documentation\/composablearchitecture\/uncheckedsendable\/equatable-implementations","role":"collectionGroup","abstract":[],"title":"Equatable Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/Equatable-Implementations","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UncheckedSendable/init(_:)":{"url":"\/documentation\/composablearchitecture\/uncheckedsendable\/init(_:)","role":"symbol","abstract":[{"type":"text","text":"Initializes unchecked sendability around a value."}],"title":"init(_:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/init(_:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://ComposableArchitecture/SQ":{"identifier":"doc:\/\/ComposableArchitecture\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UncheckedSendable/projectedValue":{"url":"\/documentation\/composablearchitecture\/uncheckedsendable\/projectedvalue","role":"symbol","abstract":[],"title":"projectedValue","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/projectedValue","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UncheckedSendable","preciseIdentifier":"s:17ConcurrencyExtras17UncheckedSendableV"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UncheckedSendable":{"url":"\/documentation\/composablearchitecture\/uncheckedsendable","role":"symbol","abstract":[{"type":"text","text":"A generic wrapper for turning any non-"},{"type":"codeVoice","code":"Sendable"},{"text":" type into a ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" one, in an unchecked"},{"type":"text","text":" "},{"type":"text","text":"manner."}],"navigatorTitle":[{"kind":"identifier","text":"UncheckedSendable"}],"title":"UncheckedSendable","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UncheckedSendable"}]},"doc://ComposableArchitecture/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/ComposableArchitecture\/SH"},"doc://ComposableArchitecture/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/ComposableArchitecture\/Se"},"doc://ComposableArchitecture/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/ComposableArchitecture\/SE"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UncheckedSendable/wrappedValue":{"url":"\/documentation\/composablearchitecture\/uncheckedsendable\/wrappedvalue","role":"symbol","abstract":[],"title":"wrappedValue","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/wrappedValue","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UncheckedSendable/subscript(dynamicMember:)-1qazw":{"url":"\/documentation\/composablearchitecture\/uncheckedsendable\/subscript(dynamicmember:)-1qazw","role":"symbol","abstract":[],"title":"subscript(dynamicMember:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/subscript(dynamicMember:)-1qazw","type":"topic","fragments":[{"text":"subscript","kind":"keyword"},{"kind":"text","text":"<"},{"text":"Subject","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"dynamicMember"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Subject"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UncheckedSendable/Encodable-Implementations":{"url":"\/documentation\/composablearchitecture\/uncheckedsendable\/encodable-implementations","role":"collectionGroup","abstract":[],"title":"Encodable Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/Encodable-Implementations","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UncheckedSendable/Decodable-Implementations":{"url":"\/documentation\/composablearchitecture\/uncheckedsendable\/decodable-implementations","role":"collectionGroup","abstract":[],"title":"Decodable Implementations","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/Decodable-Implementations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/LockIsolated":{"url":"\/documentation\/composablearchitecture\/lockisolated","role":"symbol","abstract":[{"type":"text","text":"A generic wrapper for isolating a mutable value with a lock."}],"navigatorTitle":[{"kind":"identifier","text":"LockIsolated"}],"title":"LockIsolated","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"LockIsolated","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UncheckedSendable/init(wrappedValue:)":{"url":"\/documentation\/composablearchitecture\/uncheckedsendable\/init(wrappedvalue:)","role":"symbol","abstract":[],"title":"init(wrappedValue:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/init(wrappedValue:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ActorIsolated":{"url":"\/documentation\/composablearchitecture\/actorisolated","role":"symbol","abstract":[{"type":"text","text":"A generic wrapper for isolating a mutable value to an actor."}],"navigatorTitle":[{"kind":"identifier","text":"ActorIsolated"}],"title":"ActorIsolated","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ActorIsolated","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActorIsolated"}]}}}