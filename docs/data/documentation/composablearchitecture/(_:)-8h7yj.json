{"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-8h7yj","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/composablearchitecture\/\/(_:)-8h7yj"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Returns a function that can attempt to extract associated values from the given enum case","type":"text"},{"type":"text","text":" "},{"type":"text","text":"initializer."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"\/","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"internalParam","text":"embed"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> (","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"An enum case initializer.","type":"text"}]}],"name":"embed"}]},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A function that can attempt to extract associated values from an enum.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Use this operator to create new transform functions to pass to higher-order methods like"},{"text":" ","type":"text"},{"type":"codeVoice","code":"compactMap"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","code":["[Result<Int, Error>.success(42), .failure(MyError()]","  .compactMap(\/Result.success)","\/\/ [42]"],"syntax":"swift"},{"content":[{"inlineContent":[{"type":"text","text":"This operator is only intended to be used with enum case initializers. Its behavior is"},{"type":"text","text":" "},{"text":"otherwise undefined.","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Note","style":"note"}]}],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":"?) -> ("},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"roleHeading":"Operator","externalID":"s:9CasePaths1dopyq_SgxSgcADq_cr0_lF","title":"\/(_:)","role":"symbol","symbolKind":"op"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture//(_:)-8h7yj":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> (","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"url":"\/documentation\/composablearchitecture\/\/(_:)-8h7yj","role":"symbol","type":"topic","kind":"symbol","title":"\/(_:)","abstract":[{"type":"text","text":"Returns a function that can attempt to extract associated values from the given enum case"},{"type":"text","text":" "},{"text":"initializer.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-8h7yj"}}}