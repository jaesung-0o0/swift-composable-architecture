{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateScheduler","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateScheduler\/Scheduler-Implementations"]]},"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"eraseToAnyScheduler","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyScheduler","preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SchedulerOptions","kind":"typeIdentifier"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","modules":[{"relatedModules":["Combine"],"name":"ComposableArchitecture"}],"title":"eraseToAnyScheduler()","role":"symbol","symbolKind":"method","externalID":"s:7Combine9SchedulerP0A10SchedulersE010eraseToAnyB0AD0fB0Vy0B8TimeTypeQz0B7OptionsQzGyF::SYNTHESIZED::s:17CombineSchedulers18ImmediateSchedulerV","extendedModule":"Combine"},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Wraps this scheduler with a type eraser.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"eraseToAnyScheduler"},{"kind":"text","text":"() -> "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","kind":"typeIdentifier","text":"AnyScheduler","preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerOptions"},{"text":">","kind":"text"}]}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateScheduler\/eraseToAnyScheduler()","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/composablearchitecture\/immediatescheduler\/erasetoanyscheduler()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ImmediateScheduler/Scheduler-Implementations":{"title":"Scheduler Implementations","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateScheduler\/Scheduler-Implementations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/immediatescheduler\/scheduler-implementations","abstract":[],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler":{"url":"\/documentation\/composablearchitecture\/anyscheduler","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyScheduler","kind":"identifier"}],"title":"AnyScheduler","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","abstract":[{"text":"A type-erasing wrapper for the ","type":"text"},{"type":"codeVoice","code":"Scheduler"},{"type":"text","text":" protocol, which can be useful for being generic over"},{"type":"text","text":" "},{"text":"many types of schedulers without needing to actually introduce a generic to your code.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyScheduler","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ImmediateScheduler":{"navigatorTitle":[{"text":"ImmediateScheduler","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/immediatescheduler","type":"topic","role":"symbol","abstract":[{"text":"A scheduler for performing synchronous actions.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateScheduler","title":"ImmediateScheduler","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ImmediateScheduler","kind":"identifier"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ImmediateScheduler/eraseToAnyScheduler()":{"role":"symbol","url":"\/documentation\/composablearchitecture\/immediatescheduler\/erasetoanyscheduler()","title":"eraseToAnyScheduler()","type":"topic","abstract":[{"type":"text","text":"Wraps this scheduler with a type eraser."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyScheduler","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyScheduler","preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SchedulerOptions","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateScheduler\/eraseToAnyScheduler()"}}}