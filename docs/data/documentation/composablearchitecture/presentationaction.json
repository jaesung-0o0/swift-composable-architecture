{"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/Se","doc:\/\/ComposableArchitecture\/SE","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"],"kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:then:fileID:line:)"]]},"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/presented(_:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/Decodable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/Equatable-Implementations"]}],"abstract":[{"type":"text","text":"A wrapper type for actions that can be presented."}],"sections":[],"metadata":{"roleHeading":"Enumeration","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PresentationAction"}],"title":"PresentationAction","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"PresentationAction","kind":"identifier"}],"externalID":"s:22ComposableArchitecture18PresentationActionO","symbolKind":"enum","modules":[{"name":"ComposableArchitecture"}]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Tree-based navigation","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:line:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PresentationAction"},{"text":"<","kind":"text"},{"text":"Action","kind":"genericParameter"},{"kind":"text","text":">"}]}]},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Use this wrapper type for modeling a feature’s domain that needs to present a child","type":"text"},{"type":"text","text":" "},{"type":"text","text":"feature using "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:line:)","type":"reference","isActive":true},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, if you have a "},{"type":"codeVoice","code":"ChildFeature"},{"type":"text","text":" reducer that encapsulates the logic and behavior"},{"type":"text","text":" "},{"text":"for a feature, then any feature that wants to present that feature will hold onto","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChildFeature.Action"},{"text":" like so:","type":"text"}]},{"code":["struct ParentFeature: Reducer {","  \/\/ ...","  enum Action {","    case child(PresentationAction<ChildFeature.Action>)","     \/\/ ...","  }","  \/\/ ...","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction"},{"text":" enum has two cases that represent the two fundamental operations","type":"text"},{"type":"text","text":" "},{"text":"you can do when presenting a child feature: ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/presented(_:)","isActive":true},{"type":"text","text":" represents"},{"type":"text","text":" "},{"type":"text","text":"an action happening "},{"type":"emphasis","inlineContent":[{"text":"inside","type":"text"}]},{"text":" the child feature, and ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss","type":"reference","isActive":true},{"type":"text","text":" represents"},{"text":" ","type":"text"},{"type":"text","text":"dismissing the child feature by "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"-ing its state."}]},{"inlineContent":[{"text":"See the dedicated article on ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","type":"reference"},{"text":" for more information on the library’s navigation","type":"text"},{"type":"text","text":" "},{"type":"text","text":"tools, and in particular see "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","isActive":true},{"text":" for information on modeling navigation","type":"text"},{"type":"text","text":" "},{"type":"text","text":"using optionals and enums."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/presentationaction"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/Se":{"identifier":"doc:\/\/ComposableArchitecture\/Se","title":"Swift.Decodable","type":"unresolvable"},"doc://ComposableArchitecture/SE":{"identifier":"doc:\/\/ComposableArchitecture\/SE","title":"Swift.Encodable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"text":"현재 앱의 상태를 주어진 액션을 가지고 어떻게 다음 상태로 변경할 지를 묘사하는 프로토콜. 또한 나중에 Store에 의해 실행되어야 할 ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"가 무엇인지 묘사하고 있습니다.","type":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction/dismiss":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss","type":"topic","url":"\/documentation\/composablearchitecture\/presentationaction\/dismiss","title":"PresentationAction.dismiss","abstract":[{"type":"text","text":"An action sent to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" out the associated presentation state."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"dismiss","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction/presented(_:)":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/presented(_:)","url":"\/documentation\/composablearchitecture\/presentationaction\/presented(_:)","title":"PresentationAction.presented(_:)","abstract":[{"text":"An action sent to the associated, non-","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" presentation state."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"presented"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO0D0xmfp","text":"Action","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction/Equatable-Implementations":{"url":"\/documentation\/composablearchitecture\/presentationaction\/equatable-implementations","type":"topic","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/Equatable-Implementations","abstract":[],"role":"collectionGroup","title":"Equatable Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:destination:fileID:line:)":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:line:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ifLet"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"DestinationState"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Destination"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DestinationState","preciseIdentifier":"s:22ComposableArchitecture7ReducerPAAE5ifLet_6action11destination6fileID4lineAA013_PresentationC0Vyxqd_1_Gs15WritableKeyPathCy5StateQzAA0kO0Vyqd__GG_9CasePaths0pN0Vy6ActionQzAA0kR0Oyqd_0_GGqd_1_yXEs12StaticStringVSutANQyd_1_Rsd__AWQyd_1_Rsd_0_AaBRd_1_r1_lF011DestinationO0L_qd__mfp","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerPAAE5ifLet_6action11destination6fileID4lineAA013_PresentationC0Vyxqd_1_Gs15WritableKeyPathCy5StateQzAA0kO0Vyqd__GG_9CasePaths0pN0Vy6ActionQzAA0kR0Oyqd_0_GGqd_1_yXEs12StaticStringVSutANQyd_1_Rsd__AWQyd_1_Rsd_0_AaBRd_1_r1_lF011DestinationR0L_qd_0_mfp","text":"DestinationAction"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"destination"},{"kind":"text","text":": () -> "},{"text":"Destination","preciseIdentifier":"s:22ComposableArchitecture7ReducerPAAE5ifLet_6action11destination6fileID4lineAA013_PresentationC0Vyxqd_1_Gs15WritableKeyPathCy5StateQzAA0kO0Vyqd__GG_9CasePaths0pN0Vy6ActionQzAA0kR0Oyqd_0_GGqd_1_yXEs12StaticStringVSutANQyd_1_Rsd__AWQyd_1_Rsd_0_AaBRd_1_r1_lF11DestinationL_qd_1_mfp","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture20_PresentationReducerV","kind":"typeIdentifier","text":"_PresentationReducer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Destination","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerPAAE5ifLet_6action11destination6fileID4lineAA013_PresentationC0Vyxqd_1_Gs15WritableKeyPathCy5StateQzAA0kO0Vyqd__GG_9CasePaths0pN0Vy6ActionQzAA0kR0Oyqd_0_GGqd_1_yXEs12StaticStringVSutANQyd_1_Rsd__AWQyd_1_Rsd_0_AaBRd_1_r1_lF11DestinationL_qd_1_mfp"},{"kind":"text","text":">"}],"type":"topic","abstract":[{"text":"Embeds a child reducer in a parent domain that works on an optional property of parent state.","type":"text"}],"role":"symbol","title":"ifLet(_:action:destination:fileID:line:)","url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:destination:fileid:line:)"},"doc://ComposableArchitecture/s8SendableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"title":"Effect","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","kind":"symbol"},"doc://ComposableArchitecture/SH":{"identifier":"doc:\/\/ComposableArchitecture\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","type":"topic","url":"\/documentation\/composablearchitecture\/treebasednavigation","title":"Tree-based navigation","abstract":[{"text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"how to model your domains, how to integrate features, how to test your features, and more."}],"kind":"article","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"type":"topic","kind":"article","title":"Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:then:fileID:line:)":{"title":"ifLet(_:action:then:fileID:line:)","role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:then:fileid:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"ifLet","kind":"identifier"},{"kind":"text","text":"<"},{"text":"WrappedState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"WrappedAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Wrapped","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"kind":"text","text":", "},{"text":"WrappedState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerPAAE5ifLet_6action4then6fileID4lineAA03_IfeC0Vyxqd_1_Gs15WritableKeyPathCy5StateQzqd__SgG_9CasePaths0pN0Vy6ActionQzqd_0_Gqd_1_yXEs12StaticStringVSutANQyd_1_Rsd__AUQyd_1_Rsd_0_AaBRd_1_r1_lF07WrappedO0L_qd__mfp"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":", ","kind":"text"},{"text":"WrappedAction","preciseIdentifier":"s:22ComposableArchitecture7ReducerPAAE5ifLet_6action4then6fileID4lineAA03_IfeC0Vyxqd_1_Gs15WritableKeyPathCy5StateQzqd__SgG_9CasePaths0pN0Vy6ActionQzqd_0_Gqd_1_yXEs12StaticStringVSutANQyd_1_Rsd__AUQyd_1_Rsd_0_AaBRd_1_r1_lF07WrappedR0L_qd_0_mfp","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"then"},{"text":": () -> ","kind":"text"},{"text":"Wrapped","preciseIdentifier":"s:22ComposableArchitecture7ReducerPAAE5ifLet_6action4then6fileID4lineAA03_IfeC0Vyxqd_1_Gs15WritableKeyPathCy5StateQzqd__SgG_9CasePaths0pN0Vy6ActionQzqd_0_Gqd_1_yXEs12StaticStringVSutANQyd_1_Rsd__AUQyd_1_Rsd_0_AaBRd_1_r1_lF7WrappedL_qd_1_mfp","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") -> ","kind":"text"},{"text":"_IfLetReducer","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture13_IfLetReducerV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerPAAE5ifLet_6action4then6fileID4lineAA03_IfeC0Vyxqd_1_Gs15WritableKeyPathCy5StateQzqd__SgG_9CasePaths0pN0Vy6ActionQzqd_0_Gqd_1_yXEs12StaticStringVSutANQyd_1_Rsd__AUQyd_1_Rsd_0_AaBRd_1_r1_lF7WrappedL_qd_1_mfp","text":"Wrapped"},{"text":">","kind":"text"}],"abstract":[{"text":"Embeds a child reducer in a parent domain that works on an optional property of parent state.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:then:fileID:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","role":"symbol","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented."}],"navigatorTitle":[{"text":"PresentationAction","kind":"identifier"}],"type":"topic","title":"PresentationAction","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PresentationAction"}],"url":"\/documentation\/composablearchitecture\/presentationaction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DismissEffect"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/dismisseffect","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect","navigatorTitle":[{"kind":"identifier","text":"DismissEffect"}],"title":"DismissEffect","abstract":[{"type":"text","text":"An effect that dismisses the current presentation."}]},"doc://ComposableArchitecture/SQ":{"identifier":"doc:\/\/ComposableArchitecture\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","role":"symbol","abstract":[{"type":"text","text":"A property wrapper for state that can be presented."}],"navigatorTitle":[{"kind":"identifier","text":"PresentationState"}],"type":"topic","title":"PresentationState","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PresentationState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/presentationstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction/Decodable-Implementations":{"kind":"article","type":"topic","title":"Decodable Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/Decodable-Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/composablearchitecture\/presentationaction\/decodable-implementations"}}}