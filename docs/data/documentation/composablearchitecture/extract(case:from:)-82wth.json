{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(case:from:)-82wth","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/extract(case:from:)-82wth"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extract","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"case"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"embed"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"from"},{"text":" ","kind":"text"},{"text":"root","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Value"},{"text":"?","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An enum case initializer."}]}],"name":"embed"},{"name":"root","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A root enum value."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"Values if they can be extracted from the given enum case initializer and root enum,"},{"type":"text","text":" "},{"type":"text","text":"otherwise "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"code":["extract(case: Result<Int, Error>.success, from: .success(42))","\/\/ 42","extract(case: Result<Int, Error>.success, from: .failure(MyError())","\/\/ nil"],"syntax":"swift","type":"codeListing"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"This function is only intended to be used with enum case initializers. Its behavior is","type":"text"},{"text":" ","type":"text"},{"text":"otherwise undefined.","type":"text"}]}],"style":"note","name":"Note"}],"kind":"content"}],"abstract":[{"type":"text","text":"Attempts to extract values associated with a given enum case initializer from a given root enum."}],"kind":"symbol","deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use case path literal syntax (e.g., '\/Root.caseName'), or '(\/Root.caseName).extract(from:)'"}],"type":"paragraph"}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"s:9CasePaths7extract4case4fromq_SgxSgq_c_AFtr0_lF","symbolKind":"func","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"extract","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"case","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"text":"Root","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":"?","kind":"text"}],"title":"extract(case:from:)","modules":[{"name":"ComposableArchitecture"}],"role":"symbol","platforms":[],"roleHeading":"Function"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/extract(case:from:)-82wth":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"extract"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"case","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"text":"Attempts to extract values associated with a given enum case initializer from a given root enum.","type":"text"}],"title":"extract(case:from:)","deprecated":true,"kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(case:from:)-82wth","url":"\/documentation\/composablearchitecture\/extract(case:from:)-82wth"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"}}}