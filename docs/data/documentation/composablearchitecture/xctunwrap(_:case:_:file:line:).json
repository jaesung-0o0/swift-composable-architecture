{"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/xctunwrap(_:case:_:file:line:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/XCTUnwrap(_:case:_:file:line:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"abstract":[{"text":"Asserts that an enum value matches a particular case and returns the associated value.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTUnwrap"},{"kind":"text","text":"<"},{"text":"Enum","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Case","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"enum"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"case","kind":"externalParam"},{"kind":"text","text":" "},{"text":"extract","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"message"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" = \"\", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#file","kind":"keyword"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Case"}]}]},{"kind":"parameters","parameters":[{"name":"enum","content":[{"type":"paragraph","inlineContent":[{"text":"An enum value.","type":"text"}]}]},{"name":"extract","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that attempts to extract a particular case from the enum. You can supply","type":"text"},{"type":"text","text":" "},{"text":"a case path literal here, like ‘\/Enum.case’.","type":"text"}]}]},{"name":"message","content":[{"type":"paragraph","inlineContent":[{"text":"An optional description of a failure.","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"text":"The unwrapped associated value from the matched case of the enum.","type":"text"}],"type":"paragraph"}]}],"metadata":{"externalID":"s:9CasePaths9XCTUnwrap_4case_4file4lineq_xyKXK_q_SgxXESSyXKs12StaticStringVSutKr0_lF","title":"XCTUnwrap(_:case:_:file:line:)","symbolKind":"func","modules":[{"name":"ComposableArchitecture"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"XCTUnwrap","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Enum"},{"text":", ","kind":"text"},{"text":"Case","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"case"},{"kind":"text","text":": ("},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"kind":"text","text":"?, () -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Case"}],"roleHeading":"Function","role":"symbol"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/XCTUnwrap(_:case:_:file:line:)":{"url":"\/documentation\/composablearchitecture\/xctunwrap(_:case:_:file:line:)","type":"topic","kind":"symbol","title":"XCTUnwrap(_:case:_:file:line:)","abstract":[{"type":"text","text":"Asserts that an enum value matches a particular case and returns the associated value."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"XCTUnwrap"},{"text":"<","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Case","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Enum"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"case"},{"text":": (","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Case","kind":"typeIdentifier"},{"text":"?, () -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Case","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/XCTUnwrap(_:case:_:file:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"}}}