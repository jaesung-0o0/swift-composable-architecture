{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore\/View-Implementations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"symbolKind":"method","role":"symbol","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUI"]}],"extendedModule":"SwiftUI","platforms":[{"deprecated":false,"introducedAt":"16.0","name":"iOS","beta":false,"unavailable":false},{"unavailable":false,"beta":false,"name":"macOS","introducedAt":"13.0","deprecated":false},{"name":"tvOS","introducedAt":"16.0","deprecated":false,"unavailable":false,"beta":false},{"introducedAt":"9.0","deprecated":false,"beta":false,"name":"watchOS","unavailable":false}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"overlayPreferenceValue","kind":"identifier"},{"text":"<","kind":"text"},{"text":"K","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"K"},{"text":".Type, ","kind":"text"},{"text":"alignment","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Alignment","preciseIdentifier":"s:7SwiftUI9AlignmentV","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"V"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"title":"overlayPreferenceValue(_:alignment:_:)","roleHeading":"Instance Method","externalID":"s:7SwiftUI4ViewPAAE22overlayPreferenceValue_9alignment_Qrqd__m_AA9AlignmentVqd_0_0F0Qyd__ctAA0E3KeyRd__AaBRd_0_r0_lF::SYNTHESIZED::s:22ComposableArchitecture20NavigationStackStoreV"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/navigationstackstore\/overlaypreferencevalue(_:alignment:_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore\/overlayPreferenceValue(_:alignment:_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"overlayPreferenceValue","kind":"identifier"},{"kind":"text","text":"<"},{"text":"K","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"V","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"K"},{"text":".Type, ","kind":"text"},{"text":"alignment","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI9AlignmentV","text":"Alignment","kind":"typeIdentifier"},{"kind":"text","text":" = .center, "},{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:7SwiftUI11ViewBuilderV","text":"ViewBuilder"},{"text":" ","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"K"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"V"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"K"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI13PreferenceKeyP","text":"PreferenceKey","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"kind":"text","text":"\n"}],"languages":["swift"]}]}],"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.overlayPreferenceValue(_:alignment:_:)"},{"type":"text","text":"."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationStackStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore","role":"symbol","navigatorTitle":[{"text":"NavigationStackStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/navigationstackstore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"NavigationStackStore","kind":"identifier"}],"abstract":[{"text":"A navigation stack that is driven by a store.","type":"text"}],"type":"topic","kind":"symbol","title":"NavigationStackStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationStackStore/View-Implementations":{"title":"View Implementations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/navigationstackstore\/view-implementations","abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore\/View-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationStackStore/overlayPreferenceValue(_:alignment:_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore\/overlayPreferenceValue(_:alignment:_:)","type":"topic","abstract":[],"title":"overlayPreferenceValue(_:alignment:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"overlayPreferenceValue"},{"kind":"text","text":"<"},{"text":"K","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"V"},{"text":">(","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"alignment"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI9AlignmentV","text":"Alignment","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"kind":"typeIdentifier","text":"K"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/navigationstackstore\/overlaypreferencevalue(_:alignment:_:)","role":"symbol"}}}