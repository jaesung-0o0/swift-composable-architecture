{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore\/bind(_:to:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"platforms":[{"beta":false,"introducedAt":"14.0","unavailable":false,"deprecated":false,"name":"iOS"},{"beta":false,"deprecated":false,"introducedAt":"11.0","name":"macOS","unavailable":false},{"introducedAt":"14.0","beta":false,"name":"tvOS","unavailable":false,"deprecated":false},{"beta":false,"name":"watchOS","unavailable":false,"introducedAt":"7.0","deprecated":false}],"externalID":"s:7SwiftUI4ViewP0A16UINavigationCoreE4bind_2toQrqd___qd_0_tAD9_BindableRd__AdGRd_0_SQ5ValueRpd__AHQyd_0_AIRSr0_lF::SYNTHESIZED::s:22ComposableArchitecture20NavigationStackStoreV","symbolKind":"method","extendedModule":"SwiftUI","role":"symbol","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUI"]}],"roleHeading":"Instance Method","title":"bind(_:to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"bind","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ModelValue","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ViewValue","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"ModelValue","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"text":"ViewValue","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bind"},{"text":"<","kind":"text"},{"text":"ModelValue","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ViewValue"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"modelValue"},{"kind":"text","text":": "},{"text":"ModelValue","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"viewValue"},{"kind":"text","text":": "},{"text":"ViewValue","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"ModelValue"},{"text":" : ","kind":"text"},{"text":"_Bindable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ViewValue","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"_Bindable"},{"kind":"text","text":", "},{"text":"ModelValue","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Equatable","preciseIdentifier":"s:SQ"},{"kind":"text","text":", "},{"text":"ModelValue","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"ViewValue","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"modelValue","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A binding from model state. "},{"inlineContent":[{"type":"text","text":"E.g."}],"type":"emphasis"},{"text":", a binding derived from a published field","type":"text"},{"type":"text","text":" "},{"text":"on an observable object.","type":"text"}]}]},{"name":"viewValue","content":[{"inlineContent":[{"text":"A binding from view state. ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"E.g."}]},{"type":"text","text":", a focus binding."}],"type":"paragraph"}]}]},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI comes with many property wrappers that can be used in views to drive view state, like"},{"type":"text","text":" "},{"type":"text","text":"field focus. Unfortunately, these property wrappers "},{"type":"emphasis","inlineContent":[{"type":"text","text":"must"}]},{"text":" be used in views. It’s not possible","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to extract this logic to an observable object and integrate it with the rest of the model’s"},{"text":" ","type":"text"},{"type":"text","text":"business logic, and be in a better position to test this state."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We can work around these limitations by introducing a published field to your observable"},{"type":"text","text":" "},{"type":"text","text":"object and synchronizing it to view state with this view modifier."}]}],"kind":"content"}],"abstract":[{"type":"text","text":"Synchronizes model state to view state via two-way bindings."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/navigationstackstore\/bind(_:to:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore\/View-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationStackStore/bind(_:to:)":{"type":"topic","abstract":[{"text":"Synchronizes model state to view state via two-way bindings.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ModelValue","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ViewValue"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ViewValue"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/navigationstackstore\/bind(_:to:)","title":"bind(_:to:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore\/bind(_:to:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationStackStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore","role":"symbol","navigatorTitle":[{"text":"NavigationStackStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/navigationstackstore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"NavigationStackStore","kind":"identifier"}],"abstract":[{"text":"A navigation stack that is driven by a store.","type":"text"}],"type":"topic","kind":"symbol","title":"NavigationStackStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationStackStore/View-Implementations":{"title":"View Implementations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/navigationstackstore\/view-implementations","abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore\/View-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"}}}