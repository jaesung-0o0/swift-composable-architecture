{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"text":"A value to make sendable in an unchecked way.","type":"text"}]}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/init(_:)"},"abstract":[{"type":"text","text":"Initializes unchecked sendability around a value."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/uncheckedsendable\/init(_:)"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"externalID":"s:17ConcurrencyExtras17UncheckedSendableVyACyxGxcfc","symbolKind":"init","title":"init(_:)","modules":[{"name":"ComposableArchitecture"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"text":")","kind":"text"}],"roleHeading":"Initializer","role":"symbol"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UncheckedSendable":{"url":"\/documentation\/composablearchitecture\/uncheckedsendable","role":"symbol","abstract":[{"type":"text","text":"A generic wrapper for turning any non-"},{"type":"codeVoice","code":"Sendable"},{"text":" type into a ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" one, in an unchecked"},{"type":"text","text":" "},{"type":"text","text":"manner."}],"navigatorTitle":[{"kind":"identifier","text":"UncheckedSendable"}],"title":"UncheckedSendable","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UncheckedSendable"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UncheckedSendable/init(_:)":{"url":"\/documentation\/composablearchitecture\/uncheckedsendable\/init(_:)","role":"symbol","abstract":[{"type":"text","text":"Initializes unchecked sendability around a value."}],"title":"init(_:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UncheckedSendable\/init(_:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}]}}}