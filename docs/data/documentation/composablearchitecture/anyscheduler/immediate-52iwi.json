{"kind":"symbol","metadata":{"externalID":"s:17CombineSchedulers12AnySchedulerVAASo9NSRunLoopC10FoundationE0D8TimeTypeVRszAeFE0D7OptionsVRs_rlE9immediateACyAhJGvpZ","extendedModule":"CombineSchedulers","symbolKind":"property","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"immediate"},{"text":": ","kind":"text"},{"text":"AnyScheduler","kind":"typeIdentifier","preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV"},{"text":"<","kind":"text"},{"text":"RunLoop","preciseIdentifier":"c:objc(cs)NSRunLoop","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SchedulerTimeType","kind":"typeIdentifier","preciseIdentifier":"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"RunLoop","preciseIdentifier":"c:objc(cs)NSRunLoop"},{"kind":"text","text":"."},{"preciseIdentifier":"s:So9NSRunLoopC10FoundationE16SchedulerOptionsV","kind":"typeIdentifier","text":"SchedulerOptions"},{"kind":"text","text":">"}],"role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"SchedulerTimeType","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"RunLoop.SchedulerTimeType"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"SchedulerOptions"},{"type":"text","text":" is "},{"type":"codeVoice","code":"RunLoop.SchedulerOptions"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"immediate","modules":[{"name":"ComposableArchitecture","relatedModules":["CombineSchedulers"]}],"roleHeading":"Type Property"},"abstract":[{"text":"An immediate scheduler that can substitute itself for a run loop.","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/immediate-52iwi"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"immediate","kind":"identifier"},{"kind":"text","text":": "},{"text":"AnyScheduler","preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"RunLoop","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSRunLoop"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV","text":"SchedulerTimeType"},{"text":", ","kind":"text"},{"text":"RunLoop","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSRunLoop"},{"kind":"text","text":"."},{"text":"SchedulerOptions","kind":"typeIdentifier","preciseIdentifier":"s:So9NSRunLoopC10FoundationE16SchedulerOptionsV"},{"kind":"text","text":"> { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["iOS"]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/composablearchitecture\/anyscheduler\/immediate-52iwi"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler":{"url":"\/documentation\/composablearchitecture\/anyscheduler","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyScheduler","kind":"identifier"}],"title":"AnyScheduler","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","abstract":[{"text":"A type-erasing wrapper for the ","type":"text"},{"type":"codeVoice","code":"Scheduler"},{"type":"text","text":" protocol, which can be useful for being generic over"},{"type":"text","text":" "},{"text":"many types of schedulers without needing to actually introduce a generic to your code.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyScheduler","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/immediate-52iwi":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/immediate-52iwi","type":"topic","url":"\/documentation\/composablearchitecture\/anyscheduler\/immediate-52iwi","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"SchedulerTimeType"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"RunLoop.SchedulerTimeType"},{"type":"text","text":" and "},{"code":"SchedulerOptions","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"RunLoop.SchedulerOptions"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"immediate","abstract":[{"type":"text","text":"An immediate scheduler that can substitute itself for a run loop."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"immediate"},{"kind":"text","text":": "},{"text":"AnyScheduler","kind":"typeIdentifier","preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"RunLoop","preciseIdentifier":"c:objc(cs)NSRunLoop"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV","text":"SchedulerTimeType"},{"kind":"text","text":", "},{"text":"RunLoop","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSRunLoop"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:So9NSRunLoopC10FoundationE16SchedulerOptionsV","text":"SchedulerOptions"},{"kind":"text","text":">"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"}}}