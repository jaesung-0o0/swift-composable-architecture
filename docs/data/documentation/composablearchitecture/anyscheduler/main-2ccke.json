{"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"main"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AnyScheduler","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV"},{"kind":"text","text":"<"},{"text":"RunLoop","preciseIdentifier":"c:objc(cs)NSRunLoop","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV","text":"SchedulerTimeType","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"RunLoop","preciseIdentifier":"c:objc(cs)NSRunLoop"},{"text":".","kind":"text"},{"text":"SchedulerOptions","preciseIdentifier":"s:So9NSRunLoopC10FoundationE16SchedulerOptionsV","kind":"typeIdentifier"},{"kind":"text","text":"> { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}]}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler"]]},"variants":[{"paths":["\/documentation\/composablearchitecture\/anyscheduler\/main-2ccke"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/main-2ccke","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A type-erased main run loop."}],"metadata":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"SchedulerTimeType"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"RunLoop.SchedulerTimeType"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SchedulerOptions"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"RunLoop.SchedulerOptions"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"modules":[{"relatedModules":["CombineSchedulers"],"name":"ComposableArchitecture"}],"title":"main","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"main","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV","text":"AnyScheduler"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"RunLoop","preciseIdentifier":"c:objc(cs)NSRunLoop"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerTimeType","preciseIdentifier":"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV"},{"text":", ","kind":"text"},{"text":"RunLoop","preciseIdentifier":"c:objc(cs)NSRunLoop","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SchedulerOptions","kind":"typeIdentifier","preciseIdentifier":"s:So9NSRunLoopC10FoundationE16SchedulerOptionsV"},{"kind":"text","text":">"}],"symbolKind":"property","role":"symbol","extendedModule":"CombineSchedulers","roleHeading":"Type Property","externalID":"s:17CombineSchedulers12AnySchedulerVAASo9NSRunLoopC10FoundationE0D8TimeTypeVRszAeFE0D7OptionsVRs_rlE4mainACyAhJGvpZ"},"sections":[],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/main-2ccke":{"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"main","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV","text":"AnyScheduler"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSRunLoop","text":"RunLoop"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV","text":"SchedulerTimeType"},{"text":", ","kind":"text"},{"text":"RunLoop","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSRunLoop"},{"text":".","kind":"text"},{"preciseIdentifier":"s:So9NSRunLoopC10FoundationE16SchedulerOptionsV","text":"SchedulerOptions","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"SchedulerTimeType"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"RunLoop.SchedulerTimeType"},{"type":"text","text":" and "},{"code":"SchedulerOptions","type":"codeVoice"},{"type":"text","text":" is "},{"code":"RunLoop.SchedulerOptions","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","abstract":[{"text":"A type-erased main run loop.","type":"text"}],"title":"main","type":"topic","url":"\/documentation\/composablearchitecture\/anyscheduler\/main-2ccke","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/main-2ccke"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler":{"url":"\/documentation\/composablearchitecture\/anyscheduler","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyScheduler","kind":"identifier"}],"title":"AnyScheduler","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","abstract":[{"text":"A type-erasing wrapper for the ","type":"text"},{"type":"codeVoice","code":"Scheduler"},{"type":"text","text":" protocol, which can be useful for being generic over"},{"type":"text","text":" "},{"text":"many types of schedulers without needing to actually introduce a generic to your code.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyScheduler","kind":"identifier"}]}}}