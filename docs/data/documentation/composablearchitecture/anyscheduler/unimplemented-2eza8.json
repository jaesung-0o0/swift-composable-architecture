{"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/unimplemented-2eza8"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/anyscheduler\/unimplemented-2eza8"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler"]]},"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unimplemented"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV","text":"AnyScheduler"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSOperationQueue","text":"OperationQueue"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerTimeType","preciseIdentifier":"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV"},{"kind":"text","text":", "},{"text":"OperationQueue","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSOperationQueue"},{"text":".","kind":"text"},{"preciseIdentifier":"s:So16NSOperationQueueC10FoundationE16SchedulerOptionsV","text":"SchedulerOptions","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Type Property","externalID":"s:17CombineSchedulers12AnySchedulerVAASo16NSOperationQueueC10FoundationE0D8TimeTypeVRszAeFE0D7OptionsVRs_rlE13unimplementedACyAhJGvpZ","conformance":{"constraints":[{"code":"SchedulerTimeType","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"OperationQueue.SchedulerTimeType"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SchedulerOptions"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"OperationQueue.SchedulerOptions"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"extendedModule":"CombineSchedulers","modules":[{"relatedModules":["CombineSchedulers"],"name":"ComposableArchitecture"}],"title":"unimplemented","symbolKind":"property"},"abstract":[{"text":"An unimplemented scheduler that can substitute itself for an operation queue.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"unimplemented","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV","text":"AnyScheduler","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"OperationQueue","preciseIdentifier":"c:objc(cs)NSOperationQueue"},{"text":".","kind":"text"},{"preciseIdentifier":"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV","kind":"typeIdentifier","text":"SchedulerTimeType"},{"text":", ","kind":"text"},{"text":"OperationQueue","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSOperationQueue"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:So16NSOperationQueueC10FoundationE16SchedulerOptionsV","text":"SchedulerOptions"},{"text":"> { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}]}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/unimplemented-2eza8":{"type":"topic","title":"unimplemented","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/unimplemented-2eza8","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unimplemented"},{"text":": ","kind":"text"},{"text":"AnyScheduler","kind":"typeIdentifier","preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSOperationQueue","text":"OperationQueue"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV","text":"SchedulerTimeType"},{"text":", ","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSOperationQueue","text":"OperationQueue","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SchedulerOptions","preciseIdentifier":"s:So16NSOperationQueueC10FoundationE16SchedulerOptionsV","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"An unimplemented scheduler that can substitute itself for an operation queue."}],"url":"\/documentation\/composablearchitecture\/anyscheduler\/unimplemented-2eza8","conformance":{"constraints":[{"type":"codeVoice","code":"SchedulerTimeType"},{"text":" is ","type":"text"},{"code":"OperationQueue.SchedulerTimeType","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SchedulerOptions"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"OperationQueue.SchedulerOptions"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler":{"url":"\/documentation\/composablearchitecture\/anyscheduler","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyScheduler","kind":"identifier"}],"title":"AnyScheduler","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","abstract":[{"text":"A type-erasing wrapper for the ","type":"text"},{"type":"codeVoice","code":"Scheduler"},{"type":"text","text":" protocol, which can be useful for being generic over"},{"type":"text","text":" "},{"text":"many types of schedulers without needing to actually introduce a generic to your code.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyScheduler","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"}}}