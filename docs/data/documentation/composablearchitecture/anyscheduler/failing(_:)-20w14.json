{"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"failing"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"AnyScheduler","preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerOptions"},{"text":">","kind":"text"}],"roleHeading":"Type Method","modules":[{"relatedModules":["CombineSchedulers"],"name":"ComposableArchitecture"}],"title":"failing(_:)","role":"symbol","symbolKind":"method","externalID":"s:17CombineSchedulers12AnySchedulerVAASo16NSOperationQueueC10FoundationE0D8TimeTypeVRszAeFE0D7OptionsVRs_rlE7failingyACyAhJGSSFZ","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"SchedulerTimeType","type":"codeVoice"},{"type":"text","text":" is "},{"code":"OperationQueue.SchedulerTimeType","type":"codeVoice"},{"type":"text","text":" and "},{"code":"SchedulerOptions","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"OperationQueue.SchedulerOptions"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"extendedModule":"CombineSchedulers","platforms":[]},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/failing(_:)-20w14","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"failing","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"prefix"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"text":"AnyScheduler","preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerOptions"},{"text":">","kind":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/anyscheduler\/failing(_:)-20w14"]}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/failing(_:)-20w14":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"SchedulerTimeType","type":"codeVoice"},{"type":"text","text":" is "},{"code":"OperationQueue.SchedulerTimeType","type":"codeVoice"},{"type":"text","text":" and "},{"code":"SchedulerOptions","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"OperationQueue.SchedulerOptions","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/failing(_:)-20w14","abstract":[],"deprecated":true,"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"failing"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"text":"AnyScheduler","preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"SchedulerOptions","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/anyscheduler\/failing(_:)-20w14","title":"failing(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler":{"url":"\/documentation\/composablearchitecture\/anyscheduler","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyScheduler","kind":"identifier"}],"title":"AnyScheduler","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","abstract":[{"text":"A type-erasing wrapper for the ","type":"text"},{"type":"codeVoice","code":"Scheduler"},{"type":"text","text":" protocol, which can be useful for being generic over"},{"type":"text","text":" "},{"text":"many types of schedulers without needing to actually introduce a generic to your code.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyScheduler","kind":"identifier"}]}}}