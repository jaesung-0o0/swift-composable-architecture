{"abstract":[{"text":"A type-erased main operation queue.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/main-4xd6t","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"main","kind":"identifier"},{"kind":"text","text":": "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV","text":"AnyScheduler","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSOperationQueue","text":"OperationQueue"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerTimeType","preciseIdentifier":"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSOperationQueue","text":"OperationQueue"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:So16NSOperationQueueC10FoundationE16SchedulerOptionsV","text":"SchedulerOptions"},{"text":"> { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/anyscheduler\/main-4xd6t"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"SchedulerTimeType"},{"type":"text","text":" is "},{"type":"codeVoice","code":"OperationQueue.SchedulerTimeType"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SchedulerOptions"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"OperationQueue.SchedulerOptions"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"main","symbolKind":"property","extendedModule":"CombineSchedulers","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"main"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV","text":"AnyScheduler"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSOperationQueue","text":"OperationQueue"},{"kind":"text","text":"."},{"text":"SchedulerTimeType","preciseIdentifier":"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"OperationQueue","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSOperationQueue"},{"text":".","kind":"text"},{"preciseIdentifier":"s:So16NSOperationQueueC10FoundationE16SchedulerOptionsV","kind":"typeIdentifier","text":"SchedulerOptions"},{"text":">","kind":"text"}],"externalID":"s:17CombineSchedulers12AnySchedulerVAASo16NSOperationQueueC10FoundationE0D8TimeTypeVRszAeFE0D7OptionsVRs_rlE4mainACyAhJGvpZ","modules":[{"relatedModules":["CombineSchedulers"],"name":"ComposableArchitecture"}],"roleHeading":"Type Property"},"sections":[],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/main-4xd6t":{"role":"symbol","title":"main","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"SchedulerTimeType"},{"type":"text","text":" is "},{"type":"codeVoice","code":"OperationQueue.SchedulerTimeType"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SchedulerOptions"},{"type":"text","text":" is "},{"code":"OperationQueue.SchedulerOptions","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","url":"\/documentation\/composablearchitecture\/anyscheduler\/main-4xd6t","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"main"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV","text":"AnyScheduler"},{"text":"<","kind":"text"},{"text":"OperationQueue","preciseIdentifier":"c:objc(cs)NSOperationQueue","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV","kind":"typeIdentifier","text":"SchedulerTimeType"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"OperationQueue","preciseIdentifier":"c:objc(cs)NSOperationQueue"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:So16NSOperationQueueC10FoundationE16SchedulerOptionsV","text":"SchedulerOptions"},{"kind":"text","text":">"}],"abstract":[{"text":"A type-erased main operation queue.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/main-4xd6t"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler":{"url":"\/documentation\/composablearchitecture\/anyscheduler","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyScheduler","kind":"identifier"}],"title":"AnyScheduler","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","abstract":[{"text":"A type-erasing wrapper for the ","type":"text"},{"type":"codeVoice","code":"Scheduler"},{"type":"text","text":" protocol, which can be useful for being generic over"},{"type":"text","text":" "},{"text":"many types of schedulers without needing to actually introduce a generic to your code.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyScheduler","kind":"identifier"}]}}}