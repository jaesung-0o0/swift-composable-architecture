{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/Scheduler-Implementations"]]},"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/animate(withDuration:delay:options:)","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","extendedModule":"Combine","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"animate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withDuration"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"text":", ","kind":"text"},{"text":"delay","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TimeInterval","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"options"},{"text":": ","kind":"text"},{"text":"UIView","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)UIView"},{"kind":"text","text":"."},{"text":"AnimationOptions","preciseIdentifier":"c:@E@UIViewAnimationOptions","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AnySchedulerOf","preciseIdentifier":"s:17CombineSchedulers14AnySchedulerOfa"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","role":"symbol","externalID":"s:7Combine9SchedulerP0A10SchedulersE7animate12withDuration5delay7optionsAD03AnyB0Vy0B8TimeTypeQz0B7OptionsQzGSd_SdSo015UIViewAnimationL0VtF::SYNTHESIZED::s:17CombineSchedulers12AnySchedulerV","title":"animate(withDuration:delay:options:)","modules":[{"name":"ComposableArchitecture","relatedModules":["Combine"]}]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"animate"},{"kind":"text","text":"("},{"text":"withDuration","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"duration","kind":"internalParam"},{"kind":"text","text":": "},{"text":"TimeInterval","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":", "},{"text":"delay","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"text":" = 0, ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"animationOptions"},{"kind":"text","text":": "},{"text":"UIView","preciseIdentifier":"c:objc(cs)UIView","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"AnimationOptions","kind":"typeIdentifier","preciseIdentifier":"c:@E@UIViewAnimationOptions"},{"text":" = []) -> ","kind":"text"},{"text":"AnySchedulerOf","kind":"typeIdentifier","preciseIdentifier":"s:17CombineSchedulers14AnySchedulerOfa","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnySchedulerOf"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"duration","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"duration","type":"codeVoice"},{"type":"text","text":" parameter passed to "},{"type":"codeVoice","code":"UIView.animate"},{"type":"text","text":"."}]}]},{"name":"delay","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"delay"},{"type":"text","text":" parameter passed to "},{"type":"codeVoice","code":"UIView.animate"},{"text":".","type":"text"}]}]},{"name":"animationOptions","content":[{"inlineContent":[{"type":"text","text":"The "},{"code":"options","type":"codeVoice"},{"text":" parameter passed to ","type":"text"},{"code":"UIView.animate","type":"codeVoice"}],"type":"paragraph"}]}]},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A scheduler that wraps scheduled actions in ","type":"text"},{"code":"UIView.animate","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"Wraps scheduled actions in ","type":"text"},{"type":"codeVoice","code":"UIView.animate"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","variants":[{"paths":["\/documentation\/composablearchitecture\/anyscheduler\/animate(withduration:delay:options:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/animate(withDuration:delay:options:)":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/animate(withDuration:delay:options:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/anyscheduler\/animate(withduration:delay:options:)","abstract":[{"text":"Wraps scheduled actions in ","type":"text"},{"code":"UIView.animate","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","title":"animate(withDuration:delay:options:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"animate","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withDuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"text":", ","kind":"text"},{"text":"delay","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeInterval","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)UIView","text":"UIView"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@E@UIViewAnimationOptions","text":"AnimationOptions"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AnySchedulerOf","preciseIdentifier":"s:17CombineSchedulers14AnySchedulerOfa"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnySchedulerOf":{"navigatorTitle":[{"kind":"identifier","text":"AnySchedulerOf"}],"type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnySchedulerOf","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnySchedulerOf","kind":"identifier"}],"title":"AnySchedulerOf","kind":"symbol","url":"\/documentation\/composablearchitecture\/anyschedulerof","abstract":[{"type":"text","text":"A convenience type to specify an "},{"type":"codeVoice","code":"AnyScheduler"},{"type":"text","text":" by the scheduler it wraps rather than by the"},{"text":" ","type":"text"},{"text":"time type and options type.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/Scheduler-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/Scheduler-Implementations","abstract":[],"kind":"article","url":"\/documentation\/composablearchitecture\/anyscheduler\/scheduler-implementations","title":"Scheduler Implementations","type":"topic","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler":{"url":"\/documentation\/composablearchitecture\/anyscheduler","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyScheduler","kind":"identifier"}],"title":"AnyScheduler","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","abstract":[{"text":"A type-erasing wrapper for the ","type":"text"},{"type":"codeVoice","code":"Scheduler"},{"type":"text","text":" protocol, which can be useful for being generic over"},{"type":"text","text":" "},{"text":"many types of schedulers without needing to actually introduce a generic to your code.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyScheduler","kind":"identifier"}]}}}