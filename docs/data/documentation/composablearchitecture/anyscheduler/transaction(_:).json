{"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"transaction","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transaction"},{"text":": ","kind":"text"},{"text":"Transaction","preciseIdentifier":"s:7SwiftUI11TransactionV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AnySchedulerOf","kind":"typeIdentifier","preciseIdentifier":"s:17CombineSchedulers14AnySchedulerOfa","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnySchedulerOf"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A transaction.","type":"text"}],"type":"paragraph"}],"name":"transaction"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A scheduler that wraps scheduled actions in a transaction."}]}]}],"abstract":[{"text":"Wraps scheduled actions in a transaction.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/anyscheduler\/transaction(_:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/Scheduler-Implementations"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/transaction(_:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"metadata":{"extendedModule":"Combine","roleHeading":"Instance Method","title":"transaction(_:)","symbolKind":"method","role":"symbol","modules":[{"name":"ComposableArchitecture","relatedModules":["Combine"]}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"transaction","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Transaction","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11TransactionV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AnySchedulerOf","preciseIdentifier":"s:17CombineSchedulers14AnySchedulerOfa"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"externalID":"s:7Combine9SchedulerP0A10SchedulersE11transactionyAD03AnyB0Vy0B8TimeTypeQz0B7OptionsQzG7SwiftUI11TransactionVF::SYNTHESIZED::s:17CombineSchedulers12AnySchedulerV"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler":{"url":"\/documentation\/composablearchitecture\/anyscheduler","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyScheduler","kind":"identifier"}],"title":"AnyScheduler","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","abstract":[{"text":"A type-erasing wrapper for the ","type":"text"},{"type":"codeVoice","code":"Scheduler"},{"type":"text","text":" protocol, which can be useful for being generic over"},{"type":"text","text":" "},{"text":"many types of schedulers without needing to actually introduce a generic to your code.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyScheduler","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/transaction(_:)":{"role":"symbol","type":"topic","abstract":[{"text":"Wraps scheduled actions in a transaction.","type":"text"}],"url":"\/documentation\/composablearchitecture\/anyscheduler\/transaction(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/transaction(_:)","title":"transaction(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"transaction"},{"kind":"text","text":"("},{"text":"Transaction","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11TransactionV"},{"kind":"text","text":") -> "},{"text":"AnySchedulerOf","kind":"typeIdentifier","preciseIdentifier":"s:17CombineSchedulers14AnySchedulerOfa"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/Scheduler-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/Scheduler-Implementations","abstract":[],"kind":"article","url":"\/documentation\/composablearchitecture\/anyscheduler\/scheduler-implementations","title":"Scheduler Implementations","type":"topic","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnySchedulerOf":{"navigatorTitle":[{"kind":"identifier","text":"AnySchedulerOf"}],"type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnySchedulerOf","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnySchedulerOf","kind":"identifier"}],"title":"AnySchedulerOf","kind":"symbol","url":"\/documentation\/composablearchitecture\/anyschedulerof","abstract":[{"type":"text","text":"A convenience type to specify an "},{"type":"codeVoice","code":"AnyScheduler"},{"type":"text","text":" by the scheduler it wraps rather than by the"},{"text":" ","type":"text"},{"text":"time type and options type.","type":"text"}]}}}