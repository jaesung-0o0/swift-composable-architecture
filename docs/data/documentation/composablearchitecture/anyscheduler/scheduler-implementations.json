{"kind":"article","topicSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/animate(withDuration:delay:options:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/animate(withDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/animation(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/eraseToAnyScheduler()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/measure(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/schedule(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/schedule(after:_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/schedule(after:interval:_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/schedule(after:interval:tolerance:_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/schedule(after:tolerance:_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/sleep(for:tolerance:options:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/sleep(until:tolerance:options:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/timer(interval:tolerance:options:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/timerPublisher(every:tolerance:options:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/transaction(_:)"],"title":"Instance Methods"},{"generated":true,"title":"Type Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/immediateScheduler-29ghd","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/immediateScheduler-627vs","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/immediateScheduler-9kidu","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/testScheduler-6n419","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/testScheduler-7n1t5","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/testScheduler-8gogs"]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler"]]},"variants":[{"paths":["\/documentation\/composablearchitecture\/anyscheduler\/scheduler-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/Scheduler-Implementations","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"ComposableArchitecture"}],"role":"collectionGroup","title":"Scheduler Implementations"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/transaction(_:)":{"role":"symbol","type":"topic","abstract":[{"text":"Wraps scheduled actions in a transaction.","type":"text"}],"url":"\/documentation\/composablearchitecture\/anyscheduler\/transaction(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/transaction(_:)","title":"transaction(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"transaction"},{"kind":"text","text":"("},{"text":"Transaction","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11TransactionV"},{"kind":"text","text":") -> "},{"text":"AnySchedulerOf","kind":"typeIdentifier","preciseIdentifier":"s:17CombineSchedulers14AnySchedulerOfa"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/sleep(until:tolerance:options:)":{"role":"symbol","url":"\/documentation\/composablearchitecture\/anyscheduler\/sleep(until:tolerance:options:)","title":"sleep(until:tolerance:options:)","kind":"symbol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"sleep","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"until"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"tolerance"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Stride"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerOptions"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/sleep(until:tolerance:options:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/schedule(after:interval:tolerance:_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"schedule","kind":"identifier"},{"text":"(","kind":"text"},{"text":"after","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"text":", ","kind":"text"},{"text":"interval","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"kind":"text","text":"."},{"text":"Stride","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"tolerance","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Stride","kind":"typeIdentifier"},{"text":", () -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine11CancellableP","text":"Cancellable"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/schedule(after:interval:tolerance:_:)","title":"schedule(after:interval:tolerance:_:)","role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/anyscheduler\/schedule(after:interval:tolerance:_:)","abstract":[],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/animation(_:)":{"url":"\/documentation\/composablearchitecture\/anyscheduler\/animation(_:)","abstract":[{"text":"Specifies an animation to perform when an action is scheduled. This can be useful for times","type":"text"},{"type":"text","text":" "},{"text":"that you cannot easily wrap state mutations in a ","type":"text"},{"type":"codeVoice","code":"withAnimation"},{"text":" block.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/animation(_:)","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"animation","kind":"identifier"},{"kind":"text","text":"("},{"text":"Animation","preciseIdentifier":"s:7SwiftUI9AnimationV","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"AnySchedulerOf","preciseIdentifier":"s:17CombineSchedulers14AnySchedulerOfa"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"title":"animation(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/animate(withDuration:delay:options:)":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/animate(withDuration:delay:options:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/anyscheduler\/animate(withduration:delay:options:)","abstract":[{"text":"Wraps scheduled actions in ","type":"text"},{"code":"UIView.animate","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","title":"animate(withDuration:delay:options:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"animate","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withDuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"text":", ","kind":"text"},{"text":"delay","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeInterval","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)UIView","text":"UIView"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@E@UIViewAnimationOptions","text":"AnimationOptions"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AnySchedulerOf","preciseIdentifier":"s:17CombineSchedulers14AnySchedulerOfa"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/eraseToAnyScheduler()":{"title":"eraseToAnyScheduler()","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/eraseToAnyScheduler()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyScheduler"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyScheduler","preciseIdentifier":"s:17CombineSchedulers12AnySchedulerV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"SchedulerOptions","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/composablearchitecture\/anyscheduler\/erasetoanyscheduler()","abstract":[{"text":"Wraps this scheduler with a type eraser.","type":"text"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/timerPublisher(every:tolerance:options:)":{"kind":"symbol","abstract":[{"type":"text","text":"Returns a publisher that repeatedly emits the scheduler’s current time on the given"},{"text":" ","type":"text"},{"type":"text","text":"interval."}],"url":"\/documentation\/composablearchitecture\/anyscheduler\/timerpublisher(every:tolerance:options:)","title":"timerPublisher(every:tolerance:options:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"timerPublisher"},{"kind":"text","text":"("},{"text":"every","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Stride","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"kind":"text","text":"."},{"text":"Stride","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerOptions"},{"kind":"text","text":"?) -> "},{"text":"Publishers","kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Timer","preciseIdentifier":"s:7Combine10PublishersO0A10SchedulersE5TimerC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/timerPublisher(every:tolerance:options:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/immediateScheduler-627vs":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/immediateScheduler-627vs","url":"\/documentation\/composablearchitecture\/anyscheduler\/immediatescheduler-627vs","kind":"symbol","abstract":[],"title":"immediateScheduler","deprecated":true,"type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"immediateScheduler","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ImmediateSchedulerOf","kind":"typeIdentifier","preciseIdentifier":"s:17CombineSchedulers20ImmediateSchedulerOfa"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"SchedulerOptions","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"DispatchQueue.SchedulerOptions"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SchedulerTimeType"},{"type":"text","text":" is "},{"code":"DispatchQueue.SchedulerTimeType","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/measure(_:)":{"title":"measure(_:)","abstract":[{"text":"Measure the elapsed time to execute a closure.","type":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/anyscheduler\/measure(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"measure","kind":"identifier"},{"kind":"text","text":"(() "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Stride","kind":"typeIdentifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/measure(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/testScheduler-7n1t5":{"title":"testScheduler","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/testScheduler-7n1t5","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"testScheduler","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TestSchedulerOf","preciseIdentifier":"s:17CombineSchedulers15TestSchedulerOfa"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/anyscheduler\/testscheduler-7n1t5","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"SchedulerOptions"},{"type":"text","text":" is "},{"type":"codeVoice","code":"RunLoop.SchedulerOptions"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SchedulerTimeType"},{"type":"text","text":" is "},{"code":"RunLoop.SchedulerTimeType","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"A test scheduler of run loops."}],"type":"topic","kind":"symbol","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/schedule(after:_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/schedule(after:_:)","url":"\/documentation\/composablearchitecture\/anyscheduler\/schedule(after:_:)","abstract":[],"role":"symbol","title":"schedule(after:_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"schedule","kind":"identifier"},{"kind":"text","text":"("},{"text":"after","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"kind":"text","text":", () -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/testScheduler-6n419":{"deprecated":true,"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"testScheduler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TestSchedulerOf","preciseIdentifier":"s:17CombineSchedulers15TestSchedulerOfa"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"testScheduler","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/testScheduler-6n419","role":"symbol","url":"\/documentation\/composablearchitecture\/anyscheduler\/testscheduler-6n419","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"SchedulerOptions"},{"text":" is ","type":"text"},{"code":"OperationQueue.SchedulerOptions","type":"codeVoice"},{"type":"text","text":" and "},{"code":"SchedulerTimeType","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"OperationQueue.SchedulerTimeType"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"text":"A test scheduler of operation queues.","type":"text"}],"kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler":{"url":"\/documentation\/composablearchitecture\/anyscheduler","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyScheduler","kind":"identifier"}],"title":"AnyScheduler","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","abstract":[{"text":"A type-erasing wrapper for the ","type":"text"},{"type":"codeVoice","code":"Scheduler"},{"type":"text","text":" protocol, which can be useful for being generic over"},{"type":"text","text":" "},{"text":"many types of schedulers without needing to actually introduce a generic to your code.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyScheduler","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/immediateScheduler-9kidu":{"abstract":[],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"SchedulerOptions","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"RunLoop.SchedulerOptions"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"SchedulerTimeType"},{"text":" is ","type":"text"},{"code":"RunLoop.SchedulerTimeType","type":"codeVoice"},{"type":"text","text":"."}]},"title":"immediateScheduler","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/immediateScheduler-9kidu","deprecated":true,"kind":"symbol","url":"\/documentation\/composablearchitecture\/anyscheduler\/immediatescheduler-9kidu","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"immediateScheduler","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17CombineSchedulers20ImmediateSchedulerOfa","text":"ImmediateSchedulerOf"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/timer(interval:tolerance:options:)":{"url":"\/documentation\/composablearchitecture\/anyscheduler\/timer(interval:tolerance:options:)","abstract":[{"type":"text","text":"Returns a stream that repeatedly yields the current time of the scheduler on a given interval."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"timer","kind":"identifier"},{"kind":"text","text":"("},{"text":"interval","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Stride"},{"kind":"text","text":", "},{"text":"tolerance","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Stride"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SchedulerOptions","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncStream","preciseIdentifier":"s:ScS"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","title":"timer(interval:tolerance:options:)","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/timer(interval:tolerance:options:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/animate(withDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:)":{"abstract":[{"type":"text","text":"Wraps scheduled actions in "},{"code":"UIView.animate","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","title":"animate(withDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"animate"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"withDuration"},{"text":": ","kind":"text"},{"text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"delay","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval","text":"TimeInterval"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"usingSpringWithDamping"},{"kind":"text","text":": "},{"text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"initialSpringVelocity","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"text":": ","kind":"text"},{"text":"UIView","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)UIView"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"c:@E@UIViewAnimationOptions","text":"AnimationOptions"},{"kind":"text","text":") -> "},{"text":"AnySchedulerOf","preciseIdentifier":"s:17CombineSchedulers14AnySchedulerOfa","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"url":"\/documentation\/composablearchitecture\/anyscheduler\/animate(withduration:delay:usingspringwithdamping:initialspringvelocity:options:)","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/animate(withDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/immediateScheduler-29ghd":{"url":"\/documentation\/composablearchitecture\/anyscheduler\/immediatescheduler-29ghd","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/immediateScheduler-29ghd","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"immediateScheduler","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ImmediateSchedulerOf","kind":"typeIdentifier","preciseIdentifier":"s:17CombineSchedulers20ImmediateSchedulerOfa"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol","deprecated":true,"type":"topic","kind":"symbol","title":"immediateScheduler","abstract":[],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"SchedulerOptions"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"OperationQueue.SchedulerOptions"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SchedulerTimeType"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"OperationQueue.SchedulerTimeType"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/schedule(after:interval:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"schedule","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"after"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"interval"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Stride"},{"text":", () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Combine11CancellableP","text":"Cancellable","kind":"typeIdentifier"}],"title":"schedule(after:interval:_:)","url":"\/documentation\/composablearchitecture\/anyscheduler\/schedule(after:interval:_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/schedule(after:interval:_:)","type":"topic","role":"symbol","kind":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/schedule(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"schedule","kind":"identifier"},{"kind":"text","text":"(() -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[],"url":"\/documentation\/composablearchitecture\/anyscheduler\/schedule(_:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/schedule(_:)","role":"symbol","type":"topic","title":"schedule(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/sleep(for:tolerance:options:)":{"title":"sleep(for:tolerance:options:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"sleep","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Stride"},{"text":", ","kind":"text"},{"text":"tolerance","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Stride"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"SchedulerOptions","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/composablearchitecture\/anyscheduler\/sleep(for:tolerance:options:)","abstract":[{"text":"Suspends the current task for at least the given duration.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/sleep(for:tolerance:options:)","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/schedule(after:tolerance:_:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"schedule","kind":"identifier"},{"text":"(","kind":"text"},{"text":"after","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Stride","kind":"typeIdentifier"},{"text":", () -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}],"kind":"symbol","title":"schedule(after:tolerance:_:)","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/schedule(after:tolerance:_:)","role":"symbol","url":"\/documentation\/composablearchitecture\/anyscheduler\/schedule(after:tolerance:_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler/testScheduler-8gogs":{"abstract":[{"type":"text","text":"A test scheduler of dispatch queues."}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/anyscheduler\/testscheduler-8gogs","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"testScheduler"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:17CombineSchedulers15TestSchedulerOfa","text":"TestSchedulerOf","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler\/testScheduler-8gogs","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"SchedulerOptions","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"DispatchQueue.SchedulerOptions"},{"type":"text","text":" and "},{"code":"SchedulerTimeType","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"DispatchQueue.SchedulerTimeType"},{"type":"text","text":"."}]},"title":"testScheduler","deprecated":true,"type":"topic"}}}