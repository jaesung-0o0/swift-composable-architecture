{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated"]]},"abstract":[{"type":"text","text":"Overwrite the isolated value with a new value."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"newValue"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"The value to replace the current isolated value with.","type":"text"}],"type":"paragraph"}],"name":"newValue"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"syntax":"swift","type":"codeListing","code":["\/\/ Isolate an integer for concurrent read\/write access:","var count = LockIsolated(0)","","func reset() {","  \/\/ Reset it:","  self.count.setValue(0)","}"]},{"name":"Tip","content":[{"inlineContent":[{"type":"text","text":"Use "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated\/withValue(_:)","type":"reference"},{"text":" instead of ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated\/setValue(_:)","type":"reference","isActive":true},{"text":" if the value being set is derived","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"from the current value. That is, do this:"}],"type":"paragraph"},{"code":["self.count.withValue { $0 += 1 }"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"â€¦and not this:"}],"type":"paragraph"},{"code":["self.count.setValue(self.count + 1)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated\/withValue(_:)","type":"reference"},{"type":"text","text":" isolates the entire transaction and avoids data races between reading and"},{"type":"text","text":" "},{"type":"text","text":"writing the value."}]}],"style":"tip","type":"aside"}]}],"metadata":{"externalID":"s:17ConcurrencyExtras12LockIsolatedC8setValueyyxyYbKXKKF","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setValue","kind":"identifier"},{"text":"(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"role":"symbol","modules":[{"name":"ComposableArchitecture"}],"title":"setValue(_:)","roleHeading":"Instance Method"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated\/setValue(_:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/lockisolated\/setvalue(_:)"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/LockIsolated/setValue(_:)":{"url":"\/documentation\/composablearchitecture\/lockisolated\/setvalue(_:)","type":"topic","abstract":[{"type":"text","text":"Overwrite the isolated value with a new value."}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated\/setValue(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"setValue","kind":"identifier"},{"text":"(() ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"}],"title":"setValue(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/LockIsolated":{"url":"\/documentation\/composablearchitecture\/lockisolated","role":"symbol","abstract":[{"type":"text","text":"A generic wrapper for isolating a mutable value with a lock."}],"navigatorTitle":[{"kind":"identifier","text":"LockIsolated"}],"title":"LockIsolated","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"LockIsolated","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/LockIsolated/withValue(_:)":{"url":"\/documentation\/composablearchitecture\/lockisolated\/withvalue(_:)","type":"topic","abstract":[{"type":"text","text":"Perform an operation with isolated access to the underlying value."}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated\/withValue(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withValue","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"}],"title":"withValue(_:)"}}}