{"sections":[],"topicSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated\/!=(_:_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated\/==(_:_:)"],"title":"Operators"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/lockisolated\/equatable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated\/Equatable-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"article","metadata":{"role":"collectionGroup","modules":[{"name":"ComposableArchitecture"}],"title":"Equatable Implementations"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/LockIsolated/!=(_:_:)":{"title":"!=(_:_:)","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated\/!=(_:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/composablearchitecture\/lockisolated\/!=(_:_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/LockIsolated/==(_:_:)":{"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"==(_:_:)","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated\/==(_:_:)","abstract":[],"type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"LockIsolated","kind":"typeIdentifier","preciseIdentifier":"s:17ConcurrencyExtras12LockIsolatedC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:17ConcurrencyExtras12LockIsolatedC","kind":"typeIdentifier","text":"LockIsolated"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/composablearchitecture\/lockisolated\/==(_:_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/LockIsolated":{"url":"\/documentation\/composablearchitecture\/lockisolated","role":"symbol","abstract":[{"type":"text","text":"A generic wrapper for isolating a mutable value with a lock."}],"navigatorTitle":[{"kind":"identifier","text":"LockIsolated"}],"title":"LockIsolated","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LockIsolated","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"LockIsolated","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"}}}