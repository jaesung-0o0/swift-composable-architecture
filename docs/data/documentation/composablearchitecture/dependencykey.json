{"metadata":{"title":"DependencyKey","externalID":"s:12Dependencies13DependencyKeyP","roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DependencyKey","kind":"identifier"}],"modules":[{"name":"ComposableArchitecture"}],"symbolKind":"protocol","role":"symbol","navigatorTitle":[{"text":"DependencyKey","kind":"identifier"}]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyKey\/Value"]},{"title":"Type Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyKey\/liveValue","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyKey\/previewValue-36s5j","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyKey\/testValue-535kh"]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/dependencykey"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"A key for accessing dependencies."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"DependencyKey","kind":"identifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestDependencyKey","text":"TestDependencyKey","kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies17TestDependencyKeyP"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"Types conform to this protocol to extend ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyValues","isActive":true},{"text":" with custom dependencies. It is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"similar to SwiftUIâ€™s "},{"type":"codeVoice","code":"EnvironmentKey"},{"type":"text","text":" protocol, which is used to add values to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EnvironmentValues"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"code":"DependencyKey","type":"codeVoice"},{"text":" has one main requirement, ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyKey\/liveValue"},{"type":"text","text":", which must return a default value for"},{"type":"text","text":" "},{"type":"text","text":"your dependency that is used when the application is run in a simulator or device. If the"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyKey\/liveValue","type":"reference"},{"type":"text","text":" is accessed while your feature runs in tests a test failure will be"},{"type":"text","text":" "},{"text":"triggered.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To add a "},{"code":"UserClient","type":"codeVoice"},{"type":"text","text":" dependency that can fetch and save user values can be done like so:"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ The user client dependency.","struct UserClient {","  var fetchUser: (User.ID) async throws -> User","  var saveUser: (User) async throws -> Void","}","\/\/ Conform to DependencyKey to provide a live implementation of","\/\/ the interface.","extension UserClient: DependencyKey {","  static let liveValue = Self(","    fetchUser: { \/* Make request to fetch user *\/ },","    saveUser: { \/* Make request to save user *\/ }","  )","}","\/\/ Register the dependency within DependencyValues.","extension DependencyValues {","  var userClient: UserClient {","    get { self[UserClient.self] }","    set { self[UserClient.self] = newValue }","  }","}"]},{"inlineContent":[{"type":"text","text":"When a dependency is first accessed its value is cached so that it will not be requested again."},{"type":"text","text":" "},{"text":"This means if your ","type":"text"},{"code":"liveValue","type":"codeVoice"},{"text":" is implemented as a computed property instead of a ","type":"text"},{"code":"static let","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"then it will only be called a single time:"}],"type":"paragraph"},{"syntax":"swift","code":["extension UserClient: DependencyKey {","  static var liveValue: Self {","    \/\/ Only called once when dependency is first accessed.","    return Self(\/* ... *\/)","  }","}"],"type":"codeListing"},{"inlineContent":[{"type":"codeVoice","code":"DependencyKey"},{"text":" inherits from ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestDependencyKey","type":"reference","isActive":true},{"type":"text","text":", which has two other overridable"},{"type":"text","text":" "},{"type":"text","text":"requirements: "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestDependencyKey\/testValue-3n8q1"},{"text":", which should return a default value for the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"purpose of testing, and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestDependencyKey\/previewValue-8u2sy"},{"type":"text","text":", which can return a default"},{"text":" ","type":"text"},{"text":"value suitable for Xcode previews. When left unimplemented, these endpoints will return the","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyKey\/liveValue","type":"reference"},{"type":"text","text":", instead."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you plan on separating your interface from your live implementation, conform to"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestDependencyKey"},{"type":"text","text":" in your interface module, and conform to "},{"type":"codeVoice","code":"DependencyKey"},{"type":"text","text":" in your"},{"text":" ","type":"text"},{"text":"implementation module.","type":"text"}]},{"inlineContent":[{"text":"See the ","type":"text"},{"type":"text","text":"doc:LivePreviewTest"},{"text":" article for more information.","type":"text"}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyKey","interfaceLanguage":"swift"},"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestDependencyKey"],"title":"Inherits From","kind":"relationships","type":"inheritsFrom"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyKey":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyKey","role":"symbol","navigatorTitle":[{"text":"DependencyKey","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/dependencykey","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"DependencyKey","kind":"identifier"}],"abstract":[{"text":"A key for accessing dependencies.","type":"text"}],"type":"topic","kind":"symbol","title":"DependencyKey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyKey/testValue-535kh":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyKey\/testValue-535kh","required":true,"url":"\/documentation\/composablearchitecture\/dependencykey\/testvalue-535kh","defaultImplementations":1,"type":"topic","role":"symbol","title":"testValue","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"testValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The test value for the dependency key."}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestDependencyKey":{"url":"\/documentation\/composablearchitecture\/testdependencykey","navigatorTitle":[{"text":"TestDependencyKey","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A key for accessing test dependencies."}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestDependencyKey","title":"TestDependencyKey","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestDependencyKey","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyValues":{"url":"\/documentation\/composablearchitecture\/dependencyvalues","navigatorTitle":[{"text":"DependencyValues","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A collection of dependencies that is globally available.","type":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyValues","title":"DependencyValues","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DependencyValues"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyKey/previewValue-36s5j":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyKey\/previewValue-36s5j","type":"topic","defaultImplementations":1,"abstract":[{"text":"The preview value for the dependency key.","type":"text"}],"url":"\/documentation\/composablearchitecture\/dependencykey\/previewvalue-36s5j","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previewValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","required":true,"title":"previewValue"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyKey/Value":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyKey\/Value","title":"Value","abstract":[{"text":"The associated type representing the type of the dependency keyâ€™s value.","type":"text"}],"required":true,"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Value","kind":"identifier"},{"kind":"text","text":" = "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/composablearchitecture\/dependencykey\/value"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestDependencyKey/previewValue-8u2sy":{"role":"symbol","abstract":[{"type":"text","text":"The preview value for the dependency key."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestDependencyKey\/previewValue-8u2sy","kind":"symbol","url":"\/documentation\/composablearchitecture\/testdependencykey\/previewvalue-8u2sy","title":"previewValue","required":true,"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previewValue","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"type":"topic","defaultImplementations":2},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyKey/liveValue":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyKey\/liveValue","role":"symbol","required":true,"url":"\/documentation\/composablearchitecture\/dependencykey\/livevalue","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"liveValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"text":"The live value for the dependency key.","type":"text"}],"type":"topic","kind":"symbol","title":"liveValue"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestDependencyKey/testValue-3n8q1":{"role":"symbol","abstract":[{"type":"text","text":"The test value for the dependency key."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestDependencyKey\/testValue-3n8q1","kind":"symbol","url":"\/documentation\/composablearchitecture\/testdependencykey\/testvalue-3n8q1","title":"testValue","required":true,"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"testValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Value","kind":"typeIdentifier"}],"type":"topic","defaultImplementations":1}}}