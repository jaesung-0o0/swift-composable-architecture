{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState"]]},"metadata":{"title":"Hashable Implementations","modules":[{"name":"ComposableArchitecture"}],"role":"collectionGroup"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState\/hash(into:)"],"generated":true}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState\/Hashable-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"article","sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/bindingstate\/hashable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","role":"symbol","navigatorTitle":[{"text":"BindingState","kind":"identifier"}],"type":"topic","title":"BindingState","abstract":[{"type":"text","text":"A property wrapper type that can designate properties of app state that can be directly bindable"},{"type":"text","text":" "},{"type":"text","text":"in SwiftUI views."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/bindingstate","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingState/hash(into:)":{"abstract":[],"type":"topic","kind":"symbol","title":"hash(into:)","role":"symbol","url":"\/documentation\/composablearchitecture\/bindingstate\/hash(into:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState\/hash(into:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic"}}}