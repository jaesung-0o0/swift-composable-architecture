{"sections":[],"abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on an optional property of parent state."}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/ifLet(_:action:destination:fileID:line:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@warn_unqualified_access"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ifLet"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"DestinationAction","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Destination"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"toPresentationState","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"text":"action","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"toPresentationAction","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier","text":"CasePath"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","text":"PresentationAction"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationAction"},{"text":">>, ","kind":"text"},{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:22ComposableArchitecture14ReducerBuilderO","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","kind":"attribute","text":"ReducerBuilder"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DestinationState"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"DestinationAction"},{"text":">","kind":"text"},{"text":" ","kind":"text"},{"text":"destination","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Destination","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":" = "},{"text":"#fileID","kind":"keyword"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"kind":"text","text":") -> "},{"text":"_PresentationReducer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Destination","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"DestinationState","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"Destination"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"Destination"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Destination"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP","kind":"typeIdentifier","text":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A writable key path from parent state to a property containing child","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"presentation state."}]}],"name":"toPresentationState"},{"name":"toPresentationAction","content":[{"type":"paragraph","inlineContent":[{"text":"A case path from parent action to a case containing child actions.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A reducer that will be invoked with child actions against presented child"},{"type":"text","text":" "},{"text":"state.","type":"text"}]}],"name":"destination"}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A reducer that combines the child reducer with the parent reducer.","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"text":"This version of ","type":"text"},{"code":"ifLet","type":"codeVoice"},{"type":"text","text":" requires the usage of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"in your feature’s domain.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"For example, if a parent feature holds onto a piece of optional child state, then it can","type":"text"},{"type":"text","text":" "},{"text":"perform its core logic ","type":"text"},{"inlineContent":[{"type":"text","text":"and"}],"type":"emphasis"},{"text":" the child’s logic by using the ","type":"text"},{"type":"codeVoice","code":"ifLet"},{"type":"text","text":" operator:"}]},{"type":"codeListing","code":["struct Parent: Reducer {","  struct State {","    @PresentationState var child: Child.State?","    \/\/ ...","  }","  enum Action {","    case child(PresentationAction<Child.Action>)","    \/\/ ...","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      \/\/ Core logic for parent feature","    }","    .ifLet(\\.$child, action: \/Action.child) {","      Child()","    }","  }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ifLet"},{"type":"text","text":" operator does a number of things to make integrating parent and child features"},{"text":" ","type":"text"},{"type":"text","text":"ergonomic and enforce correctness:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"It forces a specific order of operations for the child and parent features:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"When a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss","isActive":true,"type":"reference"},{"text":" action is sent, it runs the parent feature","type":"text"},{"type":"text","text":" "},{"type":"text","text":"before the child state is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"’d out. This gives the parent feature an opportunity to"},{"text":" ","type":"text"},{"text":"inspect the child state one last time before the state is cleared.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/presented(_:)","isActive":true},{"type":"text","text":" action is sent it runs the"},{"type":"text","text":" "},{"type":"text","text":"child first, and then the parent. If the order was reversed, then it would be possible"},{"text":" ","type":"text"},{"type":"text","text":"for the parent feature to "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" out the child state, in which case the child feature"},{"text":" ","type":"text"},{"type":"text","text":"would not be able to react to that action. That can cause subtle bugs."}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"It automatically cancels all child effects when it detects the child’s state is "},{"type":"codeVoice","code":"nil"},{"text":"’d","type":"text"},{"type":"text","text":" "},{"text":"out.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Automatically ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"s out child state when an action is sent for alerts and confirmation"},{"text":" ","type":"text"},{"type":"text","text":"dialogs."}]}]},{"content":[{"inlineContent":[{"text":"It gives the child feature access to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect"},{"type":"text","text":" dependency, which allows the"},{"type":"text","text":" "},{"type":"text","text":"child feature to dismiss itself without communicating with the parent."}],"type":"paragraph"}]}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"externalID":"s:22ComposableArchitecture7ReducerPAAE5ifLet_6action11destination6fileID4lineAA013_PresentationC0Vyxqd_1_Gs15WritableKeyPathCy5StateQzAA0kO0Vyqd__GG_9CasePaths0pN0Vy6ActionQzAA0kR0Oyqd_0_GGqd_1_yXEs12StaticStringVSutANQyd_1_Rsd__AWQyd_1_Rsd_0_AaBRd_1_r1_lF::SYNTHESIZED::s:22ComposableArchitecture15CombineReducersV","role":"symbol","symbolKind":"method","extendedModule":"ComposableArchitecture","modules":[{"name":"ComposableArchitecture"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"ifLet","kind":"identifier"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"DestinationAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Destination","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"PresentationState","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","text":"PresentationAction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"destination","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Destination"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"_PresentationReducer"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Destination"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","title":"ifLet(_:action:destination:fileID:line:)"},"variants":[{"paths":["\/documentation\/composablearchitecture\/combinereducers\/iflet(_:action:destination:fileid:line:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/Reducer-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers/Reducer-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/Reducer-Implementations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/combinereducers\/reducer-implementations","type":"topic","abstract":[],"title":"Reducer Implementations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers/ifLet(_:action:destination:fileID:line:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/ifLet(_:action:destination:fileID:line:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ifLet","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"DestinationState"},{"kind":"text","text":", "},{"text":"DestinationAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Destination","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"text":"destination","kind":"externalParam"},{"kind":"text","text":": () -> "},{"text":"Destination","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"_PresentationReducer"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Destination"},{"kind":"text","text":">"}],"type":"topic","url":"\/documentation\/composablearchitecture\/combinereducers\/iflet(_:action:destination:fileid:line:)","abstract":[{"text":"Embeds a child reducer in a parent domain that works on an optional property of parent state.","type":"text"}],"title":"ifLet(_:action:destination:fileID:line:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}],"title":"Reducer","role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","kind":"symbol","abstract":[{"type":"text","text":"현재 앱의 상태를 주어진 액션을 가지고 어떻게 다음 상태로 변경할 지를 묘사하는 프로토콜. 또한 나중에 Store에 의해 실행되어야 할 "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"가 무엇인지 묘사하고 있습니다.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReducerBuilder"}],"title":"ReducerBuilder","role":"symbol","url":"\/documentation\/composablearchitecture\/reducerbuilder","kind":"symbol","abstract":[{"text":"리듀서들을 순차적으로 실행시켜 하나의 리듀서로 결합시키고 이펙트들을 머지하기 위한 ","type":"text"},{"type":"codeVoice","code":"resultBuilder"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"ReducerBuilder","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction/presented(_:)":{"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"presented","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/presentationaction\/presented(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/presented(_:)","abstract":[{"type":"text","text":"An action sent to the associated, non-"},{"type":"codeVoice","code":"nil"},{"text":" presentation state.","type":"text"}],"type":"topic","title":"PresentationAction.presented(_:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"PresentationAction","kind":"identifier"}],"title":"PresentationAction","role":"symbol","url":"\/documentation\/composablearchitecture\/presentationaction","kind":"symbol","abstract":[{"text":"A wrapper type for actions that can be presented.","type":"text"}],"navigatorTitle":[{"text":"PresentationAction","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","kind":"symbol","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction/dismiss":{"type":"topic","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"dismiss","kind":"identifier"}],"title":"PresentationAction.dismiss","role":"symbol","url":"\/documentation\/composablearchitecture\/presentationaction\/dismiss","kind":"symbol","abstract":[{"text":"An action sent to ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" out the associated presentation state."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationState","kind":"identifier"}],"title":"PresentationState","role":"symbol","url":"\/documentation\/composablearchitecture\/presentationstate","kind":"symbol","abstract":[{"text":"A property wrapper for state that can be presented.","type":"text"}],"navigatorTitle":[{"text":"PresentationState","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DismissEffect","kind":"identifier"}],"title":"DismissEffect","role":"symbol","url":"\/documentation\/composablearchitecture\/dismisseffect","kind":"symbol","abstract":[{"text":"An effect that dismisses the current presentation.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"DismissEffect"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers":{"kind":"symbol","role":"symbol","title":"CombineReducers","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CombineReducers","kind":"identifier"}],"navigatorTitle":[{"text":"CombineReducers","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","abstract":[{"type":"text","text":"여러개의 리듀서를 하나의 리듀서로 결합합니다."}],"url":"\/documentation\/composablearchitecture\/combinereducers"}}}