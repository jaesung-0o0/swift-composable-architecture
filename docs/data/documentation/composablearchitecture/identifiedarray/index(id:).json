{"sections":[],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"text":"ID","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","roleHeading":"Instance Method","title":"index(id:)","symbolKind":"method","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:21IdentifiedCollections0A5ArrayV5index2idSiSgx_tF"},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ID"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"text":"The id to find in the array.","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"The index for the element identified by ","type":"text"},{"code":"id","type":"codeVoice"},{"text":" if found in the array; otherwise,","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If an element identified by the given id is found in the array, this method returns an index"},{"text":" ","type":"text"},{"type":"text","text":"into the array that corresponds to the element."}]},{"code":["struct User: Identifiable { var id: String }","let users: IdentifiedArray = [","  User(id: \"u_42\"),","  User(id: \"u_1729\"),","]","users.index(id: \"u_1729\") \/\/ 1","users.index(id: \"u_1337\") \/\/ nil"],"type":"codeListing","syntax":"swift"},{"style":"note","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"text":"Expected to be O(1) on average, if ","type":"text"},{"type":"codeVoice","code":"ID"},{"type":"text","text":" implements high-quality hashing."}]}],"type":"aside"}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/identifiedarray\/index(id:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/index(id:)"},"abstract":[{"type":"text","text":"Returns the index for the given id."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray","abstract":[{"type":"text","text":"An ordered collection of identifiable elements."}],"navigatorTitle":[{"kind":"identifier","text":"IdentifiedArray"}],"url":"\/documentation\/composablearchitecture\/identifiedarray","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedArray"}],"kind":"symbol","role":"symbol","title":"IdentifiedArray"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray/index(id:)":{"title":"index(id:)","kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/identifiedarray\/index(id:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Returns the index for the given id."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/index(id:)"}}}