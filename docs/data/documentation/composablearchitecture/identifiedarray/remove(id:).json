{"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"remove"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Element"},{"text":"?","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The id of the element to be removed from the array."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"text":"The element that was removed, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the element was not present in the array."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"code":["struct User: Identifiable { var id: String }","let users: IdentifiedArray = [","  User(id: \"u_42\"),","  User(id: \"u_1729\"),","]","users.remove(id: \"u_1729\") \/\/ User(id: \"u_1729\")","users                      \/\/ [User(id: \"u_42\")]","users.remove(id: \"u_1337\") \/\/ nil"],"type":"codeListing","syntax":"swift"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"codeVoice","code":"count"},{"text":")","type":"text"}]}],"style":"note","type":"aside","name":"Complexity"}]}],"kind":"symbol","metadata":{"title":"remove(id:)","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"remove"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ID"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":"?","kind":"text"}],"role":"symbol","symbolKind":"method","externalID":"s:21IdentifiedCollections0A5ArrayV6remove2idq_Sgx_tF"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/remove(id:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Removes the element identified by the given id from the array."}],"variants":[{"paths":["\/documentation\/composablearchitecture\/identifiedarray\/remove(id:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray/remove(id:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/remove(id:)","url":"\/documentation\/composablearchitecture\/identifiedarray\/remove(id:)","title":"remove(id:)","role":"symbol","abstract":[{"type":"text","text":"Removes the element identified by the given id from the array."}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"remove","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray","abstract":[{"type":"text","text":"An ordered collection of identifiable elements."}],"navigatorTitle":[{"kind":"identifier","text":"IdentifiedArray"}],"url":"\/documentation\/composablearchitecture\/identifiedarray","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedArray"}],"kind":"symbol","role":"symbol","title":"IdentifiedArray"}}}