{"abstract":[{"type":"text","text":"Creates a new array from the elements in the given sequence."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray"]]},"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/init(uniqueElements:)","interfaceLanguage":"swift"},"metadata":{"title":"init(uniqueElements:)","extendedModule":"IdentifiedCollections","externalID":"s:21IdentifiedCollections0A5ArrayVAA2IDQy_Rszs12IdentifiableR_rlE14uniqueElementsACyxq_Gqd___tc7ElementQyd__Rs_STRd__lufc","platforms":[{"deprecated":false,"unavailable":false,"introducedAt":"13.0","beta":false,"name":"iOS"},{"unavailable":false,"deprecated":false,"name":"macOS","introducedAt":"10.15","beta":false},{"deprecated":false,"introducedAt":"13.0","name":"tvOS","unavailable":false,"beta":false},{"name":"watchOS","beta":false,"introducedAt":"6.0","deprecated":false,"unavailable":false}],"symbolKind":"init","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Element.ID"},{"type":"text","text":" and "},{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":"."}]},"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"uniqueElements"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":")"}],"roleHeading":"Initializer","modules":[{"relatedModules":["IdentifiedCollections"],"name":"ComposableArchitecture"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"uniqueElements","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"elements","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"S"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:ST"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A sequence of elements to use for the new array. Every element in"},{"type":"text","text":" "},{"type":"codeVoice","code":"elements"},{"text":" must have a unique id.","type":"text"}],"type":"paragraph"}],"name":"elements"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A new array initialized with the elements of ","type":"text"},{"code":"elements","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You use this initializer to create an array when you have a sequence of elements with unique"},{"text":" ","type":"text"},{"type":"text","text":"ids. Passing a sequence with duplicate ids to this initializer results in a runtime error."}]},{"style":"note","content":[{"inlineContent":[{"text":"The sequence must not have duplicate ids.","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Precondition"},{"style":"note","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Expected O("},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":") on average, where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" is the count of elements, if ","type":"text"},{"code":"ID","type":"codeVoice"},{"text":" ","type":"text"},{"text":"implements high-quality hashing.","type":"text"}]}],"type":"aside"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/identifiedarray\/init(uniqueelements:)"]}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray","abstract":[{"type":"text","text":"An ordered collection of identifiable elements."}],"navigatorTitle":[{"kind":"identifier","text":"IdentifiedArray"}],"url":"\/documentation\/composablearchitecture\/identifiedarray","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedArray"}],"kind":"symbol","role":"symbol","title":"IdentifiedArray"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray/init(uniqueElements:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/init(uniqueElements:)","url":"\/documentation\/composablearchitecture\/identifiedarray\/init(uniqueelements:)","title":"init(uniqueElements:)","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"text":" is ","type":"text"},{"code":"Element.ID","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"type":"text","text":"Creates a new array from the elements in the given sequence."}],"kind":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"uniqueElements","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}]}}}