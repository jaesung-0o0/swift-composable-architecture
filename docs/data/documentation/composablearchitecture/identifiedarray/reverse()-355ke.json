{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/MutableCollection-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reverse","kind":"identifier"},{"kind":"text","text":"()"}]}]}],"metadata":{"externalID":"s:SMsSKRzrlE7reverseyyF::SYNTHESIZED::s:21IdentifiedCollections0A5ArrayV","symbolKind":"method","extendedModule":"Swift","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"ComposableArchitecture"}],"roleHeading":"Instance Method","title":"reverse()","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"BidirectionalCollection","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reverse"},{"text":"()","kind":"text"}]},"variants":[{"paths":["\/documentation\/composablearchitecture\/identifiedarray\/reverse()-355ke"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"MutableCollection.reverse()"},{"type":"text","text":"."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/reverse()-355ke"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray/MutableCollection-Implementations":{"role":"collectionGroup","abstract":[],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/MutableCollection-Implementations","url":"\/documentation\/composablearchitecture\/identifiedarray\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray/reverse()-355ke":{"url":"\/documentation\/composablearchitecture\/identifiedarray\/reverse()-355ke","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/reverse()-355ke","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reverse","kind":"identifier"},{"kind":"text","text":"()"}],"title":"reverse()","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"BidirectionalCollection"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray","abstract":[{"type":"text","text":"An ordered collection of identifiable elements."}],"navigatorTitle":[{"kind":"identifier","text":"IdentifiedArray"}],"url":"\/documentation\/composablearchitecture\/identifiedarray","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedArray"}],"kind":"symbol","role":"symbol","title":"IdentifiedArray"}}}