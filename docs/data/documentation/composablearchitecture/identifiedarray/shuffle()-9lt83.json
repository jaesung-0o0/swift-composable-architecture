{"abstract":[{"type":"text","text":"Shuffles the collection in place."}],"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"shuffle","kind":"identifier"},{"text":"()","kind":"text"}],"extendedModule":"IdentifiedCollections","symbolKind":"method","modules":[{"name":"ComposableArchitecture","relatedModules":["IdentifiedCollections"]}],"externalID":"s:21IdentifiedCollections0A5ArrayV7shuffleyyF","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"ID","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}]},"title":"shuffle()","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray"]]},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"shuffle","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"type":"codeVoice","code":"shuffle()"},{"type":"text","text":" method to randomly reorder the elements of an array."}]},{"inlineContent":[{"type":"text","text":"This method is equivalent to calling "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/shuffle(using:)-n7ld","isActive":true},{"type":"text","text":", passing in the systemâ€™s default"},{"type":"text","text":" "},{"type":"text","text":"random generator."}],"type":"paragraph"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" is the length of the collection.","type":"text"}]}],"type":"aside","name":"Complexity"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/shuffle()-9lt83","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/composablearchitecture\/identifiedarray\/shuffle()-9lt83"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray/shuffle()-9lt83":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"ID","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]},"title":"shuffle()","kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/identifiedarray\/shuffle()-9lt83","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shuffle","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/shuffle()-9lt83","abstract":[{"text":"Shuffles the collection in place.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray","abstract":[{"type":"text","text":"An ordered collection of identifiable elements."}],"navigatorTitle":[{"kind":"identifier","text":"IdentifiedArray"}],"url":"\/documentation\/composablearchitecture\/identifiedarray","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedArray"}],"kind":"symbol","role":"symbol","title":"IdentifiedArray"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray/shuffle(using:)-n7ld":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/identifiedarray\/shuffle(using:)-n7ld","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shuffle"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"using"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}],"type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"ID","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]},"title":"shuffle(using:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/shuffle(using:)-n7ld","role":"symbol","abstract":[{"type":"text","text":"Shuffles the collection in place, using the given generator as a source for randomness."}]}}}