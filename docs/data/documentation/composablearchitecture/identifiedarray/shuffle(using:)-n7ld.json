{"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"shuffle"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"using"},{"kind":"text","text":" "},{"text":"generator","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SG","text":"RandomNumberGenerator"}]}]},{"kind":"parameters","parameters":[{"name":"generator","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The random number generator to use when shuffling the collection."}]}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"You use this method to randomize the elements of a collection when you are using a custom"},{"text":" ","type":"text"},{"type":"text","text":"random number generator."}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":" is the length of the collection."}]}],"style":"note","type":"aside","name":"Complexity"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The algorithm used to shuffle a collection may change in a future version of Swift.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If youâ€™re passing a generator that results in the same shuffled order each time you run your"},{"type":"text","text":" "},{"type":"text","text":"program, that sequence may change when your program is compiled using a different version of"},{"type":"text","text":" "},{"type":"text","text":"Swift."}]}],"type":"aside","style":"note","name":"Note"}]}],"abstract":[{"type":"text","text":"Shuffles the collection in place, using the given generator as a source for randomness."}],"variants":[{"paths":["\/documentation\/composablearchitecture\/identifiedarray\/shuffle(using:)-n7ld"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/shuffle(using:)-n7ld","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"metadata":{"symbolKind":"method","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]},"extendedModule":"IdentifiedCollections","title":"shuffle(using:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"shuffle","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Instance Method","role":"symbol","modules":[{"relatedModules":["IdentifiedCollections"],"name":"ComposableArchitecture"}],"externalID":"s:21IdentifiedCollections0A5ArrayV7shuffle5usingyqd__z_tSGRd__lF"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray","abstract":[{"type":"text","text":"An ordered collection of identifiable elements."}],"navigatorTitle":[{"kind":"identifier","text":"IdentifiedArray"}],"url":"\/documentation\/composablearchitecture\/identifiedarray","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedArray"}],"kind":"symbol","role":"symbol","title":"IdentifiedArray"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray/shuffle(using:)-n7ld":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/identifiedarray\/shuffle(using:)-n7ld","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shuffle"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"using"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}],"type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"ID","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]},"title":"shuffle(using:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/shuffle(using:)-n7ld","role":"symbol","abstract":[{"type":"text","text":"Shuffles the collection in place, using the given generator as a source for randomness."}]}}}