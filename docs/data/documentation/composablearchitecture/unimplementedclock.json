{"variants":[{"paths":["\/documentation\/composablearchitecture\/unimplementedclock"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"abstract":[{"text":"A clock that causes an XCTest failure when any of its endpoints are invoked.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock"},"kind":"symbol","sections":[],"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock\/Instant"],"title":"Structures"},{"title":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock\/init(_:name:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock\/init(name:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock\/init(name:now:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock\/minimumResolution","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock\/now"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock\/sleep(until:tolerance:)"],"title":"Instance Methods"},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock\/Clock-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock\/Clock-Implementations"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnimplementedClock"}],"modules":[{"name":"ComposableArchitecture"}],"role":"symbol","symbolKind":"struct","externalID":"s:6Clocks18UnimplementedClockV","title":"UnimplementedClock","navigatorTitle":[{"text":"UnimplementedClock","kind":"identifier"}],"platforms":[{"beta":false,"unavailable":false,"name":"iOS","deprecated":false,"introducedAt":"16.0"},{"introducedAt":"13.0","deprecated":false,"name":"macOS","beta":false,"unavailable":false},{"introducedAt":"16.0","unavailable":false,"beta":false,"deprecated":false,"name":"tvOS"},{"beta":false,"introducedAt":"9.0","deprecated":false,"name":"watchOS","unavailable":false}]},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/s8SendableP","doc:\/\/ComposableArchitecture\/12_Concurrency5ClockP"],"kind":"relationships","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UnimplementedClock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Duration","kind":"genericParameter"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Duration","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s16DurationProtocolP","text":"DurationProtocol"},{"kind":"text","text":", "},{"text":"Duration","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This test is useful when a clock dependency must be provided to test a feature, but you don’t"},{"text":" ","type":"text"},{"type":"text","text":"actually expect time-based asynchrony to occur in the particular execution flow you are"},{"type":"text","text":" "},{"text":"exercising.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"For example, consider the following model that encapsulates the behavior of being able to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"increment and decrement a count, as well as starting and stopping a timer that increments"},{"text":" ","type":"text"},{"type":"text","text":"the counter every second:"}]},{"type":"codeListing","syntax":"swift","code":["@MainActor","class FeatureModel: ObservableObject {","  @Published var count = 0","  let clock: any Clock<Duration>","  var timerTask: Task<Void, Error>?","","  init(clock: some Clock<Duration>) {","    self.clock = clock","  }","  func incrementButtonTapped() {","    self.count += 1","  }","  func decrementButtonTapped() {","    self.count -= 1","  }","  func startTimerButtonTapped() {","    self.timerTask = Task {","      for await _ in self.clock.timer(interval: .seconds(5)) {","        self.count += 1","      }","    }","  }","  func stopTimerButtonTapped() {","    self.timerTask?.cancel()","    self.timerTask = nil","  }","}"]},{"inlineContent":[{"type":"text","text":"If we test the flow of the user incrementing and decrementing the count, there is no need for"},{"text":" ","type":"text"},{"text":"the clock. We don’t expect any time-based asynchrony to occur. To make this clear, we can","type":"text"},{"text":" ","type":"text"},{"text":"use an ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock","type":"reference","isActive":true},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["func testIncrementDecrement() {","  let model = FeatureModel(clock: .unimplemented)","","  XCTAssertEqual(model.count, 0)","  self.model.incrementButtonTapped()","  XCTAssertEqual(model.count, 1)","  self.model.decrementButtonTapped()","  XCTAssertEqual(model.count, 0)","}"]},{"inlineContent":[{"type":"text","text":"If this test passes it definitively proves that the clock is not used at all in the user flow"},{"text":" ","type":"text"},{"type":"text","text":"being tested, making this test stronger. If in the future the increment and decrement endpoints"},{"type":"text","text":" "},{"text":"start making use of time-based asynchrony using the clock, we will be instantly notified by test","type":"text"},{"type":"text","text":" "},{"type":"text","text":"failures. This will help us find the tests that should be updated to assert on the new behavior"},{"type":"text","text":" "},{"type":"text","text":"in the feature."}],"type":"paragraph"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedClock/Clock-Implementations":{"type":"topic","abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/unimplementedclock\/clock-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock\/Clock-Implementations","title":"Clock Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedClock/minimumResolution":{"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/unimplementedclock\/minimumresolution","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimumResolution"},{"kind":"text","text":": "},{"text":"Duration","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock\/minimumResolution","title":"minimumResolution","type":"topic"},"doc://ComposableArchitecture/12_Concurrency5ClockP":{"identifier":"doc:\/\/ComposableArchitecture\/12_Concurrency5ClockP","type":"unresolvable","title":"_Concurrency.Clock"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedClock/init(_:name:)":{"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/unimplementedclock\/init(_:name:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock\/init(_:name:)","title":"init(_:name:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedClock/Instant":{"role":"symbol","navigatorTitle":[{"text":"Instant","kind":"identifier"}],"abstract":[],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock\/Instant","url":"\/documentation\/composablearchitecture\/unimplementedclock\/instant","title":"UnimplementedClock.Instant","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Instant","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedClock/init(name:now:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"now","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Clocks14ImmediateClockC","text":"ImmediateClock","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:6Clocks14ImmediateClockC7InstantV","text":"Instant"},{"text":")","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock\/init(name:now:)","title":"init(name:now:)","role":"symbol","url":"\/documentation\/composablearchitecture\/unimplementedclock\/init(name:now:)","abstract":[],"type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedClock/init(name:)":{"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","abstract":[],"title":"init(name:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Duration"},{"type":"text","text":" is "},{"code":"Duration","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock\/init(name:)","url":"\/documentation\/composablearchitecture\/unimplementedclock\/init(name:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedClock/now":{"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/unimplementedclock\/now","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"now","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6Clocks18UnimplementedClockV","text":"UnimplementedClock"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":">."},{"preciseIdentifier":"s:6Clocks18UnimplementedClockV7InstantV","kind":"typeIdentifier","text":"Instant"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock\/now","title":"now","type":"topic"},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedClock":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock","kind":"symbol","navigatorTitle":[{"text":"UnimplementedClock","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/unimplementedclock","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnimplementedClock"}],"abstract":[{"text":"A clock that causes an XCTest failure when any of its endpoints are invoked.","type":"text"}],"type":"topic","role":"symbol","title":"UnimplementedClock"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedClock/sleep(until:tolerance:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sleep","kind":"identifier"},{"kind":"text","text":"("},{"text":"until","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6Clocks18UnimplementedClockV","kind":"typeIdentifier","text":"UnimplementedClock"},{"text":"<","kind":"text"},{"text":"Duration","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Clocks18UnimplementedClockV7InstantV","text":"Instant"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"tolerance"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Duration"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedClock\/sleep(until:tolerance:)","title":"sleep(until:tolerance:)","role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/unimplementedclock\/sleep(until:tolerance:)","type":"topic","abstract":[]}}}