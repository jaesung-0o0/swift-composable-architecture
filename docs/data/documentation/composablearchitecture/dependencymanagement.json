{"primaryContentSections":[{"content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"text":"Dependencies in an application are the types and functions that need to interact with outside","type":"text"},{"type":"text","text":" "},{"text":"systems that you do not control. Classic examples of this are API clients that make network requests","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to servers, but also seemingly innocuous things such as "},{"type":"codeVoice","code":"UUID"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" initializers, and even"},{"type":"text","text":" "},{"text":"clocks, can be thought of as dependencies.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"By controlling the dependencies our features need to do their job we gain the ability to completely"},{"type":"text","text":" "},{"type":"text","text":"alter the execution context a feature runs in. This means in tests and Xcode previews you can"},{"text":" ","type":"text"},{"type":"text","text":"provide a mock version of an API client that immediately returns some stubbed data rather than"},{"type":"text","text":" "},{"type":"text","text":"making a live network request to a server."}],"type":"paragraph"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The dependency management system in the Composable Architecture is driven off of our"},{"type":"text","text":" "},{"identifier":"http:\/\/github.com\/pointfreeco\/swift-dependencies","isActive":true,"type":"reference"},{"type":"text","text":" library. That repository has extensive"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/pointfreeco.github.io\/swift-dependencies\/main\/documentation\/dependencies\/","isActive":true},{"text":" and articles, and we highly recommend you familiarize yourself","type":"text"},{"type":"text","text":" "},{"text":"with all of that content to best leverage dependencies.","type":"text"}]}],"type":"aside","name":"Note"},{"type":"heading","anchor":"Overriding-dependencies","text":"Overriding dependencies","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is possible to change the dependencies for just one particular reducer inside a larger composed"},{"type":"text","text":" "},{"text":"reducer. This can be handy when running a feature in a more controlled environment where it may not","type":"text"},{"type":"text","text":" "},{"type":"text","text":"be appropriate to communicate with the outside world."}]},{"type":"paragraph","inlineContent":[{"text":"For example, suppose you want to teach users how to use your feature through an onboarding","type":"text"},{"type":"text","text":" "},{"text":"experience. In such an experience it may not be appropriate for the user’s actions to cause","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"data to be written to disk, or user defaults to be written, or any number of things. It would be"},{"text":" ","type":"text"},{"type":"text","text":"better to use mock versions of those dependencies so that the user can interact with your feature"},{"text":" ","type":"text"},{"type":"text","text":"in a fully controlled environment."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To do this you can use the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:_:)","isActive":true,"type":"reference"},{"type":"text","text":" method to override a reducer’s"},{"text":" ","type":"text"},{"type":"text","text":"dependency with another value:"}]},{"code":["struct Onboarding: Reducer {","  var body: some Reducer<State, Action> {","    Reduce { state, action in ","      \/\/ Additional onboarding logic","    }","    Feature()","      .dependency(\\.userDefaults, .mock)","      .dependency(\\.database, .mock)","  }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"This will cause the "},{"code":"Feature","type":"codeVoice"},{"text":" reducer to use a mock user defaults and database dependency, as well","type":"text"},{"type":"text","text":" "},{"text":"as any reducer ","type":"text"},{"type":"codeVoice","code":"Feature"},{"type":"text","text":" uses under the hood, "},{"type":"emphasis","inlineContent":[{"type":"text","text":"and"}]},{"text":" any effects produced by ","type":"text"},{"type":"codeVoice","code":"Feature"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"article","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement"},"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"ComposableArchitecture"}],"title":"Dependencies"},"abstract":[{"text":"Learn how to register dependencies with the library so that they can be immediately accessible from","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"any reducer."}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Testing","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance"],"title":"Essentials","generated":true}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/dependencymanagement"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/dependency(_:_:)":{"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/dependency(_:_:)","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"dependency","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"dependency(_:_:)","kind":"symbol","abstract":[{"type":"text","text":"Sets the dependency value of the specified key path to the given value."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"type":"topic","title":"Navigation","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/navigation","kind":"article","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"type":"text","text":" "},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"},"doc://ComposableArchitecture/tutorials/MeetComposableArchitecture":{"kind":"overview","type":"topic","url":"\/tutorials\/meetcomposablearchitecture","role":"overview","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","title":"Meet the Composable Architecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a"},{"text":" ","type":"text"},{"type":"text","text":"consistent and understandable way, with composition, testing, and ergonomics in mind. It can be"},{"type":"text","text":" "},{"text":"used in SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/GettingStarted":{"kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/gettingstarted","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","title":"Getting started","abstract":[{"type":"text","text":"Learn how to integrate the Composable Architecture into your project and write your first"},{"text":" ","type":"text"},{"type":"text","text":"application."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Testing":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Testing","kind":"article","type":"topic","abstract":[{"text":"Learn how to write comprehensive and exhaustive tests for your features built in the Composable","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Architecture."}],"title":"Testing","role":"article","url":"\/documentation\/composablearchitecture\/testing"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance":{"title":"Performance","type":"topic","abstract":[{"text":"Learn how to improve the performance of features built in the Composable Architecture.","type":"text"}],"url":"\/documentation\/composablearchitecture\/performance","role":"article","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance"},"https://pointfreeco.github.io/swift-dependencies/main/documentation/dependencies/":{"identifier":"https:\/\/pointfreeco.github.io\/swift-dependencies\/main\/documentation\/dependencies\/","url":"https:\/\/pointfreeco.github.io\/swift-dependencies\/main\/documentation\/dependencies\/","title":"documentation","type":"link","titleInlineContent":[{"text":"documentation","type":"text"}]},"http://github.com/pointfreeco/swift-dependencies":{"type":"link","identifier":"http:\/\/github.com\/pointfreeco\/swift-dependencies","url":"http:\/\/github.com\/pointfreeco\/swift-dependencies","title":"Dependencies","titleInlineContent":[{"type":"text","text":"Dependencies"}]}}}