{"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"]]},"metadata":{"extendedModule":"ComposableArchitecture","externalID":"s:22ComposableArchitecture6EffectV8debounce2id3for9scheduler7optionsACyxGqd___17SchedulerTimeType_6StrideQYd_0_qd_0_0I7OptionsQyd_0_SgtSHRd__7Combine0I0Rd_0_r0_lF","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","title":"debounce(id:for:scheduler:options:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"debounce","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ID","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"kind":"text","text":"."},{"text":"Stride","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"scheduler"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerOptions"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/effect\/debounce(id:for:scheduler:options:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/debounce(id:for:scheduler:options:)"},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Turns an effect into one that can be debounced.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"debounce","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ID"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"for"},{"kind":"text","text":" "},{"text":"dueTime","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"text":".","kind":"text"},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Stride"},{"text":", ","kind":"text"},{"text":"scheduler","kind":"externalParam"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SchedulerOptions"},{"text":"? = nil) -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture6EffectV","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","text":"Effect","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"ID","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"text":"Scheduler","kind":"typeIdentifier","preciseIdentifier":"s:7Combine9SchedulerP"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The effect’s identifier."}]}],"name":"id"},{"name":"dueTime","content":[{"type":"paragraph","inlineContent":[{"text":"The duration you want to debounce for.","type":"text"}]}]},{"name":"scheduler","content":[{"inlineContent":[{"type":"text","text":"The scheduler you want to deliver the debounced output to."}],"type":"paragraph"}]},{"name":"options","content":[{"type":"paragraph","inlineContent":[{"text":"Scheduler options that customize the effect’s delivery of elements.","type":"text"}]}]}]},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"An effect that publishes events only after a specified time elapses."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"To turn an effect into a debounce-able one you must provide an identifier, which is used to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"determine which in-flight effect should be canceled in order to start a new effect. Any"},{"type":"text","text":" "},{"type":"text","text":"hashable value can be used for the identifier, such as a string, but you can add a bit of"},{"text":" ","type":"text"},{"text":"protection against typos by defining a new type that conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":", such as an enum:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["case let .textChanged(text):","  enum CancelID { case search }","","  return .run { send in","    await send(","      .searchResponse(","        TaskResult { await self.apiClient.search(text) }","      )","    )","  }","  .debounce(id: CancelID.search, for: 0.5, scheduler: self.mainQueue)"],"type":"codeListing"}]}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","kind":"symbol","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}],"title":"Reducer","role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","kind":"symbol","abstract":[{"type":"text","text":"현재 앱의 상태를 주어진 액션을 가지고 어떻게 다음 상태로 변경할 지를 묘사하는 프로토콜. 또한 나중에 Store에 의해 실행되어야 할 "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"가 무엇인지 묘사하고 있습니다.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect/debounce(id:for:scheduler:options:)":{"url":"\/documentation\/composablearchitecture\/effect\/debounce(id:for:scheduler:options:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"debounce","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ID","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Stride"},{"text":", ","kind":"text"},{"text":"scheduler","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"text":"SchedulerOptions","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">"}],"title":"debounce(id:for:scheduler:options:)","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/debounce(id:for:scheduler:options:)","abstract":[{"type":"text","text":"Turns an effect into one that can be debounced."}],"role":"symbol"}}}