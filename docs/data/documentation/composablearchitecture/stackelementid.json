{"kind":"symbol","metadata":{"modules":[{"name":"ComposableArchitecture"}],"role":"symbol","title":"StackElementID","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"StackElementID","kind":"identifier"}],"externalID":"s:22ComposableArchitecture14StackElementIDV","navigatorTitle":[{"kind":"identifier","text":"StackElementID"}],"symbolKind":"struct"},"sections":[],"seeAlsoSections":[{"generated":true,"title":"Stack-based navigation","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:line:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StackElementID","kind":"identifier"}],"languages":["swift"],"platforms":["iOS"]}]},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"},{"type":"text","text":" type creates instances of this identifier when new elements are added to"},{"type":"text","text":" "},{"type":"text","text":"the stack. This makes it possible to easily look up specific elements in the stack without"},{"text":" ","type":"text"},{"text":"resorting to positional indices, which can be error prone, especially when dealing with async","type":"text"},{"type":"text","text":" "},{"text":"effects.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In production environments (e.g. in Xcode previews, simulators and on devices) the identifier"},{"type":"text","text":" "},{"type":"text","text":"is backed by a randomly generated UUID, but in tests a deterministic, generational ID is used."},{"text":" ","type":"text"},{"type":"text","text":"This allows you to predict how IDs will be created and allows you to write tests for how"},{"type":"text","text":" "},{"text":"features behave in the stack.","type":"text"}]},{"syntax":"swift","code":["func testBasics() {","  var path = StackState<Int>()","  path.append(42)","  XCTAssertEqual(path[id: 0], 42)","  path.append(1729)","  XCTAssertEqual(path[id: 1], 1729)","","  path.removeAll()","  path.append(-1)","  XCTAssertEqual(path[id: 2], -1)","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Notice that after removing all elements and appending a new element, the ID generated was 2 and"},{"text":" ","type":"text"},{"type":"text","text":"did not go back to 0. This is because in tests the IDs are "},{"inlineContent":[{"text":"generational","type":"text"}],"type":"emphasis"},{"type":"text","text":", which means they"},{"text":" ","type":"text"},{"text":"keep counting up, even if you remove elements from the stack.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpStringConvertible","doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/s27ExpressibleByIntegerLiteralP","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"],"title":"Conforms To","kind":"relationships"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/stackelementid"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"]]},"abstract":[{"type":"text","text":"An opaque type that identifies an element of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"},{"text":".","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDebugStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDumpStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/ExpressibleByIntegerLiteral-Implementations"],"title":"Default Implementations","generated":true}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/ExpressibleByIntegerLiteral-Implementations":{"title":"ExpressibleByIntegerLiteral Implementations","url":"\/documentation\/composablearchitecture\/stackelementid\/expressiblebyintegerliteral-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/ExpressibleByIntegerLiteral-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/customDump(_:to:name:indent:maxDepth:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"customDump","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"TargetStream"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"TargetStream","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"indent"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxDepth","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/customDump(_:to:name:indent:maxDepth:)","abstract":[{"text":"Dumps the given valueâ€™s contents using its mirror to the specified output stream.","type":"text"}],"role":"symbol","title":"customDump(_:to:name:indent:maxDepth:)","url":"\/documentation\/composablearchitecture\/customdump(_:to:name:indent:maxdepth:)"},"doc://ComposableArchitecture/SH":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SH","title":"Swift.Hashable"},"doc://ComposableArchitecture/s27ExpressibleByIntegerLiteralP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s27ExpressibleByIntegerLiteralP","title":"Swift.ExpressibleByIntegerLiteral"},"doc://ComposableArchitecture/s28CustomDebugStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StackAction"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/stackaction","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","navigatorTitle":[{"kind":"identifier","text":"StackAction"}],"title":"StackAction","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a navigation stack."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"abstract":[{"text":"A list of data representing the content of a navigation stack.","type":"text"}],"navigatorTitle":[{"text":"StackState","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/stackstate","title":"StackState","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","role":"symbol"},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CustomDumpStringConvertible":{"role":"symbol","abstract":[{"type":"text","text":"A type with a customized textual representation for "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/customDump(_:to:name:indent:maxDepth:)","isActive":true},{"type":"text","text":" "},{"type":"text","text":"and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/diff(_:_:format:)","type":"reference","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"text":"CustomDumpStringConvertible","kind":"identifier"}],"title":"CustomDumpStringConvertible","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpStringConvertible","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/customdumpstringconvertible","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomDumpStringConvertible"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/CustomDebugStringConvertible-Implementations":{"type":"topic","role":"collectionGroup","title":"CustomDebugStringConvertible Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDebugStringConvertible-Implementations","kind":"article","abstract":[],"url":"\/documentation\/composablearchitecture\/stackelementid\/customdebugstringconvertible-implementations"},"doc://ComposableArchitecture/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SQ"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/Equatable-Implementations":{"title":"Equatable Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/Equatable-Implementations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/stackelementid\/equatable-implementations","abstract":[],"kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID":{"navigatorTitle":[{"text":"StackElementID","kind":"identifier"}],"title":"StackElementID","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StackElementID"}],"url":"\/documentation\/composablearchitecture\/stackelementid","abstract":[{"type":"text","text":"An opaque type that identifies an element of "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true},{"text":".","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/diff(_:_:format:)":{"abstract":[{"text":"Detects differences between two given values by comparing their mirrors and optionally returns","type":"text"},{"text":" ","type":"text"},{"text":"a formatted string describing it.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/diff(_:_:format:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"diff"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"format","kind":"externalParam"},{"kind":"text","text":": "},{"text":"DiffFormat","kind":"typeIdentifier","preciseIdentifier":"s:10CustomDump10DiffFormatV"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"title":"diff(_:_:format:)","url":"\/documentation\/composablearchitecture\/diff(_:_:format:)","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:destination:fileID:line:)":{"type":"topic","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on elements of a navigation stack in"},{"text":" ","type":"text"},{"type":"text","text":"parent state."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"DestinationAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Destination","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StackState","preciseIdentifier":"s:22ComposableArchitecture10StackStateV"},{"text":"<","kind":"text"},{"text":"DestinationState","preciseIdentifier":"s:22ComposableArchitecture7ReducerPAAE7forEach_6action11destination6fileID4lineAA06_StackC0Vyxqd_1_Gs15WritableKeyPathCy5StateQzAA0kO0Vyqd__GG_9CasePaths0pN0Vy6ActionQzAA0kR0Oyqd__qd_0_GGqd_1_yXEs12StaticStringVSutANQyd_1_Rsd__AWQyd_1_Rsd_0_AaBRd_1_r1_lF011DestinationO0L_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"kind":"text","text":", "},{"preciseIdentifier":"s:22ComposableArchitecture11StackActionO","text":"StackAction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DestinationState","preciseIdentifier":"s:22ComposableArchitecture7ReducerPAAE7forEach_6action11destination6fileID4lineAA06_StackC0Vyxqd_1_Gs15WritableKeyPathCy5StateQzAA0kO0Vyqd__GG_9CasePaths0pN0Vy6ActionQzAA0kR0Oyqd__qd_0_GGqd_1_yXEs12StaticStringVSutANQyd_1_Rsd__AWQyd_1_Rsd_0_AaBRd_1_r1_lF011DestinationO0L_qd__mfp"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerPAAE7forEach_6action11destination6fileID4lineAA06_StackC0Vyxqd_1_Gs15WritableKeyPathCy5StateQzAA0kO0Vyqd__GG_9CasePaths0pN0Vy6ActionQzAA0kR0Oyqd__qd_0_GGqd_1_yXEs12StaticStringVSutANQyd_1_Rsd__AWQyd_1_Rsd_0_AaBRd_1_r1_lF011DestinationR0L_qd_0_mfp","kind":"typeIdentifier","text":"DestinationAction"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"destination"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Destination","preciseIdentifier":"s:22ComposableArchitecture7ReducerPAAE7forEach_6action11destination6fileID4lineAA06_StackC0Vyxqd_1_Gs15WritableKeyPathCy5StateQzAA0kO0Vyqd__GG_9CasePaths0pN0Vy6ActionQzAA0kR0Oyqd__qd_0_GGqd_1_yXEs12StaticStringVSutANQyd_1_Rsd__AWQyd_1_Rsd_0_AaBRd_1_r1_lF11DestinationL_qd_1_mfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") -> ","kind":"text"},{"text":"_StackReducer","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture13_StackReducerV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerPAAE7forEach_6action11destination6fileID4lineAA06_StackC0Vyxqd_1_Gs15WritableKeyPathCy5StateQzAA0kO0Vyqd__GG_9CasePaths0pN0Vy6ActionQzAA0kR0Oyqd__qd_0_GGqd_1_yXEs12StaticStringVSutANQyd_1_Rsd__AWQyd_1_Rsd_0_AaBRd_1_r1_lF11DestinationL_qd_1_mfp","kind":"typeIdentifier","text":"Destination"},{"text":">","kind":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:destination:fileid:line:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:line:)","title":"forEach(_:action:destination:fileID:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/CustomDumpStringConvertible-Implementations":{"url":"\/documentation\/composablearchitecture\/stackelementid\/customdumpstringconvertible-implementations","role":"collectionGroup","title":"CustomDumpStringConvertible Implementations","abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDumpStringConvertible-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"type":"topic","abstract":[{"type":"text","text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to"},{"text":" ","type":"text"},{"type":"text","text":"model your domains, how to integrate features, how to test your features, and more."}],"kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/stackbasednavigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","title":"Stack-based navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"type":"topic","kind":"article","title":"Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DismissEffect"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/dismisseffect","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect","navigatorTitle":[{"kind":"identifier","text":"DismissEffect"}],"title":"DismissEffect","abstract":[{"type":"text","text":"An effect that dismisses the current presentation."}]}}}