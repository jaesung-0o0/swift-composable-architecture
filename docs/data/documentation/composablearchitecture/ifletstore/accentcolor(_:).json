{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/accentColor(_:)","interfaceLanguage":"swift"},"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"accentColor","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Color","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI5ColorV"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"roleHeading":"Instance Method","symbolKind":"method","extendedModule":"SwiftUI","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUI"]}],"externalID":"s:7SwiftUI4ViewPAAE11accentColoryQrAA0E0VSgF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","title":"accentColor(_:)","platforms":[{"deprecated":false,"unavailable":false,"name":"iOS","beta":false,"deprecatedAt":"100000.0","introducedAt":"13.0","message":"Use the asset catalog's accent color or View.tint(_:) instead."},{"message":"Use the asset catalog's accent color or View.tint(_:) instead.","deprecated":false,"beta":false,"deprecatedAt":"100000.0","name":"macOS","introducedAt":"10.15","unavailable":false},{"introducedAt":"13.0","name":"tvOS","deprecatedAt":"100000.0","message":"Use the asset catalog's accent color or View.tint(_:) instead.","unavailable":false,"deprecated":false,"beta":false},{"introducedAt":"6.0","beta":false,"unavailable":false,"deprecated":false,"message":"Use the asset catalog's accent color or View.tint(_:) instead.","name":"watchOS","deprecatedAt":"100000.0"},{"unavailable":false,"name":"visionOS","deprecated":false,"beta":false,"deprecatedAt":"100000.0","message":"Use the asset catalog's accent color or View.tint(_:) instead.","introducedAt":"1.0"}]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.accentColor(_:)"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/accentcolor(_:)"]}],"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"accentColor"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"accentColor","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI5ColorV","text":"Color"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}]}],"kind":"declarations"}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use the asset catalog's accent color or View.tint(_:) instead."}],"type":"paragraph"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","type":"topic","title":"View Implementations","abstract":[],"kind":"article","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/accentColor(_:)":{"url":"\/documentation\/composablearchitecture\/ifletstore\/accentcolor(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/accentColor(_:)","kind":"symbol","abstract":[],"deprecated":true,"title":"accentColor(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"accentColor","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI5ColorV","text":"Color"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"role":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","type":"topic","title":"IfLetStore","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore"}}}