{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/accessibilityRotor(_:textRanges:)-3n51v"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"accessibilityRotor","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7SwiftUI24AccessibilitySystemRotorV","kind":"typeIdentifier","text":"AccessibilitySystemRotor"},{"kind":"text","text":", "},{"kind":"externalParam","text":"textRanges"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":".","kind":"text"},{"preciseIdentifier":"s:SS5IndexV","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":">]) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"platforms":[{"introducedAt":"15.0","beta":false,"name":"iOS","deprecated":false,"unavailable":false},{"name":"macOS","introducedAt":"12.0","beta":false,"deprecated":false,"unavailable":false},{"beta":false,"name":"tvOS","deprecated":false,"unavailable":false,"introducedAt":"15.0"},{"introducedAt":"8.0","unavailable":false,"name":"watchOS","deprecated":false,"beta":false}],"extendedModule":"SwiftUI","role":"symbol","title":"accessibilityRotor(_:textRanges:)","modules":[{"relatedModules":["SwiftUI"],"name":"ComposableArchitecture"}],"externalID":"s:7SwiftUI4ViewPAAE18accessibilityRotor_10textRangesQrAA019AccessibilitySystemE0V_SaySnySS5IndexVGGtF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","roleHeading":"Instance Method","symbolKind":"method"},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.accessibilityRotor(_:textRanges:)"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"accessibilityRotor"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"systemRotor","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"AccessibilitySystemRotor","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI24AccessibilitySystemRotorV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"textRanges"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:SS5IndexV","kind":"typeIdentifier","text":"Index"},{"kind":"text","text":">]) -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"text":"\n","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/accessibilityrotor(_:textranges:)-3n51v"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/ifletstore","title":"IfLetStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","kind":"article","title":"View Implementations","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/accessibilityRotor(_:textRanges:)-3n51v":{"type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/accessibilityrotor(_:textranges:)-3n51v","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/accessibilityRotor(_:textRanges:)-3n51v","role":"symbol","kind":"symbol","title":"accessibilityRotor(_:textRanges:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"accessibilityRotor"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI24AccessibilitySystemRotorV","text":"AccessibilitySystemRotor"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"textRanges"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:Sn","kind":"typeIdentifier","text":"Range"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS5IndexV","text":"Index"},{"kind":"text","text":">]) -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"abstract":[]}}}