{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/offset(_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/offset(_:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"kind":"symbol","metadata":{"symbolKind":"method","role":"symbol","modules":[{"relatedModules":["SwiftUI"],"name":"ComposableArchitecture"}],"roleHeading":"Instance Method","extendedModule":"SwiftUI","externalID":"s:7SwiftUI4ViewPAAE6offsetyQrSo6CGSizeVF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","title":"offset(_:)","platforms":[{"beta":false,"introducedAt":"13.0","unavailable":false,"name":"iOS","deprecated":false},{"name":"macOS","unavailable":false,"beta":false,"deprecated":false,"introducedAt":"10.15"},{"deprecated":false,"introducedAt":"13.0","unavailable":false,"name":"tvOS","beta":false},{"unavailable":false,"name":"watchOS","introducedAt":"6.0","beta":false,"deprecated":false}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"offset"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@S@CGSize","text":"CGSize","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"offset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"offset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@S@CGSize","text":"CGSize"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.offset(_:)","type":"codeVoice"},{"type":"text","text":"."}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/offset(_:)":{"title":"offset(_:)","abstract":[],"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"offset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"CGSize","kind":"typeIdentifier","preciseIdentifier":"c:@S@CGSize"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/offset(_:)","url":"\/documentation\/composablearchitecture\/ifletstore\/offset(_:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","type":"topic","title":"View Implementations","abstract":[],"kind":"article","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"role":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","type":"topic","title":"IfLetStore","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore"}}}