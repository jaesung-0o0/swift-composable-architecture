{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/oncommand(_:perform:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.onCommand(_:perform:)"},{"type":"text","text":"."}],"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/onCommand(_:perform:)","interfaceLanguage":"swift"},"metadata":{"platforms":[{"unavailable":false,"name":"macOS","deprecated":false,"beta":false,"introducedAt":"10.15"}],"role":"symbol","externalID":"s:7SwiftUI4ViewPAAE9onCommand_7performQr10ObjectiveC8SelectorV_yycSgtF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"onCommand","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Selector","preciseIdentifier":"s:10ObjectiveC8SelectorV"},{"text":", ","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")?) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"extendedModule":"SwiftUI","roleHeading":"Instance Method","symbolKind":"method","title":"onCommand(_:perform:)","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUI"]}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onCommand"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"selector","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10ObjectiveC8SelectorV","kind":"typeIdentifier","text":"Selector"},{"text":", ","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"action"},{"text":": (() -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"kind":"text","text":"\n"}],"platforms":["macOS"]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/onCommand(_:perform:)":{"abstract":[],"kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/onCommand(_:perform:)","title":"onCommand(_:perform:)","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/oncommand(_:perform:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onCommand"},{"text":"(","kind":"text"},{"text":"Selector","kind":"typeIdentifier","preciseIdentifier":"s:10ObjectiveC8SelectorV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"perform"},{"text":": (() -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")?) -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","type":"topic","title":"View Implementations","abstract":[],"kind":"article","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"role":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","type":"topic","title":"IfLetStore","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore"}}}