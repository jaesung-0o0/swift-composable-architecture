{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":", "},{"text":"IfContent","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"store","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":">, "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","text":"PresentationAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"text":"<","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"text":"state","kind":"externalParam"},{"kind":"text","text":" "},{"text":"toState","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"State"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"action"},{"kind":"text","text":" "},{"kind":"internalParam","text":"fromAction"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"DestinationAction"},{"text":", ","kind":"text"},{"text":"@","kind":"attribute"},{"kind":"attribute","text":"ViewBuilder","preciseIdentifier":"s:7SwiftUI11ViewBuilderV"},{"kind":"text","text":" "},{"text":"then","kind":"externalParam"},{"kind":"text","text":" "},{"text":"ifContent","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"Store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":">) -> ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Content","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"IfContent"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A store of optional state."}]}],"name":"store"},{"name":"toState","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that attempts to extract state for the “if” branch from the destination"},{"type":"text","text":" "},{"type":"text","text":"state."}]}]},{"name":"fromAction","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that embeds actions for the “if” branch in destination actions.","type":"text"}]}]},{"name":"ifContent","content":[{"inlineContent":[{"type":"text","text":"A function that is given a store of non-optional state and returns a view that"},{"type":"text","text":" "},{"text":"is visible only when the optional state is non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" and state can be extracted from the","type":"text"},{"type":"text","text":" "},{"text":"destination state.","type":"text"}],"type":"paragraph"}]}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"]]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"modules":[{"name":"ComposableArchitecture"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"DestinationAction","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"IfContent","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"PresentationState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","kind":"typeIdentifier","text":"PresentationAction"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DestinationAction"},{"text":">>, ","kind":"text"},{"text":"state","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"DestinationState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"action","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"text":"DestinationAction","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:state:action:then:)","symbolKind":"init","role":"symbol","roleHeading":"Initializer","externalID":"s:22ComposableArchitecture10IfLetStoreV_5state6action4thenACyxq_qd_1_SgGAA0E0CyAA17PresentationStateVyqd__GAA0I6ActionOyqd_0_GG_xSgqd__cqd_0_q_cqd_1_AJyxq_GctcAGRs0_7SwiftUI4ViewRd_1_r1_lufc"},"abstract":[{"type":"text","text":"Initializes an "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","isActive":true},{"text":" view that computes content depending on if a store of","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","isActive":true},{"text":" is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or non-"},{"type":"codeVoice","code":"nil"},{"text":" and state can further","type":"text"},{"type":"text","text":" "},{"type":"text","text":"be extracted from the destination state, "},{"inlineContent":[{"type":"text","text":"e.g."}],"type":"emphasis"},{"type":"text","text":" it matches a particular case of an enum."}],"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/init(_:state:action:then:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/init(_:state:action:then:)":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:state:action:then:)","title":"init(_:state:action:then:)","url":"\/documentation\/composablearchitecture\/ifletstore\/init(_:state:action:then:)","role":"symbol","abstract":[{"type":"text","text":"Initializes an "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","type":"reference"},{"type":"text","text":" view that computes content depending on if a store of"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","isActive":true,"type":"reference"},{"type":"text","text":" is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" or non-"},{"type":"codeVoice","code":"nil"},{"text":" and state can further","type":"text"},{"type":"text","text":" "},{"text":"be extracted from the destination state, ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"e.g.","type":"text"}]},{"type":"text","text":" it matches a particular case of an enum."}],"fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":", "},{"text":"IfContent","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DestinationAction"},{"kind":"text","text":">>, "},{"text":"state","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"State","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"DestinationAction"},{"kind":"text","text":", "},{"kind":"externalParam","text":"then"},{"text":": (","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">) -> "},{"text":"IfContent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"role":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","type":"topic","title":"IfLetStore","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"title":"Store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"text":"around to views that need to interact with the application.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Store","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"PresentationAction","kind":"identifier"}],"title":"PresentationAction","role":"symbol","url":"\/documentation\/composablearchitecture\/presentationaction","kind":"symbol","abstract":[{"text":"A wrapper type for actions that can be presented.","type":"text"}],"navigatorTitle":[{"text":"PresentationAction","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationState","kind":"identifier"}],"title":"PresentationState","role":"symbol","url":"\/documentation\/composablearchitecture\/presentationstate","kind":"symbol","abstract":[{"text":"A property wrapper for state that can be presented.","type":"text"}],"navigatorTitle":[{"text":"PresentationState","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"}}}