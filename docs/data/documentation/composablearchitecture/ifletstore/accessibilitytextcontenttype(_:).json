{"metadata":{"platforms":[{"introducedAt":"15.0","name":"iOS","deprecated":false,"beta":false,"unavailable":false},{"name":"macOS","unavailable":false,"beta":false,"deprecated":false,"introducedAt":"12.0"},{"beta":false,"name":"tvOS","deprecated":false,"introducedAt":"15.0","unavailable":false},{"unavailable":false,"name":"watchOS","introducedAt":"8.0","beta":false,"deprecated":false}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"accessibilityTextContentType"},{"text":"(","kind":"text"},{"text":"AccessibilityTextContentType","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI28AccessibilityTextContentTypeV"},{"kind":"text","text":") -> "},{"text":"ModifiedContent","preciseIdentifier":"s:7SwiftUI15ModifiedContentV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI31AccessibilityAttachmentModifierV","text":"AccessibilityAttachmentModifier"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","symbolKind":"method","title":"accessibilityTextContentType(_:)","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUI"]}],"role":"symbol","extendedModule":"SwiftUI","externalID":"s:7SwiftUI4ViewPAAE28accessibilityTextContentTypeyAA08ModifiedF0VyxAA31AccessibilityAttachmentModifierVGAA0iefG0VF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV"},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.accessibilityTextContentType(_:)"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"accessibilityTextContentType"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI28AccessibilityTextContentTypeV","text":"AccessibilityTextContentType","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI15ModifiedContentV","text":"ModifiedContent"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI31AccessibilityAttachmentModifierV","kind":"typeIdentifier","text":"AccessibilityAttachmentModifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/accessibilityTextContentType(_:)"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/accessibilitytextcontenttype(_:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/accessibilityTextContentType(_:)":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/accessibilityTextContentType(_:)","url":"\/documentation\/composablearchitecture\/ifletstore\/accessibilitytextcontenttype(_:)","title":"accessibilityTextContentType(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"accessibilityTextContentType"},{"text":"(","kind":"text"},{"text":"AccessibilityTextContentType","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI28AccessibilityTextContentTypeV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ModifiedContent","preciseIdentifier":"s:7SwiftUI15ModifiedContentV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"preciseIdentifier":"s:7SwiftUI31AccessibilityAttachmentModifierV","kind":"typeIdentifier","text":"AccessibilityAttachmentModifier"},{"text":">","kind":"text"}],"abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","type":"topic","title":"View Implementations","abstract":[],"kind":"article","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"role":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","type":"topic","title":"IfLetStore","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore"}}}