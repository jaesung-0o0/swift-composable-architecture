{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.navigationSplitViewColumnWidth(min:ideal:max:)","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/navigationSplitViewColumnWidth(min:ideal:max:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUI"]}],"platforms":[{"deprecated":false,"name":"iOS","introducedAt":"16.0","unavailable":false,"beta":false},{"introducedAt":"13.0","name":"macOS","beta":false,"deprecated":false,"unavailable":false},{"name":"tvOS","introducedAt":"16.0","deprecated":false,"unavailable":false,"beta":false},{"beta":false,"deprecated":false,"name":"watchOS","unavailable":false,"introducedAt":"9.0"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"navigationSplitViewColumnWidth","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"min"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"ideal"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier","text":"CGFloat"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"max"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat"},{"kind":"text","text":"?) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"symbolKind":"method","role":"symbol","title":"navigationSplitViewColumnWidth(min:ideal:max:)","roleHeading":"Instance Method","externalID":"s:7SwiftUI4ViewPAAE015navigationSplitC11ColumnWidth3min5ideal3maxQr14CoreFoundation7CGFloatVSg_AjKtF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","extendedModule":"SwiftUI"},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"navigationSplitViewColumnWidth","kind":"identifier"},{"text":"(","kind":"text"},{"text":"min","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CGFloat","kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"text":"? = nil, ","kind":"text"},{"kind":"externalParam","text":"ideal"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat"},{"kind":"text","text":", "},{"text":"max","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CGFloat","kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":"? = nil) -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"kind":"text","text":"\n"}]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/navigationsplitviewcolumnwidth(min:ideal:max:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"role":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","type":"topic","title":"IfLetStore","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","type":"topic","title":"View Implementations","abstract":[],"kind":"article","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/navigationSplitViewColumnWidth(min:ideal:max:)":{"url":"\/documentation\/composablearchitecture\/ifletstore\/navigationsplitviewcolumnwidth(min:ideal:max:)","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/navigationSplitViewColumnWidth(min:ideal:max:)","abstract":[],"kind":"symbol","title":"navigationSplitViewColumnWidth(min:ideal:max:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"navigationSplitViewColumnWidth"},{"text":"(","kind":"text"},{"text":"min","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat"},{"text":"?, ","kind":"text"},{"text":"ideal","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"max"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic"}}}