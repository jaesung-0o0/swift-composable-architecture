{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"accessibilityHeading","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"level"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI25AccessibilityHeadingLevelO","text":"AccessibilityHeadingLevel"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"ModifiedContent","preciseIdentifier":"s:7SwiftUI15ModifiedContentV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI31AccessibilityAttachmentModifierV","text":"AccessibilityAttachmentModifier"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/accessibilityheading(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.accessibilityHeading(_:)"},{"text":".","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/accessibilityHeading(_:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUI"]}],"externalID":"s:7SwiftUI4ViewPAAE20accessibilityHeadingyAA15ModifiedContentVyxAA31AccessibilityAttachmentModifierVGAA0hE5LevelOF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","extendedModule":"SwiftUI","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"accessibilityHeading"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI25AccessibilityHeadingLevelO","text":"AccessibilityHeadingLevel"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"ModifiedContent","preciseIdentifier":"s:7SwiftUI15ModifiedContentV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"AccessibilityAttachmentModifier","preciseIdentifier":"s:7SwiftUI31AccessibilityAttachmentModifierV"},{"text":">","kind":"text"}],"role":"symbol","platforms":[{"beta":false,"unavailable":false,"deprecated":false,"name":"iOS","introducedAt":"15.0"},{"name":"macOS","deprecated":false,"introducedAt":"12.0","unavailable":false,"beta":false},{"deprecated":false,"introducedAt":"15.0","unavailable":false,"name":"tvOS","beta":false},{"unavailable":false,"introducedAt":"8.0","name":"watchOS","beta":false,"deprecated":false}],"symbolKind":"method","title":"accessibilityHeading(_:)","roleHeading":"Instance Method"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/accessibilityHeading(_:)":{"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"accessibilityHeading","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI25AccessibilityHeadingLevelO","text":"AccessibilityHeadingLevel"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI15ModifiedContentV","kind":"typeIdentifier","text":"ModifiedContent"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI31AccessibilityAttachmentModifierV","text":"AccessibilityAttachmentModifier","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"accessibilityHeading(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/accessibilityHeading(_:)","kind":"symbol","abstract":[],"url":"\/documentation\/composablearchitecture\/ifletstore\/accessibilityheading(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/ifletstore","title":"IfLetStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","kind":"article","title":"View Implementations","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"}}}