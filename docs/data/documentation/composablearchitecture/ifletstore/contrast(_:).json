{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"contrast"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"amount","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"symbolKind":"method","roleHeading":"Instance Method","extendedModule":"SwiftUI","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"contrast","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"platforms":[{"deprecated":false,"beta":false,"name":"iOS","unavailable":false,"introducedAt":"13.0"},{"beta":false,"introducedAt":"10.15","name":"macOS","deprecated":false,"unavailable":false},{"name":"tvOS","introducedAt":"13.0","deprecated":false,"unavailable":false,"beta":false},{"unavailable":false,"name":"watchOS","introducedAt":"6.0","deprecated":false,"beta":false}],"externalID":"s:7SwiftUI4ViewPAAE8contrastyQrSdF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","role":"symbol","title":"contrast(_:)","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUI"]}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/contrast(_:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/contrast(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.contrast(_:)"},{"text":".","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","kind":"article","title":"View Implementations","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/ifletstore","title":"IfLetStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/contrast(_:)":{"url":"\/documentation\/composablearchitecture\/ifletstore\/contrast(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"contrast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"type":"topic","title":"contrast(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/contrast(_:)","kind":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"}}}