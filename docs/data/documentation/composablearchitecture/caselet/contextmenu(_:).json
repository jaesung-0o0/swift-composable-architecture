{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.contextMenu(_:)","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/contextmenu(_:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"contextMenu"},{"kind":"text","text":"<"},{"text":"MenuItems","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"contextMenu","kind":"internalParam"},{"kind":"text","text":": "},{"text":"ContextMenu","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11ContextMenuV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"MenuItems"},{"text":">?) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"MenuItems","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/contextMenu(_:)","interfaceLanguage":"swift"},"metadata":{"platforms":[{"message":"Use `contextMenu(menuItems:)` instead.","beta":false,"deprecatedAt":"100000.0","introducedAt":"13.0","deprecated":false,"unavailable":false,"name":"iOS"},{"beta":false,"unavailable":false,"name":"macOS","deprecated":false,"message":"Use `contextMenu(menuItems:)` instead.","deprecatedAt":"100000.0","introducedAt":"10.15"},{"name":"watchOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"6.0","deprecatedAt":"7.0"},{"unavailable":false,"message":"Use `contextMenu(menuItems:)` instead.","beta":false,"deprecated":false,"introducedAt":"1.0","deprecatedAt":"100000.0","name":"visionOS"}],"extendedModule":"SwiftUI","role":"symbol","externalID":"s:7SwiftUI4ViewPAAE11contextMenuyQrAA07ContextE0Vyqd__GSgAaBRd__lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","modules":[{"relatedModules":["SwiftUI"],"name":"ComposableArchitecture"}],"roleHeading":"Instance Method","title":"contextMenu(_:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"contextMenu","kind":"identifier"},{"text":"<","kind":"text"},{"text":"MenuItems","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11ContextMenuV","text":"ContextMenu"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"MenuItems"},{"kind":"text","text":">?) -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use `contextMenu(menuItems:)` instead."}],"type":"paragraph"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"role":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","kind":"symbol","navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference","isActive":true},{"type":"text","text":" views."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"type":"topic","title":"SwitchStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/contextMenu(_:)":{"url":"\/documentation\/composablearchitecture\/caselet\/contextmenu(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"contextMenu","kind":"identifier"},{"kind":"text","text":"<"},{"text":"MenuItems","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11ContextMenuV","text":"ContextMenu"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"MenuItems"},{"kind":"text","text":">?) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"title":"contextMenu(_:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/contextMenu(_:)","type":"topic","abstract":[],"deprecated":true,"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","kind":"article","abstract":[],"type":"topic","title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"type":"topic","title":"CaseLet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic"}}}