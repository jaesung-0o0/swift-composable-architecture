{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/toCaseState"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"toCaseState","kind":"identifier"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"EnumState"},{"text":") -> ","kind":"text"},{"text":"CaseState","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","sections":[],"metadata":{"externalID":"s:22ComposableArchitecture7CaseLetV02toC5Stateyq0_Sgxcvp","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","title":"toCaseState","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"toCaseState"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"EnumState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CaseState"},{"kind":"text","text":"?"}],"modules":[{"name":"ComposableArchitecture"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet\/tocasestate"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"role":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","kind":"symbol","navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference","isActive":true},{"type":"text","text":" views."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"type":"topic","title":"SwitchStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"type":"topic","title":"CaseLet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/toCaseState":{"kind":"symbol","title":"toCaseState","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toCaseState","kind":"identifier"},{"kind":"text","text":": ("},{"text":"EnumState","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CaseState"},{"kind":"text","text":"?"}],"abstract":[],"url":"\/documentation\/composablearchitecture\/caselet\/tocasestate","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/toCaseState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"}}}