{"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/presentationcompactadaptation(horizontal:vertical:)"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/presentationCompactAdaptation(horizontal:vertical:)","interfaceLanguage":"swift"},"metadata":{"externalID":"s:7SwiftUI4ViewPAAE29presentationCompactAdaptation10horizontal8verticalQrAA012PresentationF0V_AHtF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","title":"presentationCompactAdaptation(horizontal:vertical:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"presentationCompactAdaptation"},{"kind":"text","text":"("},{"kind":"externalParam","text":"horizontal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI22PresentationAdaptationV","text":"PresentationAdaptation"},{"text":", ","kind":"text"},{"text":"vertical","kind":"externalParam"},{"kind":"text","text":": "},{"text":"PresentationAdaptation","preciseIdentifier":"s:7SwiftUI22PresentationAdaptationV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"extendedModule":"SwiftUI","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUI"]}],"platforms":[{"introducedAt":"16.4","name":"iOS","deprecated":false,"beta":false,"unavailable":false},{"beta":false,"name":"macOS","introducedAt":"13.3","deprecated":false,"unavailable":false},{"unavailable":false,"name":"tvOS","introducedAt":"16.4","beta":false,"deprecated":false},{"deprecated":false,"introducedAt":"9.4","beta":false,"name":"watchOS","unavailable":false}]},"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.presentationCompactAdaptation(horizontal:vertical:)","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"presentationCompactAdaptation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"horizontal","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"horizontalAdaptation"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI22PresentationAdaptationV","kind":"typeIdentifier","text":"PresentationAdaptation"},{"text":", ","kind":"text"},{"text":"vertical","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"verticalAdaptation","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"PresentationAdaptation","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI22PresentationAdaptationV"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"text":"\n","kind":"text"}]}],"kind":"declarations"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"type":"topic","title":"CaseLet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"role":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","kind":"symbol","navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference","isActive":true},{"type":"text","text":" views."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"type":"topic","title":"SwitchStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/presentationCompactAdaptation(horizontal:vertical:)":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/caselet\/presentationcompactadaptation(horizontal:vertical:)","type":"topic","title":"presentationCompactAdaptation(horizontal:vertical:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/presentationCompactAdaptation(horizontal:vertical:)","role":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"presentationCompactAdaptation","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"horizontal"},{"kind":"text","text":": "},{"text":"PresentationAdaptation","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI22PresentationAdaptationV"},{"kind":"text","text":", "},{"text":"vertical","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI22PresentationAdaptationV","text":"PresentationAdaptation"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","kind":"article","abstract":[],"type":"topic","title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"}}}