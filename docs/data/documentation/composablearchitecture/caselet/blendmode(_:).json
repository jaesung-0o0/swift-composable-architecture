{"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet\/blendmode(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"blendMode","kind":"identifier"},{"kind":"text","text":"("},{"text":"BlendMode","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9BlendModeO"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"title":"blendMode(_:)","extendedModule":"SwiftUI","symbolKind":"method","platforms":[{"unavailable":false,"beta":false,"introducedAt":"13.0","deprecated":false,"name":"iOS"},{"unavailable":false,"beta":false,"introducedAt":"10.15","deprecated":false,"name":"macOS"},{"deprecated":false,"name":"tvOS","unavailable":false,"beta":false,"introducedAt":"13.0"},{"name":"watchOS","introducedAt":"6.0","deprecated":false,"unavailable":false,"beta":false}],"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUI"]}],"role":"symbol","externalID":"s:7SwiftUI4ViewPAAE9blendModeyQrAA05BlendE0OF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV"},"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/blendMode(_:)"},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.blendMode(_:)","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"blendMode","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"blendMode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI9BlendModeO","kind":"typeIdentifier","text":"BlendMode"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":"\n","kind":"text"}]}],"kind":"declarations"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"role":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","kind":"symbol","navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference","isActive":true},{"type":"text","text":" views."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"type":"topic","title":"SwitchStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"type":"topic","title":"CaseLet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/blendMode(_:)":{"abstract":[],"title":"blendMode(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"blendMode","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9BlendModeO","text":"BlendMode"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/blendMode(_:)","url":"\/documentation\/composablearchitecture\/caselet\/blendmode(_:)","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","kind":"article","abstract":[],"type":"topic","title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"}}}