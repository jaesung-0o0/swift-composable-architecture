{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/ignoresSafeArea(_:edges:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/ignoressafearea(_:edges:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"metadata":{"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUI"]}],"role":"symbol","platforms":[{"introducedAt":"14.0","name":"iOS","deprecated":false,"unavailable":false,"beta":false},{"deprecated":false,"introducedAt":"11.0","unavailable":false,"name":"macOS","beta":false},{"name":"tvOS","deprecated":false,"introducedAt":"14.0","beta":false,"unavailable":false},{"name":"watchOS","deprecated":false,"beta":false,"introducedAt":"7.0","unavailable":false}],"roleHeading":"Instance Method","title":"ignoresSafeArea(_:edges:)","extendedModule":"SwiftUI","externalID":"s:7SwiftUI4ViewPAAE15ignoresSafeArea_5edgesQrAA0eF7RegionsV_AA4EdgeO3SetVtF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ignoresSafeArea"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7SwiftUI15SafeAreaRegionsV","kind":"typeIdentifier","text":"SafeAreaRegions"},{"kind":"text","text":", "},{"text":"edges","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI4EdgeO","text":"Edge","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7SwiftUI4EdgeO3SetV","text":"Set","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ignoresSafeArea"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"regions","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI15SafeAreaRegionsV","text":"SafeAreaRegions","kind":"typeIdentifier"},{"text":" = .all, ","kind":"text"},{"kind":"externalParam","text":"edges"},{"kind":"text","text":": "},{"text":"Edge","preciseIdentifier":"s:7SwiftUI4EdgeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4EdgeO3SetV","text":"Set","kind":"typeIdentifier"},{"kind":"text","text":" = .all) -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}]}],"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.ignoresSafeArea(_:edges:)","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","title":"SwitchStore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"text":" views.","type":"text"}],"url":"\/documentation\/composablearchitecture\/switchstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","abstract":[],"kind":"article","title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"title":"CaseLet","kind":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/ignoresSafeArea(_:edges:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/ignoresSafeArea(_:edges:)","role":"symbol","url":"\/documentation\/composablearchitecture\/caselet\/ignoressafearea(_:edges:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"ignoresSafeArea","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7SwiftUI15SafeAreaRegionsV","text":"SafeAreaRegions","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"edges"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4EdgeO","text":"Edge","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4EdgeO3SetV","kind":"typeIdentifier","text":"Set"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"abstract":[],"type":"topic","kind":"symbol","title":"ignoresSafeArea(_:edges:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"}}}