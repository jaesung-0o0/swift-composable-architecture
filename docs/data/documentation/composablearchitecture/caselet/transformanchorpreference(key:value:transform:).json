{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet\/transformanchorpreference(key:value:transform:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/transformAnchorPreference(key:value:transform:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"relatedModules":["SwiftUI"],"name":"ComposableArchitecture"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"transformAnchorPreference","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"K"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Anchor","preciseIdentifier":"s:7SwiftUI6AnchorV"},{"kind":"text","text":"<"},{"text":"A","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:7SwiftUI6AnchorV6SourceV","text":"Source","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transform"},{"text":": (","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"K"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:7SwiftUI6AnchorV","kind":"typeIdentifier","text":"Anchor"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"roleHeading":"Instance Method","role":"symbol","externalID":"s:7SwiftUI4ViewPAAE25transformAnchorPreference3key5value0D0Qrqd_0_m_AA0E0V6SourceVyqd___Gy5ValueQyd_0_z_AIyqd__GtctAA0F3KeyRd_0_r0_lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","platforms":[{"beta":false,"introducedAt":"13.0","unavailable":false,"deprecated":false,"name":"iOS"},{"unavailable":false,"beta":false,"name":"macOS","deprecated":false,"introducedAt":"10.15"},{"name":"tvOS","unavailable":false,"introducedAt":"13.0","deprecated":false,"beta":false},{"name":"watchOS","introducedAt":"6.0","beta":false,"unavailable":false,"deprecated":false}],"title":"transformAnchorPreference(key:value:transform:)","extendedModule":"SwiftUI"},"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"code":"View.transformAnchorPreference(key:value:transform:)","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"transformAnchorPreference"},{"kind":"text","text":"<"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"K","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"key"},{"text":" ","kind":"text"},{"text":"_","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":".Type = K.self, "},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Anchor","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI6AnchorV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"A"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:7SwiftUI6AnchorV6SourceV","text":"Source","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transform"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"K","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Anchor","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI6AnchorV"},{"text":"<","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":" : "},{"text":"PreferenceKey","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI13PreferenceKeyP"},{"text":"\n","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"title":"CaseLet","kind":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","abstract":[],"kind":"article","title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/transformAnchorPreference(key:value:transform:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/transformAnchorPreference(key:value:transform:)","abstract":[],"url":"\/documentation\/composablearchitecture\/caselet\/transformanchorpreference(key:value:transform:)","title":"transformAnchorPreference(key:value:transform:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"transformAnchorPreference","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"text":"K","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"text":"K","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"value"},{"text":": ","kind":"text"},{"text":"Anchor","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI6AnchorV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"A"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Source","preciseIdentifier":"s:7SwiftUI6AnchorV6SourceV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transform"},{"text":": (","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"K","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Anchor","preciseIdentifier":"s:7SwiftUI6AnchorV"},{"text":"<","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","title":"SwitchStore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"text":" views.","type":"text"}],"url":"\/documentation\/composablearchitecture\/switchstore"}}}