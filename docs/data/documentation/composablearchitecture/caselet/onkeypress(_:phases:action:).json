{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUI"]}],"externalID":"s:7SwiftUI4ViewPAAE10onKeyPress_6phases6actionQrAA0E10EquivalentV_AA0eF0V6PhasesVAJ6ResultOAJctF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","roleHeading":"Instance Method","extendedModule":"SwiftUI","role":"symbol","symbolKind":"method","platforms":[{"name":"iOS","introducedAt":"17.0","deprecated":false,"unavailable":false,"beta":false},{"beta":false,"deprecated":false,"name":"macOS","introducedAt":"14.0","unavailable":false},{"deprecated":false,"beta":false,"name":"tvOS","introducedAt":"17.0","unavailable":false}],"title":"onKeyPress(_:phases:action:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onKeyPress"},{"kind":"text","text":"("},{"text":"KeyEquivalent","preciseIdentifier":"s:7SwiftUI13KeyEquivalentV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"phases"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI8KeyPressV","text":"KeyPress","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Phases","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV6PhasesV"},{"kind":"text","text":", "},{"text":"action","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"KeyPress","preciseIdentifier":"s:7SwiftUI8KeyPressV"},{"text":") -> ","kind":"text"},{"text":"KeyPress","preciseIdentifier":"s:7SwiftUI8KeyPressV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV6ResultO","text":"Result"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}]},"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet\/onkeypress(_:phases:action:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/onKeyPress(_:phases:action:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"code":"View.onKeyPress(_:phases:action:)","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"onKeyPress","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI13KeyEquivalentV","text":"KeyEquivalent"},{"kind":"text","text":", "},{"kind":"externalParam","text":"phases"},{"text":": ","kind":"text"},{"text":"KeyPress","preciseIdentifier":"s:7SwiftUI8KeyPressV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Phases","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV6PhasesV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:7SwiftUI8KeyPressV","text":"KeyPress","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"KeyPress","preciseIdentifier":"s:7SwiftUI8KeyPressV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7SwiftUI8KeyPressV6ResultO","text":"Result","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/onKeyPress(_:phases:action:)":{"url":"\/documentation\/composablearchitecture\/caselet\/onkeypress(_:phases:action:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onKeyPress"},{"text":"(","kind":"text"},{"text":"KeyEquivalent","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI13KeyEquivalentV"},{"text":", ","kind":"text"},{"text":"phases","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"KeyPress","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7SwiftUI8KeyPressV6PhasesV","kind":"typeIdentifier","text":"Phases"},{"text":", ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:7SwiftUI8KeyPressV","text":"KeyPress","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"KeyPress","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7SwiftUI8KeyPressV6ResultO","kind":"typeIdentifier","text":"Result"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/onKeyPress(_:phases:action:)","title":"onKeyPress(_:phases:action:)","kind":"symbol","abstract":[],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","kind":"article","abstract":[],"type":"topic","title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","kind":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"abstract":[{"text":"A view that handles a specific case of enum state in a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"type":"topic","title":"CaseLet"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"role":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","kind":"symbol","navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference","isActive":true},{"type":"text","text":" views."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"type":"topic","title":"SwitchStore"}}}