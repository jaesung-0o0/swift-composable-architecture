{"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"use 'View.confirmationDialog(store:)' instead."}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/actionsheet(store:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"actionSheet"},{"kind":"text","text":"<"},{"text":"ButtonAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"store"},{"text":": ","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"PresentationState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"text":"<","kind":"text"},{"text":"ConfirmationDialogState","kind":"typeIdentifier","preciseIdentifier":"s:21SwiftUINavigationCore23ConfirmationDialogStateV"},{"kind":"text","text":"<"},{"text":"ButtonAction","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP22ComposableArchitectureE11actionSheet5storeQrAD5StoreCyAD17PresentationStateVy0A16UINavigationCore018ConfirmationDialogK0Vyqd__GGAD0J6ActionOyqd__GG_tlFQO06ButtonP0qd__mfp"},{"text":">>, ","kind":"text"},{"text":"PresentationAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"text":"<","kind":"text"},{"text":"ButtonAction","preciseIdentifier":"s:7SwiftUI4ViewP22ComposableArchitectureE11actionSheet5storeQrAD5StoreCyAD17PresentationStateVy0A16UINavigationCore018ConfirmationDialogK0Vyqd__GGAD0J6ActionOyqd__GG_tlFQO06ButtonP0qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":">>) -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"title":"actionSheet(store:)","symbolKind":"method","extendedModule":"SwiftUI","externalID":"s:7SwiftUI4ViewP22ComposableArchitectureE11actionSheet5storeQrAD5StoreCyAD17PresentationStateVy0A16UINavigationCore018ConfirmationDialogK0Vyqd__GGAD0J6ActionOyqd__GG_tlF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","platforms":[{"introducedAt":"13.0","deprecated":false,"unavailable":false,"name":"iOS","deprecatedAt":"100000.0","beta":false,"message":"use 'View.confirmationDialog(store:)' instead."},{"deprecated":false,"deprecatedAt":"100000.0","introducedAt":"13.0","unavailable":false,"name":"tvOS","message":"use 'View.confirmationDialog(store:)' instead.","beta":false},{"unavailable":false,"message":"use 'View.confirmationDialog(store:)' instead.","name":"watchOS","beta":false,"introducedAt":"6.0","deprecatedAt":"100000.0","deprecated":false}],"modules":[{"relatedModules":["SwiftUI"],"name":"ComposableArchitecture"}],"roleHeading":"Instance Method","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/actionSheet(store:)"},"sections":[],"abstract":[{"text":"Displays an action sheet when then storeâ€™s state becomes non-","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", and dismisses it when it"},{"text":" ","type":"text"},{"type":"text","text":"becomes "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"actionSheet","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ButtonAction","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"store","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","text":"Store"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"PresentationState","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ConfirmationDialogState","preciseIdentifier":"s:21SwiftUINavigationCore23ConfirmationDialogStateV","kind":"typeIdentifier","text":"ConfirmationDialogState"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ButtonAction","preciseIdentifier":"s:7SwiftUI4ViewP22ComposableArchitectureE11actionSheet5storeQrAD5StoreCyAD17PresentationStateVy0A16UINavigationCore018ConfirmationDialogK0Vyqd__GGAD0J6ActionOyqd__GG_tlFQO06ButtonP0qd__mfp"},{"text":">>, ","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","kind":"typeIdentifier","text":"PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"text":"<","kind":"text"},{"text":"ButtonAction","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP22ComposableArchitectureE11actionSheet5storeQrAD5StoreCyAD17PresentationStateVy0A16UINavigationCore018ConfirmationDialogK0Vyqd__GGAD0J6ActionOyqd__GG_tlFQO06ButtonP0qd__mfp"},{"kind":"text","text":">>) -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A store that is focused on "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","isActive":true},{"text":" for an","type":"text"},{"type":"text","text":" "},{"text":"alert.","type":"text"}],"type":"paragraph"}],"name":"store"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A transformation to extract alert state from the presentation state."}]}],"name":"toDestinationState"},{"content":[{"inlineContent":[{"type":"text","text":"A transformation to embed alert actions into the presentation"},{"type":"text","text":" "},{"type":"text","text":"action."}],"type":"paragraph"}],"name":"fromDestinationAction"}],"kind":"parameters"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","abstract":[],"kind":"article","title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"title":"Store","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Store"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/actionSheet(store:)":{"url":"\/documentation\/composablearchitecture\/caselet\/actionsheet(store:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"actionSheet","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ButtonAction","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"store","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:21SwiftUINavigationCore23ConfirmationDialogStateV","kind":"typeIdentifier","text":"ConfirmationDialogState"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP22ComposableArchitectureE11actionSheet5storeQrAD5StoreCyAD17PresentationStateVy0A16UINavigationCore018ConfirmationDialogK0Vyqd__GGAD0J6ActionOyqd__GG_tlFQO06ButtonP0qd__mfp","text":"ButtonAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","text":"PresentationAction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ButtonAction","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP22ComposableArchitectureE11actionSheet5storeQrAD5StoreCyAD17PresentationStateVy0A16UINavigationCore018ConfirmationDialogK0Vyqd__GGAD0J6ActionOyqd__GG_tlFQO06ButtonP0qd__mfp"},{"text":">>) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/actionSheet(store:)","kind":"symbol","abstract":[{"text":"Displays an action sheet when then storeâ€™s state becomes non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":", and dismisses it when it","type":"text"},{"type":"text","text":" "},{"type":"text","text":"becomes "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"topic","title":"actionSheet(store:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","title":"SwitchStore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"text":" views.","type":"text"}],"url":"\/documentation\/composablearchitecture\/switchstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"title":"CaseLet","kind":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","role":"symbol","abstract":[{"type":"text","text":"A property wrapper for state that can be presented."}],"navigatorTitle":[{"kind":"identifier","text":"PresentationState"}],"type":"topic","title":"PresentationState","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PresentationState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/presentationstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ConfirmationDialogState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ConfirmationDialogState","url":"\/documentation\/composablearchitecture\/confirmationdialogstate","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ConfirmationDialogState","kind":"identifier"}],"role":"symbol","title":"ConfirmationDialogState","kind":"symbol","abstract":[{"type":"text","text":"A data type that describes the state of a confirmation dialog that can be shown to the user. The"},{"type":"text","text":" "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" generic is the type of actions that can be sent from tapping on a button in the sheet."}],"navigatorTitle":[{"kind":"identifier","text":"ConfirmationDialogState"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","role":"symbol","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented."}],"navigatorTitle":[{"text":"PresentationAction","kind":"identifier"}],"type":"topic","title":"PresentationAction","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PresentationAction"}],"url":"\/documentation\/composablearchitecture\/presentationaction"}}}