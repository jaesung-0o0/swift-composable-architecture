{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock"},"metadata":{"navigatorTitle":[{"text":"ImmediateClock","kind":"identifier"}],"role":"symbol","title":"ImmediateClock","symbolKind":"class","modules":[{"name":"ComposableArchitecture"}],"platforms":[{"introducedAt":"16.0","name":"iOS","unavailable":false,"beta":false,"deprecated":false},{"introducedAt":"13.0","beta":false,"name":"macOS","unavailable":false,"deprecated":false},{"beta":false,"unavailable":false,"name":"tvOS","deprecated":false,"introducedAt":"16.0"},{"beta":false,"deprecated":false,"name":"watchOS","unavailable":false,"introducedAt":"9.0"}],"externalID":"s:6Clocks14ImmediateClockC","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ImmediateClock","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"abstract":[{"type":"text","text":"A clock that does not suspend when sleeping."}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/s8SendableP","doc:\/\/ComposableArchitecture\/12_Concurrency5ClockP"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/immediateclock"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImmediateClock"},{"text":"<","kind":"text"},{"text":"Duration","kind":"genericParameter"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Duration","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"DurationProtocol","kind":"typeIdentifier","preciseIdentifier":"s:s16DurationProtocolP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Duration"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"}]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This clock is useful for squashing all of time down to a single instant, forcing any ","type":"text"},{"type":"codeVoice","code":"sleep"},{"text":"s","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to execute immediately."}]},{"inlineContent":[{"text":"For example, suppose you have a feature that needs to wait 5 seconds before performing some","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"action, like showing a welcome message:"}],"type":"paragraph"},{"type":"codeListing","code":["struct Feature: View {","  @State var message: String?","","  var body: some View {","    VStack {","      if let message = self.message {","        Text(self.message)","          .font(.largeTitle.bold())","          .foregroundColor(.mint)","      }","    }","    .task {","      do {","        try await Task.sleep(for: .seconds(5))","        self.message = \"Welcome!\"","      } catch {}","    }","  }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"This is currently using a real life clock by calling out to ","type":"text"},{"type":"codeVoice","code":"Task.sleep(for:)"},{"text":", which means","type":"text"},{"type":"text","text":" "},{"text":"every change you make to the styling and behavior of this feature you must wait for 5 real life","type":"text"},{"type":"text","text":" "},{"type":"text","text":"seconds to pass before you see the affect. This will severely hurt your ability to quickly"},{"text":" ","type":"text"},{"text":"iterate on the feature in an Xcode preview.","type":"text"}]},{"inlineContent":[{"text":"The fix is to have your view hold onto a clock so that it can be controlled from the outside:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["struct Feature: View {","  @State var message: String?","  let clock: any Clock<Duration>","","  var body: some View {","    VStack {","      if let message = self.message {","        Text(self.message)","          .font(.largeTitle.bold())","          .foregroundColor(.mint)","      }","    }","    .task {","      do {","        try await self.clock.sleep(for: .seconds(5))","        self.message = \"Welcome!\"","      } catch {}","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This code is nearly the same as before except that it now holds onto an explicit clock. This"},{"text":" ","type":"text"},{"text":"allows you to use a ","type":"text"},{"code":"ContinuousClock","type":"codeVoice"},{"type":"text","text":" when running on a device or simulator, and use an"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock","isActive":true,"type":"reference"},{"type":"text","text":" when running in an Xcode preview:"}]},{"type":"codeListing","code":["struct Feature_Previews: PreviewProvider {","  static var previews: some View {","    Feature(clock: .immediate)","  }","}"],"syntax":"swift"},{"inlineContent":[{"text":"Now the welcome message will be displayed immediately with every change made to the view. No","type":"text"},{"type":"text","text":" "},{"text":"need to wait for 5 real world seconds to pass, making it easier to iterate on the feature.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"You can also propagate a clock to a SwiftUI view via the ","type":"text"},{"type":"codeVoice","code":"continuousClock"},{"type":"text","text":" and "},{"code":"suspendingClock","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"environment values that ship with the library:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["struct Feature: View {","  @State var message: String?","  @Environment(\\.continuousClock) var clock","","  var body: some View {","    VStack {","      if let message = self.message {","        Text(self.message)","      }","    }","    .task {","      do {","        try await self.clock.sleep(for: .seconds(5))","        self.message = \"Welcome!\"","      } catch {}","    }","  }","}","","struct Feature_Previews: PreviewProvider {","  static var previews: some View {","    Feature()","      .environment(\\.continuousClock, .immediate)","  }","}"]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"symbol","topicSections":[{"title":"Structures","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock\/Instant"]},{"title":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock\/init()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock\/init(now:)"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock\/minimumResolution","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock\/now"],"title":"Instance Properties"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock\/sleep(until:tolerance:)"],"title":"Instance Methods"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock\/Clock-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock\/Clock-Implementations"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ImmediateClock/now":{"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/immediateclock\/now","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"now"},{"text":": ","kind":"text"},{"text":"ImmediateClock","kind":"typeIdentifier","preciseIdentifier":"s:6Clocks14ImmediateClockC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Duration"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Clocks14ImmediateClockC7InstantV","text":"Instant"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock\/now","title":"now","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ImmediateClock/Instant":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/immediateclock\/instant","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Instant"}],"type":"topic","title":"ImmediateClock.Instant","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock\/Instant","navigatorTitle":[{"kind":"identifier","text":"Instant"}],"role":"symbol","abstract":[]},"doc://ComposableArchitecture/12_Concurrency5ClockP":{"title":"_Concurrency.Clock","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/12_Concurrency5ClockP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ImmediateClock/minimumResolution":{"title":"minimumResolution","role":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock\/minimumResolution","url":"\/documentation\/composablearchitecture\/immediateclock\/minimumresolution","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minimumResolution","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ImmediateClock","kind":"typeIdentifier","preciseIdentifier":"s:6Clocks14ImmediateClockC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Duration"},{"text":">.","kind":"text"},{"text":"Instant","preciseIdentifier":"s:6Clocks14ImmediateClockC7InstantV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ImmediateClock/Clock-Implementations":{"type":"topic","url":"\/documentation\/composablearchitecture\/immediateclock\/clock-implementations","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock\/Clock-Implementations","abstract":[],"kind":"article","title":"Clock Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ImmediateClock/sleep(until:tolerance:)":{"type":"topic","kind":"symbol","abstract":[],"title":"sleep(until:tolerance:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock\/sleep(until:tolerance:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sleep"},{"kind":"text","text":"("},{"kind":"externalParam","text":"until"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Clocks14ImmediateClockC","text":"ImmediateClock","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Duration","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"Instant","preciseIdentifier":"s:6Clocks14ImmediateClockC7InstantV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tolerance"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Clocks14ImmediateClockC","text":"ImmediateClock"},{"text":"<","kind":"text"},{"text":"Duration","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Clocks14ImmediateClockC7InstantV","text":"Instant"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/composablearchitecture\/immediateclock\/sleep(until:tolerance:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ImmediateClock/init(now:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"now"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ImmediateClock","preciseIdentifier":"s:6Clocks14ImmediateClockC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Duration"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Clocks14ImmediateClockC7InstantV","text":"Instant"},{"kind":"text","text":")"}],"url":"\/documentation\/composablearchitecture\/immediateclock\/init(now:)","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock\/init(now:)","abstract":[],"title":"init(now:)","kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ImmediateClock":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/immediateclock","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ImmediateClock"}],"type":"topic","title":"ImmediateClock","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock","navigatorTitle":[{"kind":"identifier","text":"ImmediateClock"}],"role":"symbol","abstract":[{"type":"text","text":"A clock that does not suspend when sleeping."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ImmediateClock/init()":{"url":"\/documentation\/composablearchitecture\/immediateclock\/init()","abstract":[],"type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Duration","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Duration"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateClock\/init()","kind":"symbol","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()"}}}