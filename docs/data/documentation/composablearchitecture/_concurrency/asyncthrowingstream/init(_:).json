{"metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}],"roleHeading":"Initializer","externalID":"s:Scs17ConcurrencyExtrass5Error_pRs_rlEyScsyxsAB_pGqd__c7ElementQyd__RszSciRd__lufc","symbolKind":"init","extendedModule":"_Concurrency","title":"init(_:)","modules":[{"relatedModules":["_Concurrency"],"name":"ComposableArchitecture"}],"role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/_concurrency\/asyncthrowingstream\/init(_:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"type":"text","text":"Produces an "},{"type":"codeVoice","code":"AsyncThrowingStream"},{"type":"text","text":" from an "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" by consuming the sequence till it","type":"text"},{"type":"text","text":" "},{"type":"text","text":"terminates, rethrowing any failure."}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_Concurrency","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_Concurrency\/AsyncThrowingStream"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"sequence","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"AsyncSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sci"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"sequence","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An async sequence."}]}]}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_Concurrency\/AsyncThrowingStream\/init(_:)","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/_Concurrency/AsyncThrowingStream/init(_:)":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_Concurrency\/AsyncThrowingStream\/init(_:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Failure","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Produces an "},{"type":"codeVoice","code":"AsyncThrowingStream"},{"type":"text","text":" from an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" by consuming the sequence till it"},{"type":"text","text":" "},{"type":"text","text":"terminates, rethrowing any failure."}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/_concurrency\/asyncthrowingstream\/init(_:)","title":"init(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/_Concurrency/AsyncThrowingStream":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_Concurrency\/AsyncThrowingStream","role":"symbol","url":"\/documentation\/composablearchitecture\/_concurrency\/asyncthrowingstream","abstract":[],"title":"AsyncThrowingStream","kind":"symbol","navigatorTitle":[{"text":"AsyncThrowingStream","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Scs","text":"AsyncThrowingStream","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/_Concurrency":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_Concurrency","role":"collection","url":"\/documentation\/composablearchitecture\/_concurrency","title":"_Concurrency","abstract":[],"kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"}}}