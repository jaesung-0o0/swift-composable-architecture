{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"]]},"topicSections":[{"title":"Building Content","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/init(_:content:)"],"title":"Initializers"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/body","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/content","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/store"],"title":"Instance Properties"},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]}],"seeAlsoSections":[{"title":"View containers","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore"]}],"sections":[],"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SwitchStore"}],"navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Structure","title":"SwitchStore","role":"symbol","externalID":"s:22ComposableArchitecture11SwitchStoreV","symbolKind":"struct"},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP"],"title":"Conforms To","kind":"relationships"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/switchstore"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference","isActive":true},{"type":"text","text":" views."}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwitchStore","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"State"},{"text":", ","kind":"text"},{"text":"Action","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Content","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Content"},{"text":" : ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"An application may model parts of its state with enums. For example, app state may differ if a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"user is logged-in or not:"}]},{"type":"codeListing","syntax":"swift","code":["struct AppFeature: Reducer {","  enum State {","    case loggedIn(LoggedInState)","    case loggedOut(LoggedOutState)","  }","  \/\/ ...","}"]},{"inlineContent":[{"type":"text","text":"In the view layer, a store on this state can switch over each case using a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":" and"},{"type":"text","text":" "},{"text":"a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" view per case:"}],"type":"paragraph"},{"code":["struct AppView: View {","  let store: StoreOf<AppFeature>","","  var body: some View {","    SwitchStore(self.store) { state in","      switch state {","      case .loggedIn:","        CaseLet(","          \/AppFeature.State.loggedIn, action: AppFeature.Action.loggedIn","        ) { loggedInStore in","          LoggedInView(store: loggedInStore)","        }","      case .loggedOut:","        CaseLet(","          \/AppFeature.State.loggedOut, action: AppFeature.Action.loggedOut","        ) { loggedOutStore in","          LoggedOutView(store: loggedOutStore)","        }","      }","    }","  }","}"],"syntax":"swift","type":"codeListing"},{"name":"Important","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"SwitchStore","type":"codeVoice"},{"text":" view builder is only evaluated when the case of state passed to","type":"text"},{"text":" ","type":"text"},{"text":"it changes. As such, you should not rely on this value for anything other than checking the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"current case, "},{"type":"emphasis","inlineContent":[{"text":"e.g.","type":"text"}]},{"text":" by switching on it and routing to an appropriate ","type":"text"},{"type":"codeVoice","code":"CaseLet"},{"type":"text","text":"."}]}],"style":"important","type":"aside"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifCaseLet(_:action:then:fileID:line:)","isActive":true},{"type":"text","text":" and"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:fileID:line:)","isActive":true},{"type":"text","text":" for embedding reducers that operate on each case"},{"type":"text","text":" "},{"text":"of an enum in reducers that operate on the entire enum.","type":"text"}]}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationStackStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore","role":"symbol","navigatorTitle":[{"text":"NavigationStackStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/navigationstackstore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"NavigationStackStore","kind":"identifier"}],"abstract":[{"text":"A navigation stack that is driven by a store.","type":"text"}],"type":"topic","kind":"symbol","title":"NavigationStackStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/body":{"url":"\/documentation\/composablearchitecture\/switchstore\/body","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/body","type":"topic","title":"body","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/store":{"url":"\/documentation\/composablearchitecture\/switchstore\/store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/store","type":"topic","title":"store","kind":"symbol","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"store","kind":"identifier"},{"kind":"text","text":": "},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture11SwitchStoreV5Statexmfp","text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11SwitchStoreV6Actionq_mfp"},{"kind":"text","text":">"}],"abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope/init(state:action:child:fileID:line:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"ChildState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"ParentState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5ScopeV11ParentStatexmfp"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ChildState","preciseIdentifier":"s:22ComposableArchitecture5ScopeV5state6action5child6fileID4lineACyxq_q0_G9CasePaths0J4PathVyxqd__G_ALyq_qd_0_Gq0_yXEs12StaticStringVSutc5StateQy0_Rsd__6ActionQy0_Rsd_0_r0_lufc05ChildO0L_qd__mfp"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ParentAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5ScopeV12ParentActionq_mfp"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5ScopeV5state6action5child6fileID4lineACyxq_q0_G9CasePaths0J4PathVyxqd__G_ALyq_qd_0_Gq0_yXEs12StaticStringVSutc5StateQy0_Rsd__6ActionQy0_Rsd_0_r0_lufc05ChildP0L_qd_0_mfp","text":"ChildAction"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"child"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5ScopeV5Childq0_mfp","text":"Child","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Initializes a reducer that runs the given child reducer against a slice of parent state and"},{"type":"text","text":" "},{"text":"actions.","type":"text"}],"url":"\/documentation\/composablearchitecture\/scope\/init(state:action:child:fileid:line:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope\/init(state:action:child:fileID:line:)","kind":"symbol","role":"symbol","type":"topic","title":"init(state:action:child:fileID:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"title":"ViewStore","type":"topic","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"type":"text","text":" "},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewStore"}],"navigatorTitle":[{"text":"ViewStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/viewstore","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"title":"Store","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Store"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifCaseLet(_:action:then:fileID:line:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on a case of parent enum state."}],"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/ifcaselet(_:action:then:fileid:line:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifCaseLet(_:action:then:fileID:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ifCaseLet"},{"kind":"text","text":"<"},{"text":"CaseState","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"CaseAction","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Case","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"CaseState","preciseIdentifier":"s:22ComposableArchitecture7ReducerPAAE9ifCaseLet_6action4then6fileID4lineAA03_IfefC0Vyxqd_1_G0E5Paths0E4PathVy5StateQzqd__G_ANy6ActionQzqd_0_Gqd_1_yXEs12StaticStringVSutAOQyd_1_Rsd__ARQyd_1_Rsd_0_AaBRd_1_r1_lF0eO0L_qd__mfp"},{"kind":"text","text":">, "},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerPAAE9ifCaseLet_6action4then6fileID4lineAA03_IfefC0Vyxqd_1_G0E5Paths0E4PathVy5StateQzqd__G_ANy6ActionQzqd_0_Gqd_1_yXEs12StaticStringVSutAOQyd_1_Rsd__ARQyd_1_Rsd_0_AaBRd_1_r1_lF0eP0L_qd_0_mfp","text":"CaseAction"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"then"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerPAAE9ifCaseLet_6action4then6fileID4lineAA03_IfefC0Vyxqd_1_G0E5Paths0E4PathVy5StateQzqd__G_ANy6ActionQzqd_0_Gqd_1_yXEs12StaticStringVSutAOQyd_1_Rsd__ARQyd_1_Rsd_0_AaBRd_1_r1_lF0E0L_qd_1_mfp","text":"Case","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"_IfCaseLetReducer","preciseIdentifier":"s:22ComposableArchitecture17_IfCaseLetReducerV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Case","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerPAAE9ifCaseLet_6action4then6fileID4lineAA03_IfefC0Vyxqd_1_G0E5Paths0E4PathVy5StateQzqd__G_ANy6ActionQzqd_0_Gqd_1_yXEs12StaticStringVSutAOQyd_1_Rsd__ARQyd_1_Rsd_0_AaBRd_1_r1_lF0E0L_qd_1_mfp"},{"text":">","kind":"text"}],"title":"ifCaseLet(_:action:then:fileID:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"abstract":[{"text":"A view helper that transforms a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true},{"type":"text","text":" into a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"text":" so that its state can be observed","type":"text"},{"type":"text","text":" "},{"text":"by a view builder.","type":"text"}],"title":"WithViewStore","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"WithViewStore"}],"url":"\/documentation\/composablearchitecture\/withviewstore","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WithViewStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"title":"View Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SwitchStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","title":"SwitchStore","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"text":" views.","type":"text"}],"url":"\/documentation\/composablearchitecture\/switchstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","role":"symbol","navigatorTitle":[{"text":"ForEachStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/foreachstore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForEachStore","kind":"identifier"}],"abstract":[{"type":"text","text":"A Composable Architecture-friendly wrapper around "},{"code":"ForEach","type":"codeVoice"},{"type":"text","text":" that simplifies working with"},{"text":" ","type":"text"},{"type":"text","text":"collections of state."}],"type":"topic","kind":"symbol","title":"ForEachStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/content":{"fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"content"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11SwitchStoreV5Statexmfp","text":"State"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture11SwitchStoreV7Contentq0_mfp","text":"Content","kind":"typeIdentifier"}],"abstract":[],"url":"\/documentation\/composablearchitecture\/switchstore\/content","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/content","kind":"symbol","role":"symbol","type":"topic","title":"content"},"doc://ComposableArchitecture/7SwiftUI4ViewP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP","title":"SwiftUI.View"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/init(_:content:)":{"title":"init(_:content:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11SwitchStoreV5Statexmfp"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11SwitchStoreV6Actionq_mfp"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"content"},{"text":": (","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"initialState"},{"text":": ","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11SwitchStoreV5Statexmfp"},{"text":") -> ","kind":"text"},{"text":"Content","preciseIdentifier":"s:22ComposableArchitecture11SwitchStoreV7Contentq0_mfp","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/composablearchitecture\/switchstore\/init(_:content:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/init(_:content:)","abstract":[],"type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/ifletstore","title":"IfLetStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"title":"CaseLet","kind":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"type":"topic"}}}