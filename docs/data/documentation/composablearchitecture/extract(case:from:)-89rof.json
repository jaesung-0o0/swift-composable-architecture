{"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use case path literal syntax (e.g., '\/Root.caseName'), or '(\/Root.caseName).extract(from:)'","type":"text"}]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/composablearchitecture\/extract(case:from:)-89rof"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Attempts to extract values associated with a given enum case initializer from a given root enum."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"extract","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"case"},{"kind":"text","text":" "},{"kind":"internalParam","text":"embed"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"from"},{"text":" ","kind":"text"},{"text":"root","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Root"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["iOS"]}]},{"parameters":[{"name":"embed","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An enum case initializer."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A root enum value."}]}],"name":"root"}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Values if they can be extracted from the given enum case initializer and root enum,"},{"text":" ","type":"text"},{"text":"otherwise ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"code":["extract(case: Result<Int, Error>.success, from: .success(42))","\/\/ 42","extract(case: Result<Int, Error>.success, from: .failure(MyError())","\/\/ nil"],"type":"codeListing","syntax":"swift"},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This function is only intended to be used with enum case initializers. Its behavior is"},{"type":"text","text":" "},{"type":"text","text":"otherwise undefined."}]}],"type":"aside","style":"note"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(case:from:)-89rof"},"metadata":{"platforms":[],"title":"extract(case:from:)","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:9CasePaths7extract4case4fromq_Sgxq_c_xtr0_lF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"extract"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Root"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"case","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"symbolKind":"func","roleHeading":"Function"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/extract(case:from:)-89rof":{"url":"\/documentation\/composablearchitecture\/extract(case:from:)-89rof","type":"topic","kind":"symbol","title":"extract(case:from:)","abstract":[{"text":"Attempts to extract values associated with a given enum case initializer from a given root enum.","type":"text"}],"deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"text":"Root","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"case"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(case:from:)-89rof"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"}}}