{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"advance"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"duration","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Stride"},{"kind":"text","text":" = .zero)"}],"platforms":["iOS"]}]},{"parameters":[{"name":"duration","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A stride. By default this argument is "},{"type":"codeVoice","code":".zero"},{"text":", which does not advance","type":"text"},{"type":"text","text":" "},{"text":"the schedulerâ€™s time but does cause the scheduler to execute any units of work that are","type":"text"},{"type":"text","text":" "},{"type":"text","text":"waiting to be performed for right now."}]}]}],"kind":"parameters"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestScheduler\/advance(by:)-3sq11","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/composablearchitecture\/testscheduler\/advance(by:)-3sq11"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"advance"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Stride","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:17CombineSchedulers13TestSchedulerC7advance2byy6StrideQz_tF","title":"advance(by:)","symbolKind":"method"},"abstract":[{"type":"text","text":"Advances the scheduler by the given stride."}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestScheduler"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestScheduler/advance(by:)-3sq11":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"advance","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Stride"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Advances the scheduler by the given stride."}],"url":"\/documentation\/composablearchitecture\/testscheduler\/advance(by:)-3sq11","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestScheduler\/advance(by:)-3sq11","kind":"symbol","role":"symbol","type":"topic","title":"advance(by:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestScheduler":{"title":"TestScheduler","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestScheduler","kind":"symbol","url":"\/documentation\/composablearchitecture\/testscheduler","navigatorTitle":[{"text":"TestScheduler","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A scheduler whose current time and execution can be controlled in a deterministic manner."}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestScheduler","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"}}}