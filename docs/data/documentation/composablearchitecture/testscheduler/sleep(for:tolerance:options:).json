{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestScheduler","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestScheduler\/Scheduler-Implementations"]]},"metadata":{"title":"sleep(for:tolerance:options:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sleep","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Stride"},{"kind":"text","text":", "},{"text":"tolerance","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Stride","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"SchedulerOptions","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"extendedModule":"Combine","symbolKind":"method","role":"symbol","roleHeading":"Instance Method","modules":[{"name":"ComposableArchitecture","relatedModules":["Combine"]}],"externalID":"s:7Combine9SchedulerP0A10SchedulersE5sleep3for9tolerance7optionsy0B8TimeType_6StrideQZ_AK0B7OptionsQzSgtYaKF::SYNTHESIZED::s:17CombineSchedulers13TestSchedulerC"},"abstract":[{"type":"text","text":"Suspends the current task for at least the given duration."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"sleep","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"duration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Stride"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tolerance"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Stride","kind":"typeIdentifier"},{"text":" = .zero, ","kind":"text"},{"text":"options","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SchedulerOptions","kind":"typeIdentifier"},{"text":"? = nil) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The time interval on which to sleep between yielding.","type":"text"}]}],"name":"duration"},{"name":"tolerance","content":[{"inlineContent":[{"text":"The allowed timing variance when emitting events. Defaults to ","type":"text"},{"type":"codeVoice","code":"zero"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Scheduler options passed to the timer. Defaults to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}],"name":"options"}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"If the task is cancelled before the time ends, this function throws "},{"code":"CancellationError","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This function doesnâ€™t block the scheduler.","type":"text"}]},{"syntax":null,"code":["try await in scheduler.sleep(for: .seconds(1))"],"type":"codeListing"}],"kind":"content"}],"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestScheduler\/sleep(for:tolerance:options:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/testscheduler\/sleep(for:tolerance:options:)"]}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestScheduler":{"title":"TestScheduler","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestScheduler","kind":"symbol","url":"\/documentation\/composablearchitecture\/testscheduler","navigatorTitle":[{"text":"TestScheduler","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A scheduler whose current time and execution can be controlled in a deterministic manner."}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestScheduler","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestScheduler/Scheduler-Implementations":{"title":"Scheduler Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/composablearchitecture\/testscheduler\/scheduler-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestScheduler\/Scheduler-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestScheduler/sleep(for:tolerance:options:)":{"role":"symbol","abstract":[{"type":"text","text":"Suspends the current task for at least the given duration."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestScheduler\/sleep(for:tolerance:options:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/testscheduler\/sleep(for:tolerance:options:)","title":"sleep(for:tolerance:options:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sleep","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerTimeType"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Stride"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"tolerance"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"SchedulerTimeType","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Stride","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"options","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SchedulerOptions","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic"}}}