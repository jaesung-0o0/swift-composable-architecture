{"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Throws an error if there are active sleeps on the clock."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/testclock\/checksuspension()"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"checkSuspension","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This can be useful for proving that your feature will not perform any more time-based"},{"type":"text","text":" "},{"text":"asynchrony. For example, the following will throw because the clock has an active suspension","type":"text"},{"type":"text","text":" "},{"text":"scheduled:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let clock = TestClock()","Task {","  try await clock.sleep(for: .seconds(1))","}","try await clock.checkSuspension()"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, the following will not throw because advancing the clock has finished the suspension:"}]},{"syntax":"swift","code":["let clock = TestClock()","Task {","  try await clock.sleep(for: .seconds(1))","}","await clock.advance(for: .seconds(1))","try await clock.checkSuspension()"],"type":"codeListing"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestClock\/checkSuspension()","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"ComposableArchitecture"}],"role":"symbol","platforms":[{"unavailable":false,"beta":false,"name":"iOS","introducedAt":"16.0","deprecated":false},{"deprecated":false,"introducedAt":"13.0","name":"macOS","unavailable":false,"beta":false},{"introducedAt":"16.0","name":"tvOS","deprecated":false,"unavailable":false,"beta":false},{"deprecated":false,"name":"watchOS","introducedAt":"9.0","unavailable":false,"beta":false}],"roleHeading":"Instance Method","title":"checkSuspension()","externalID":"s:6Clocks9TestClockC15checkSuspensionyyYaKF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"checkSuspension","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestClock"]]},"kind":"symbol","sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestClock/checkSuspension()":{"role":"symbol","url":"\/documentation\/composablearchitecture\/testclock\/checksuspension()","title":"checkSuspension()","type":"topic","abstract":[{"text":"Throws an error if there are active sleeps on the clock.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"checkSuspension","kind":"identifier"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestClock\/checkSuspension()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestClock":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestClock","url":"\/documentation\/composablearchitecture\/testclock","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClock","kind":"identifier"}],"role":"symbol","title":"TestClock","kind":"symbol","abstract":[{"text":"A clock whose time can be controlled in a deterministic manner.","type":"text"}],"navigatorTitle":[{"text":"TestClock","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"}}}