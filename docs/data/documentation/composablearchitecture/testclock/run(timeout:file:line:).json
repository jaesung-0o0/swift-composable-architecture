{"metadata":{"role":"symbol","externalID":"s:6Clocks9TestClockC3run7timeout4file4lineys8DurationV_s12StaticStringVSutYaF","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"timeout"},{"text":": ","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"modules":[{"name":"ComposableArchitecture"}],"title":"run(timeout:file:line:)","symbolKind":"method","platforms":[{"unavailable":false,"beta":false,"deprecated":false,"introducedAt":"16.0","name":"iOS"},{"unavailable":false,"deprecated":false,"beta":false,"name":"macOS","introducedAt":"13.0"},{"beta":false,"name":"tvOS","unavailable":false,"deprecated":false,"introducedAt":"16.0"},{"beta":false,"name":"watchOS","deprecated":false,"unavailable":false,"introducedAt":"9.0"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"run","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"timeout"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"duration"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV","text":"Duration"},{"text":" = .milliseconds(500), ","kind":"text"},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":" = ","kind":"text"},{"kind":"keyword","text":"#file"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":" = ","kind":"text"},{"kind":"keyword","text":"#line"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The amount of time to allow for all work on the clock to finish.","type":"text"}]}],"name":"duration"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This method is useful for letting a clock run to its end without having to explicitly account"},{"type":"text","text":" "},{"type":"text","text":"for each sleep. For example, suppose you have a feature that runs a timer for 10 ticks, and"},{"type":"text","text":" "},{"type":"text","text":"each tick it increments a counter. If you donâ€™t want to worry about advancing the timer for"},{"type":"text","text":" "},{"type":"text","text":"each tick, you can instead just "},{"code":"run","type":"codeVoice"},{"type":"text","text":" the clock out:"}],"type":"paragraph"},{"type":"codeListing","code":["func testTimer() async {","  let clock = TestClock()","  let model = FeatureModel(clock: clock)","","  XCTAssertEqual(model.count, 0)","  model.startTimerButtonTapped()","","  await clock.run()","  XCTAssertEqual(model.count, 10)","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"It is possible to run a clock that never finishes, hence causing a suspension that never"},{"text":" ","type":"text"},{"type":"text","text":"finishes. This can happen if you create an unbounded timer. In order to prevent holding up"},{"type":"text","text":" "},{"text":"your test suite forever, the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestClock\/run(timeout:file:line:)","isActive":true},{"text":" method will terminate and cause a","type":"text"},{"type":"text","text":" "},{"text":"test failure if a timeout duration is reached.","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/testclock\/run(timeout:file:line:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Runs the clock until it has no scheduled sleeps left."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestClock\/run(timeout:file:line:)"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestClock"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestClock":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestClock","url":"\/documentation\/composablearchitecture\/testclock","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClock","kind":"identifier"}],"role":"symbol","title":"TestClock","kind":"symbol","abstract":[{"text":"A clock whose time can be controlled in a deterministic manner.","type":"text"}],"navigatorTitle":[{"text":"TestClock","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestClock/run(timeout:file:line:)":{"abstract":[{"type":"text","text":"Runs the clock until it has no scheduled sleeps left."}],"url":"\/documentation\/composablearchitecture\/testclock\/run(timeout:file:line:)","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestClock\/run(timeout:file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"run","kind":"identifier"},{"text":"(","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"title":"run(timeout:file:line:)"}}}