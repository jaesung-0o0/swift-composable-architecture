{"kind":"symbol","abstract":[{"text":"The optional case path: a case path that unwraps an optional value.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"some","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CasePath","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"> { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CasePath\/some"},"metadata":{"roleHeading":"Type Property","modules":[{"name":"ComposableArchitecture","relatedModules":["CasePaths"]}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Root"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_OptionalProtocol"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Root.Wrapped"},{"text":".","type":"text"}]},"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"some"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"text":"<","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","symbolKind":"property","title":"some","extendedModule":"CasePaths","externalID":"s:9CasePaths0A4PathVA2A17_OptionalProtocolRz7WrappedQzRs_rlE4someACyxq_GvpZ"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CasePath"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/casepath\/some"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CasePath":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CasePath","role":"symbol","type":"topic","abstract":[{"text":"A path that supports embedding a value in a root and attempting to extract a rootâ€™s embedded","type":"text"},{"type":"text","text":" "},{"text":"value.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"CasePath","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/casepath","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CasePath","kind":"identifier"}],"title":"CasePath"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CasePath/some":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"some","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"some","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Root"},{"type":"text","text":" conforms to "},{"code":"_OptionalProtocol","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Root.Wrapped","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"type":"text","text":"The optional case path: a case path that unwraps an optional value."}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/casepath\/some","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CasePath\/some"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"}}}