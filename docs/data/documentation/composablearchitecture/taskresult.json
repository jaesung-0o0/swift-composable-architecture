{"metadata":{"roleHeading":"Enumeration","role":"symbol","symbolKind":"enum","externalID":"s:22ComposableArchitecture10TaskResultO","title":"TaskResult","modules":[{"name":"ComposableArchitecture"}],"navigatorTitle":[{"kind":"identifier","text":"TaskResult"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"TaskResult","kind":"identifier"}]},"abstract":[{"text":"A value that represents either a success or a failure. This type differs from Swift’s ","type":"text"},{"code":"Result","type":"codeVoice"},{"type":"text","text":" "},{"text":"type in that it uses only one generic for the success case, leaving the failure case as an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"untyped "},{"code":"Error","type":"codeVoice"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"]]},"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult"},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"],"type":"conformsTo"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/none","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/run(priority:operation:catch:fileID:line:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/send(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectOf"],"title":"Creating an effect"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"TaskResult","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Success"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}]}]},{"content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"This type is needed because Swift’s concurrency tools can only express untyped errors, such as","type":"text"},{"type":"text","text":" "},{"code":"async","type":"codeVoice"},{"type":"text","text":" functions and "},{"code":"AsyncSequence","type":"codeVoice"},{"text":", and so their output can realistically only be bridged to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Result<_, Error>"},{"type":"text","text":". However, "},{"type":"codeVoice","code":"Result<_, Error>"},{"text":" is never ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":" since "},{"type":"codeVoice","code":"Error"},{"type":"text","text":" is not"},{"text":" ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":", and equatability is very important for testing in the Composable Architecture. By"},{"text":" ","type":"text"},{"type":"text","text":"defining our own type we get the ability to recover equatability in most situations."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"If someday Swift gets typed ","type":"text"},{"code":"throws","type":"codeVoice"},{"type":"text","text":", then we can eliminate this type and rely solely on"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"You typically use this type as the payload of an action which receives a response from an"},{"type":"text","text":" "},{"text":"effect:","type":"text"}],"type":"paragraph"},{"code":["enum Action: Equatable {","  case factButtonTapped","  case factResponse(TaskResult<String>)","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then you can model your dependency as using simple "},{"type":"codeVoice","code":"async"},{"type":"text","text":" and "},{"type":"codeVoice","code":"throws"},{"type":"text","text":" functionality:"}]},{"type":"codeListing","syntax":"swift","code":["struct NumberFactClient {","  var fetch: (Int) async throws -> String","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"And finally you can use "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/run(priority:operation:catch:fileID:line:)","type":"reference"},{"text":" to construct an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"effect in the reducer that invokes the "},{"type":"codeVoice","code":"numberFact"},{"text":" endpoint and wraps its response in a","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","isActive":true,"type":"reference"},{"type":"text","text":" by using its catching initializer, "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/init(catching:)"},{"text":":","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["case .factButtonTapped:","  return .run { send in","    await send(","      .factResponse(","        TaskResult { try await self.numberFact.fetch(state.number) }","      )","    )","  }","","case let .factResponse(.success(fact)):","  \/\/ do something with fact","","case .factResponse(.failure):","  \/\/ handle error","","\/\/ ...","}"]},{"type":"heading","level":2,"anchor":"Equality","text":"Equality"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The biggest downside to using an untyped "},{"type":"codeVoice","code":"Error"},{"type":"text","text":" in a result type is that the result will not"},{"type":"text","text":" "},{"type":"text","text":"be equatable even if the success type is. This negatively affects your ability to test features"},{"text":" ","type":"text"},{"type":"text","text":"that use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult"},{"text":" in their actions with the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","isActive":true},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult"},{"type":"text","text":" does extra work to try to maintain equatability when possible. If the underlying"},{"text":" ","type":"text"},{"text":"type masked by the ","type":"text"},{"code":"Error","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Equatable"},{"text":", then it will use that ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":" conformance","type":"text"},{"type":"text","text":" "},{"type":"text","text":"on two failures. Luckily, most errors thrown by Apple’s frameworks are already equatable, and"},{"type":"text","text":" "},{"text":"because errors are typically simple value types, it is usually possible to have the compiler","type":"text"},{"type":"text","text":" "},{"type":"text","text":"synthesize a conformance for you."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are testing the unhappy path of a feature that feeds a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult"},{"text":" back into the","type":"text"},{"text":" ","type":"text"},{"text":"system, be sure to conform the error to equatable, or the test will fail:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Set up a failing dependency","struct RefreshFailure: Error {}","store.dependencies.apiClient.fetchFeed = { throw RefreshFailure() }","","\/\/ Simulate pull-to-refresh","store.send(.refresh) { $0.isLoading = true }","","\/\/ Assert against failure","await store.receive(.refreshResponse(.failure(RefreshFailure())) { \/\/ 🛑","  $0.errorLabelText = \"An error occurred.\"","  $0.isLoading = false","}","\/\/ 🛑 'RefreshFailure' is not equatable"]},{"inlineContent":[{"type":"text","text":"To get a passing test, explicitly conform your custom error to the "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":" protocol:"}],"type":"paragraph"},{"code":["\/\/ Set up a failing dependency","struct RefreshFailure: Error, Equatable {} \/\/ 👈","store.dependencies.apiClient.fetchFeed = { throw RefreshFailure() }","","\/\/ Simulate pull-to-refresh","store.send(.refresh) { $0.isLoading = true }","","\/\/ Assert against failure","await store.receive(.refreshResponse(.failure(RefreshFailure())) { \/\/ ✅","  $0.errorLabelText = \"An error occurred.\"","  $0.isLoading = false","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"topicSections":[{"title":"Representing a task result","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/success(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/failure(_:)"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/init(catching:)"],"title":"Converting a throwing expression"},{"title":"Accessing a result’s value","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/value"]},{"title":"Transforming results","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/map(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/flatMap(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/init(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/Hashable-Implementations"],"generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/taskresult"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/EffectOf":{"title":"EffectOf","type":"topic","abstract":[{"type":"codeVoice","code":"Reducer"},{"text":" 만 가지고 더 간단하게 ","type":"text"},{"type":"codeVoice","code":"Effect"},{"text":" 객체를 생성하기 위한 ","type":"text"},{"type":"codeVoice","code":"typealias"},{"type":"text","text":"."}],"url":"\/documentation\/composablearchitecture\/effectof","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectOf"}],"navigatorTitle":[{"kind":"identifier","text":"EffectOf"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EffectOf"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/Hashable-Implementations":{"kind":"article","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/Hashable-Implementations","title":"Hashable Implementations","url":"\/documentation\/composablearchitecture\/taskresult\/hashable-implementations","role":"collectionGroup","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"identifier"}],"title":"Reducer","role":"symbol","url":"\/documentation\/composablearchitecture\/reducer","kind":"symbol","abstract":[{"type":"text","text":"현재 앱의 상태를 주어진 액션을 가지고 어떻게 다음 상태로 변경할 지를 묘사하는 프로토콜. 또한 나중에 Store에 의해 실행되어야 할 "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"text":"가 무엇인지 묘사하고 있습니다.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"TaskResult","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/taskresult","kind":"symbol","abstract":[{"type":"text","text":"A value that represents either a success or a failure. This type differs from Swift’s "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" "},{"type":"text","text":"type in that it uses only one generic for the success case, leaving the failure case as an"},{"type":"text","text":" "},{"text":"untyped ","type":"text"},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"title":"TaskResult","navigatorTitle":[{"text":"TaskResult","kind":"identifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/map(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"NewSuccess"},{"text":">((","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"TaskResult","preciseIdentifier":"s:22ComposableArchitecture10TaskResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"NewSuccess"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/map(_:)","title":"map(_:)","url":"\/documentation\/composablearchitecture\/taskresult\/map(_:)","role":"symbol","abstract":[{"text":"Returns a new task result, mapping any success value using the given transformation.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect/send(_:)":{"title":"send(_:)","type":"topic","abstract":[{"text":"들어온 액션을 즉각 방출하는 ","type":"text"},{"type":"codeVoice","code":"Effect"},{"text":" 를 제공합니다.","type":"text"}],"url":"\/documentation\/composablearchitecture\/effect\/send(_:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture6EffectV","kind":"typeIdentifier","text":"Effect"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":">","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/send(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/init(_:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Failure","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Failure","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/init(_:)","title":"init(_:)","url":"\/documentation\/composablearchitecture\/taskresult\/init(_:)","role":"symbol","abstract":[{"text":"Transforms a ","type":"text"},{"type":"codeVoice","code":"Result"},{"type":"text","text":" into a "},{"code":"TaskResult","type":"codeVoice"},{"text":", erasing its ","type":"text"},{"code":"Failure","type":"codeVoice"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}]},"doc://ComposableArchitecture/SQ":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SQ","title":"Swift.Equatable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect/none":{"title":"none","type":"topic","abstract":[{"text":"아무것도 하지않고 즉각 종료하는 ","type":"text"},{"code":"Effect","type":"codeVoice"}],"url":"\/documentation\/composablearchitecture\/effect\/none","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"none","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Effect","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"text":">","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/none"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/failure(_:)":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"failure","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/failure(_:)","title":"TaskResult.failure(_:)","url":"\/documentation\/composablearchitecture\/taskresult\/failure(_:)","role":"symbol","abstract":[{"type":"text","text":"A failure, storing an error."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/success(_:)":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"success","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/success(_:)","title":"TaskResult.success(_:)","url":"\/documentation\/composablearchitecture\/taskresult\/success(_:)","role":"symbol","abstract":[{"type":"text","text":"A success, storing a "},{"type":"codeVoice","code":"Success"},{"text":" value.","type":"text"}]},"doc://ComposableArchitecture/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SH"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"role":"collection","url":"\/documentation\/composablearchitecture","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","type":"topic","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"title":"Effect","kind":"symbol","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"kind":"symbol","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"type":"topic","url":"\/documentation\/composablearchitecture\/teststore","title":"TestStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TestStore","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"TestStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/init(catching:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"catching","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/init(catching:)","title":"init(catching:)","url":"\/documentation\/composablearchitecture\/taskresult\/init(catching:)","role":"symbol","abstract":[{"text":"Creates a new task result by evaluating an async throwing closure, capturing the returned","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value as a success, or any thrown error as a failure."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect/run(priority:operation:catch:fileID:line:)":{"title":"run(priority:operation:catch:fileID:line:)","type":"topic","abstract":[{"text":"비동기의 단위 작업을 감싼 ","type":"text"},{"code":"Effect","type":"codeVoice"},{"type":"text","text":" 를 제공합니다. 비동기 작업은 횟수 제한없이 액션을 방출합니다."}],"url":"\/documentation\/composablearchitecture\/effect\/run(priority:operation:catch:fileid:line:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"run","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"priority"},{"kind":"text","text":": "},{"preciseIdentifier":"s:ScP","kind":"typeIdentifier","text":"TaskPriority"},{"text":"?, ","kind":"text"},{"text":"operation","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Send","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture4SendV"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":", "},{"text":"catch","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture4SendV","text":"Send","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")?, ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") -> ","kind":"text"},{"text":"Effect","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"text":">","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/run(priority:operation:catch:fileID:line:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/value":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/value","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Success"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/taskresult\/value","abstract":[{"type":"text","text":"Returns the success value as a throwing property."}],"title":"value","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/Equatable-Implementations":{"url":"\/documentation\/composablearchitecture\/taskresult\/equatable-implementations","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/Equatable-Implementations","title":"Equatable Implementations","kind":"article","abstract":[],"role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/flatMap(_:)":{"url":"\/documentation\/composablearchitecture\/taskresult\/flatmap(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"flatMap"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Success"},{"text":") -> ","kind":"text"},{"text":"TaskResult","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10TaskResultO"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture10TaskResultO","kind":"typeIdentifier","text":"TaskResult"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/flatMap(_:)","title":"flatMap(_:)","kind":"symbol","abstract":[{"type":"text","text":"Returns a new task result, mapping any success value using the given transformation and"},{"type":"text","text":" "},{"type":"text","text":"unwrapping the produced result."}],"role":"symbol"}}}