{"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Body-swift.typealias","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/composablearchitecture\/reducer\/body-swift.typealias"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"현재 리듀서의 body 를 나타내는 타입. \/\/ 6f25w","type":"text"}],"kind":"symbol","metadata":{"modules":[{"name":"ComposableArchitecture"}],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Body"}],"roleHeading":"Type Alias","symbolKind":"typealias","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Body"}],"externalID":"s:22ComposableArchitecture7ReducerP4Bodya","title":"Reducer.Body"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Body","kind":"identifier"},{"text":" = ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5_BodyQa","kind":"typeIdentifier","text":"_Body"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-8lumc"},{"type":"text","text":"를 구현하여 커스텀 리듀서를 생성할 때, 스위프트는 리턴 값으로 부터 현재의 타입을 추론합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"만약 "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/reduce(into:action:)-1t2ri","isActive":true},{"type":"text","text":" 를 구현하여 커스텀 리듀서를 생성했다면, 스위프트는 현재 타입을 "},{"type":"codeVoice","code":"Never"},{"text":" 로 추론합니다.","type":"text"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-8lumc","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder"],"title":"Reducer composition","generated":true}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"title":"Effect","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","url":"\/documentation\/composablearchitecture\/effect","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/reduce(into:action:)-1t2ri":{"role":"symbol","abstract":[{"text":"리듀서의 현재 상태를 다음 상태로 변경합니다.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/reduce(into:action:)-1t2ri","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/reduce(into:action:)-1t2ri","title":"reduce(into:action:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect"},{"kind":"text","text":"<"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","defaultImplementations":1},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/body-8lumc":{"role":"symbol","abstract":[{"type":"text","text":"다른 리듀서들과 결합한 리듀서의 컨텐츠와 행동."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-8lumc","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/body-8lumc","title":"body","required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP4Bodya","text":"Body","kind":"typeIdentifier"}],"type":"topic","defaultImplementations":1},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"text":"현재 앱의 상태를 주어진 액션을 가지고 어떻게 다음 상태로 변경할 지를 묘사하는 프로토콜. 또한 나중에 Store에 의해 실행되어야 할 ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"가 무엇인지 묘사하고 있습니다.","type":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReducerBuilder","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","abstract":[{"text":"리듀서들을 순차적으로 실행시켜 하나의 리듀서로 결합시키고 이펙트들을 머지하기 위한 ","type":"text"},{"type":"codeVoice","code":"resultBuilder"},{"text":".","type":"text"}],"url":"\/documentation\/composablearchitecture\/reducerbuilder","title":"ReducerBuilder","type":"topic","kind":"symbol","navigatorTitle":[{"text":"ReducerBuilder","kind":"identifier"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/Body-swift.typealias":{"role":"symbol","navigatorTitle":[{"text":"Body","kind":"identifier"}],"abstract":[{"text":"현재 리듀서의 body 를 나타내는 타입. \/\/ 6f25w","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Body-swift.typealias","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/body-swift.typealias","title":"Reducer.Body","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Body"}],"type":"topic"}}}