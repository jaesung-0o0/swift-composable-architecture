{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"abstract":[{"type":"text","text":"The current state."}],"metadata":{"symbolKind":"property","externalID":"s:22ComposableArchitecture9ViewStoreC5statexvp","modules":[{"name":"ComposableArchitecture"}],"role":"symbol","title":"state","roleHeading":"Instance Property","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"state"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C5Statexmfp","text":"ViewState","kind":"typeIdentifier"}]},"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/subscript(dynamicMember:)-kwxk"],"generated":true,"title":"Accessing state"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C5Statexmfp","kind":"typeIdentifier","text":"ViewState"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/viewstore\/state"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/state","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/subscript(dynamicMember:)-kwxk":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/subscript(dynamicMember:)-kwxk","url":"\/documentation\/composablearchitecture\/viewstore\/subscript(dynamicmember:)-kwxk","type":"topic","role":"symbol","title":"subscript(dynamicMember:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dynamicMember"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"ViewState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C5Statexmfp"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC13dynamicMemberqd__s7KeyPathCyxqd__G_tcluip5ValueL_qd__mfp"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC13dynamicMemberqd__s7KeyPathCyxqd__G_tcluip5ValueL_qd__mfp","text":"Value","kind":"typeIdentifier"}],"abstract":[{"text":"Returns the resulting value of a given key path.","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"title":"ViewStore","type":"topic","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"type":"text","text":" "},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewStore"}],"navigatorTitle":[{"text":"ViewStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/viewstore","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/state":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/state","url":"\/documentation\/composablearchitecture\/viewstore\/state","type":"topic","role":"symbol","title":"state","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"kind":"text","text":": "},{"text":"ViewState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C5Statexmfp"}],"abstract":[{"text":"The current state.","type":"text"}],"kind":"symbol"}}}