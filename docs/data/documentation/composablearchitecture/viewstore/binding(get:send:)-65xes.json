{"abstract":[{"type":"text","text":"Derives a binding from the store that prevents direct writes to state and instead sends"},{"type":"text","text":" "},{"type":"text","text":"actions to the store."}],"topicSections":[{"title":"Overloads","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-l66r","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(send:)-7nwak","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(send:)-705m7"]}],"seeAlsoSections":[{"title":"Bindings","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"]]},"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-65xes","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binding","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"get"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"state"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C5Statexmfp","kind":"typeIdentifier","text":"ViewState"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC7binding3get4send7SwiftUI7BindingVyqd__Gqd__xc_q_qd__ctlF5ValueL_qd__mfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"send"},{"kind":"text","text":" "},{"text":"valueToAction","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"kind":"text","text":" ("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC7binding3get4send7SwiftUI7BindingVyqd__Gqd__xc_q_qd__ctlF5ValueL_qd__mfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"text":"ViewAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C6Actionq_mfp"},{"text":") -> ","kind":"text"},{"text":"Binding","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC7binding3get4send7SwiftUI7BindingVyqd__Gqd__xc_q_qd__ctlF5ValueL_qd__mfp","text":"Value"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]},{"parameters":[{"name":"get","content":[{"type":"paragraph","inlineContent":[{"text":"A function to get the state for the binding from the view store’s full state.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A function that transforms the binding’s value into an action that can be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"sent to the store."}]}],"name":"valueToAction"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A binding.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"The method is useful for dealing with SwiftUI components that work with two-way ","type":"text"},{"type":"codeVoice","code":"Binding"},{"type":"text","text":"s"},{"type":"text","text":" "},{"type":"text","text":"since the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" does not allow directly writing its state; it only allows reading state"},{"text":" ","type":"text"},{"text":"and sending actions.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For example, a text field binding can be created like this:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["struct State { var name = \"\" }","enum Action { case nameChanged(String) }","","TextField(","  \"Enter name\",","  text: viewStore.binding(","    get: { $0.name },","    send: { Action.nameChanged($0) }","  )",")"],"syntax":"swift"}]}],"metadata":{"role":"symbol","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture9ViewStoreC7binding3get4send7SwiftUI7BindingVyqd__Gqd__xc_q_qd__ctlF","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"binding"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"get","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ViewState","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C5Statexmfp"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC7binding3get4send7SwiftUI7BindingVyqd__Gqd__xc_q_qd__ctlF5ValueL_qd__mfp"},{"kind":"text","text":", "},{"text":"send","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC7binding3get4send7SwiftUI7BindingVyqd__Gqd__xc_q_qd__ctlF5ValueL_qd__mfp","text":"Value"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C6Actionq_mfp","text":"ViewAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","kind":"typeIdentifier","text":"Binding"},{"kind":"text","text":"<"},{"text":"Value","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC7binding3get4send7SwiftUI7BindingVyqd__Gqd__xc_q_qd__ctlF5ValueL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","title":"binding(get:send:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/viewstore\/binding(get:send:)-65xes"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","url":"\/documentation\/composablearchitecture\/bindingviewstate","kind":"symbol","abstract":[{"type":"text","text":"A property wrapper type that can designate properties of view state that can be directly"},{"type":"text","text":" "},{"text":"bindable in SwiftUI views.","type":"text"}],"type":"topic","role":"symbol","title":"BindingViewState","navigatorTitle":[{"text":"BindingViewState","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BindingViewState","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewStore":{"url":"\/documentation\/composablearchitecture\/bindingviewstore","abstract":[{"type":"text","text":"A property wrapper type that can derive "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","isActive":true},{"text":" values for a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true,"type":"reference"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BindingViewStore","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"BindingViewStore","kind":"identifier"}],"title":"BindingViewStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"url":"\/documentation\/composablearchitecture\/bindingreducer","navigatorTitle":[{"text":"BindingReducer","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"바인딩 액션을 전달 받을 때, 바인딩할 수 있는 상태("},{"type":"codeVoice","code":"BindableState"},{"text":") 를 업데이트 하는 리듀서","type":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","title":"BindingReducer","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingReducer"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"title":"Store","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Store"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","url":"\/documentation\/composablearchitecture","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"type":"topic","kind":"symbol","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","role":"symbol","navigatorTitle":[{"text":"BindingState","kind":"identifier"}],"type":"topic","title":"BindingState","abstract":[{"type":"text","text":"A property wrapper type that can designate properties of app state that can be directly bindable"},{"type":"text","text":" "},{"type":"text","text":"in SwiftUI views."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/bindingstate","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(get:send:)-65xes":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/binding(get:send:)-65xes","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"binding"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"get"},{"text":": (","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"state","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C5Statexmfp","text":"ViewState"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC7binding3get4send7SwiftUI7BindingVyqd__Gqd__xc_q_qd__ctlF5ValueL_qd__mfp"},{"text":", ","kind":"text"},{"text":"send","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC7binding3get4send7SwiftUI7BindingVyqd__Gqd__xc_q_qd__ctlF5ValueL_qd__mfp","text":"Value"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C6Actionq_mfp","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding"},{"text":"<","kind":"text"},{"text":"Value","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC7binding3get4send7SwiftUI7BindingVyqd__Gqd__xc_q_qd__ctlF5ValueL_qd__mfp","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","title":"binding(get:send:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-65xes","role":"symbol","abstract":[{"type":"text","text":"Derives a binding from the store that prevents direct writes to state and instead sends"},{"text":" ","type":"text"},{"type":"text","text":"actions to the store."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(send:)-7nwak":{"type":"topic","abstract":[{"type":"text","text":"Derives a binding from the store that prevents direct writes to state and instead sends"},{"type":"text","text":" "},{"type":"text","text":"actions to the store."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"binding","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"send"},{"kind":"text","text":": ("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"state","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C5Statexmfp","text":"ViewState"},{"kind":"text","text":") -> "},{"text":"ViewAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C6Actionq_mfp"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C5Statexmfp","text":"ViewState"},{"text":">","kind":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/binding(send:)-7nwak","title":"binding(send:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(send:)-7nwak"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","url":"\/documentation\/composablearchitecture\/bindingaction","abstract":[{"type":"text","text":"An action that describes simple mutations to some root state at a writable key path."}],"type":"topic","role":"symbol","title":"BindingAction","navigatorTitle":[{"kind":"identifier","text":"BindingAction"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BindingAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(get:send:)-l66r":{"type":"topic","url":"\/documentation\/composablearchitecture\/viewstore\/binding(get:send:)-l66r","kind":"symbol","role":"symbol","abstract":[{"text":"Derives a binding from the store that prevents direct writes to state and instead sends","type":"text"},{"text":" ","type":"text"},{"text":"actions to the store.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(get:send:)-l66r","title":"binding(get:send:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binding","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"get","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"state"},{"text":": ","kind":"text"},{"text":"ViewState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C5Statexmfp"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC7binding3get4send7SwiftUI7BindingVyqd__Gqd__xc_q_tlF5ValueL_qd__mfp","text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"send"},{"kind":"text","text":": "},{"text":"ViewAction","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C6Actionq_mfp","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","kind":"typeIdentifier","text":"Binding"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC7binding3get4send7SwiftUI7BindingVyqd__Gqd__xc_q_tlF5ValueL_qd__mfp"},{"kind":"text","text":">"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction":{"abstract":[{"type":"text","text":"An action type that exposes a "},{"type":"codeVoice","code":"binding"},{"text":" case that holds a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction"},{"type":"text","text":"."}],"url":"\/documentation\/composablearchitecture\/bindableaction","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindableAction"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"BindableAction","kind":"identifier"}],"title":"BindableAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"title":"ViewStore","type":"topic","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"type":"text","text":" "},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewStore"}],"navigatorTitle":[{"text":"ViewStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/viewstore","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/binding(send:)-705m7":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/binding(send:)-705m7","type":"topic","abstract":[{"type":"text","text":"Derives a binding from the store that prevents direct writes to state and instead sends"},{"text":" ","type":"text"},{"type":"text","text":"actions to the store."}],"title":"binding(send:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binding","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"send"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C6Actionq_mfp","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9ViewStoreC0C5Statexmfp","text":"ViewState"},{"text":">","kind":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/binding(send:)-705m7","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Bindings":{"kind":"article","abstract":[{"text":"Learn how to connect features written in the Composable Architecture to SwiftUI bindings.","type":"text"}],"url":"\/documentation\/composablearchitecture\/bindings","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","title":"Working with SwiftUI bindings","role":"article","type":"topic"}}}